{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 255,
   "metadata": {},
   "outputs": [],
   "source": [
    "#load libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "%matplotlib inline\n",
    "import random\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 256,
   "metadata": {},
   "outputs": [],
   "source": [
    "#First, load CCG file from the ODS https://files.digital.nhs.uk/assets/ods/current/eccg.zip\n",
    "import pandas as pd\n",
    "path = '/Users/michaelshemko/Downloads/eccg/' \n",
    "filename_ccg=path + 'eccg.csv'\n",
    "lookup_ccg = pd.read_csv(filename_ccg, names=[\"org_code\", \"name\", \"national_group\", \"high_geog\", \"address1\", \"address2\", \"address3\", \"address4\", \"address5\", \"postcode\", \"open_date\", \"close_date\", \"col3\", \"orgsub\", \"col15\", \"col16\", \"col17\", \"col18\", \"col19\", \"col20\", \"col21\", \"col22\", \"col23\", \"col24\", \"col25\", \"col26\", \"col27\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 257,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(243, 27)"
      ]
     },
     "execution_count": 257,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#This gives us all the CCGs, which we can use to map the London CCGs\n",
    "#We need CCG codes for London, which we will then map to a subset of \n",
    "#London GP practices\n",
    "lookup_ccg.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 258,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>org_code</th>\n",
       "      <th>name</th>\n",
       "      <th>national_group</th>\n",
       "      <th>high_geog</th>\n",
       "      <th>address1</th>\n",
       "      <th>address2</th>\n",
       "      <th>address3</th>\n",
       "      <th>address4</th>\n",
       "      <th>address5</th>\n",
       "      <th>postcode</th>\n",
       "      <th>...</th>\n",
       "      <th>col18</th>\n",
       "      <th>col19</th>\n",
       "      <th>col20</th>\n",
       "      <th>col21</th>\n",
       "      <th>col22</th>\n",
       "      <th>col23</th>\n",
       "      <th>col24</th>\n",
       "      <th>col25</th>\n",
       "      <th>col26</th>\n",
       "      <th>col27</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>00C</td>\n",
       "      <td>NHS DARLINGTON CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q74</td>\n",
       "      <td>C/O BILLINGHAM HEALTH CENTRE</td>\n",
       "      <td>QUEENSWAY</td>\n",
       "      <td>NaN</td>\n",
       "      <td>BILLINGHAM</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS23 2LA</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>00D</td>\n",
       "      <td>NHS DURHAM DALES, EASINGTON AND SEDGEFIELD CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q74</td>\n",
       "      <td>SEDGEFIELD COMMUNITY HOSPITAL</td>\n",
       "      <td>SALTERS LANE</td>\n",
       "      <td>SEDGEFIELD</td>\n",
       "      <td>STOCKTON-ON-TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS21 3EE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>00J</td>\n",
       "      <td>NHS NORTH DURHAM CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q74</td>\n",
       "      <td>SEDGEFIELD COMMUNITY HOSPITAL</td>\n",
       "      <td>SALTERS LANE</td>\n",
       "      <td>SEDGEFIELD</td>\n",
       "      <td>STOCKTON-ON-TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS21 3EE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>00K</td>\n",
       "      <td>NHS HARTLEPOOL AND STOCKTON-ON-TEES CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q74</td>\n",
       "      <td>BILLINGHAM HEALTH CENTRE</td>\n",
       "      <td>QUEENSWAY</td>\n",
       "      <td>NaN</td>\n",
       "      <td>BILLINGHAM</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS23 2LA</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>00L</td>\n",
       "      <td>NHS NORTHUMBERLAND CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q74</td>\n",
       "      <td>COUNTY HALL</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>MORPETH</td>\n",
       "      <td>NORTHUMBERLAND</td>\n",
       "      <td>NE61 2EF</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>00M</td>\n",
       "      <td>NHS SOUTH TEES CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q74</td>\n",
       "      <td>NORTH ORMESBY HEALTH VILLAGE</td>\n",
       "      <td>11 TRINITY MEWS</td>\n",
       "      <td>NORTH ORMESBY</td>\n",
       "      <td>MIDDLESBROUGH</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS3 6AL</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>00N</td>\n",
       "      <td>NHS SOUTH TYNESIDE CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q74</td>\n",
       "      <td>MONKTON HALL</td>\n",
       "      <td>MONKTON LANE</td>\n",
       "      <td>MONKTON VILLAGE</td>\n",
       "      <td>JARROW</td>\n",
       "      <td>TYNE AND WEAR</td>\n",
       "      <td>NE32 5NN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>00P</td>\n",
       "      <td>NHS SUNDERLAND CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q74</td>\n",
       "      <td>PEMBERTON HOUSE</td>\n",
       "      <td>COLIMA AVENUE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SUNDERLAND</td>\n",
       "      <td>TYNE AND WEAR</td>\n",
       "      <td>SR5 3XB</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>00Q</td>\n",
       "      <td>NHS BLACKBURN WITH DARWEN CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q84</td>\n",
       "      <td>FUSION HOUSE</td>\n",
       "      <td>EVOLUTION PARK</td>\n",
       "      <td>HASLINGDEN ROAD</td>\n",
       "      <td>BLACKBURN</td>\n",
       "      <td>LANCASHIRE</td>\n",
       "      <td>BB1 2FD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>00R</td>\n",
       "      <td>NHS BLACKPOOL CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q84</td>\n",
       "      <td>THE STADIUM</td>\n",
       "      <td>SEASIDERS WAY</td>\n",
       "      <td>NaN</td>\n",
       "      <td>BLACKPOOL</td>\n",
       "      <td>LANCASHIRE</td>\n",
       "      <td>FY1 6JX</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>00T</td>\n",
       "      <td>NHS BOLTON CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q83</td>\n",
       "      <td>ST PETERS HOUSE</td>\n",
       "      <td>SILVERWELL STREET</td>\n",
       "      <td>NaN</td>\n",
       "      <td>BOLTON</td>\n",
       "      <td>LANCASHIRE</td>\n",
       "      <td>BL1 1PP</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>00V</td>\n",
       "      <td>NHS BURY CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q83</td>\n",
       "      <td>TOWNSIDE PRIMARY CARE CENTRE</td>\n",
       "      <td>1 KNOWSLEY PLACE</td>\n",
       "      <td>KNOWSLEY STREET</td>\n",
       "      <td>BURY</td>\n",
       "      <td>LANCASHIRE</td>\n",
       "      <td>BL9 0SN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>00X</td>\n",
       "      <td>NHS CHORLEY AND SOUTH RIBBLE CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q84</td>\n",
       "      <td>JUBILEE HOUSE</td>\n",
       "      <td>LANCASHIRE ENTERPRISE BUSINESS PARK</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LEYLAND</td>\n",
       "      <td>LANCASHIRE</td>\n",
       "      <td>PR26 6TR</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>00Y</td>\n",
       "      <td>NHS OLDHAM CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q83</td>\n",
       "      <td>ELLEN HOUSE</td>\n",
       "      <td>WADDINGTON STREET</td>\n",
       "      <td>NaN</td>\n",
       "      <td>OLDHAM</td>\n",
       "      <td>LANCASHIRE</td>\n",
       "      <td>OL9 6EE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>01A</td>\n",
       "      <td>NHS EAST LANCASHIRE CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q84</td>\n",
       "      <td>WALSHAW HOUSE</td>\n",
       "      <td>REGENT STREET</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NELSON</td>\n",
       "      <td>LANCASHIRE</td>\n",
       "      <td>BB9 8AS</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>01C</td>\n",
       "      <td>NHS EASTERN CHESHIRE CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q75</td>\n",
       "      <td>1ST FLOOR</td>\n",
       "      <td>WEST WING</td>\n",
       "      <td>NEW ALDERLERY HOUSE</td>\n",
       "      <td>VICTORIA ROAD MACCLESFIELD</td>\n",
       "      <td>CHESHIRE</td>\n",
       "      <td>SK10 3BL</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>01D</td>\n",
       "      <td>NHS HEYWOOD, MIDDLETON AND ROCHDALE CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q83</td>\n",
       "      <td>3RD FLOOR</td>\n",
       "      <td>NUMBER ONE RIVERSIDE</td>\n",
       "      <td>SMITH STREET</td>\n",
       "      <td>ROCHDALE</td>\n",
       "      <td>LANCASHIRE</td>\n",
       "      <td>OL16 1XU</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>01E</td>\n",
       "      <td>NHS GREATER PRESTON CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q84</td>\n",
       "      <td>JUBILEE HOUSE</td>\n",
       "      <td>LANCASHIRE ENTERPRISE BUSINESS PARK</td>\n",
       "      <td>CENTURION WAY</td>\n",
       "      <td>LEYLAND</td>\n",
       "      <td>LANCASHIRE</td>\n",
       "      <td>PR26 6TR</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>01F</td>\n",
       "      <td>NHS HALTON CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q75</td>\n",
       "      <td>FIRST FLOOR</td>\n",
       "      <td>RUNCORN TOWN HALL</td>\n",
       "      <td>HEATH ROAD</td>\n",
       "      <td>RUNCORN</td>\n",
       "      <td>CHESHIRE</td>\n",
       "      <td>WA7 5TD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>01G</td>\n",
       "      <td>NHS SALFORD CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q83</td>\n",
       "      <td>ST JAMES HOUSE - 7TH FLOOR</td>\n",
       "      <td>PENDLETON WAY</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SALFORD</td>\n",
       "      <td>LANCASHIRE</td>\n",
       "      <td>M6 5FW</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>01H</td>\n",
       "      <td>NHS NORTH CUMBRIA CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q74</td>\n",
       "      <td>UNIT 4</td>\n",
       "      <td>HACKTHORPE HALL BUSINESS CENTRE</td>\n",
       "      <td>HACKTHORPE</td>\n",
       "      <td>PENRITH</td>\n",
       "      <td>CUMBRIA</td>\n",
       "      <td>CA10 2HX</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>01J</td>\n",
       "      <td>NHS KNOWSLEY CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q75</td>\n",
       "      <td>NUTGROVE VILLA</td>\n",
       "      <td>WESTMORLAND ROAD</td>\n",
       "      <td>HUYTON</td>\n",
       "      <td>LIVERPOOL</td>\n",
       "      <td>MERSEYSIDE</td>\n",
       "      <td>L36 6GA</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>01K</td>\n",
       "      <td>NHS MORECAMBE BAY CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q84</td>\n",
       "      <td>MOOR LANE MILLS</td>\n",
       "      <td>MOOR LANE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LANCASTER</td>\n",
       "      <td>LANCASHIRE</td>\n",
       "      <td>LA1 1QD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>01R</td>\n",
       "      <td>NHS SOUTH CHESHIRE CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q75</td>\n",
       "      <td>BEVAN HOUSE</td>\n",
       "      <td>BARONY COURT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NANTWICH</td>\n",
       "      <td>CHESHIRE</td>\n",
       "      <td>CW5 5QU</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>01T</td>\n",
       "      <td>NHS SOUTH SEFTON CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q75</td>\n",
       "      <td>3RD FLOOR</td>\n",
       "      <td>MERTON HOUSE</td>\n",
       "      <td>STANLEY ROAD</td>\n",
       "      <td>BOOTLE</td>\n",
       "      <td>MERSEYSIDE</td>\n",
       "      <td>L20 3DL</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>01V</td>\n",
       "      <td>NHS SOUTHPORT AND FORMBY CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q75</td>\n",
       "      <td>5 CURZON ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SOUTHPORT</td>\n",
       "      <td>MERSEYSIDE</td>\n",
       "      <td>PR8 6PL</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>01W</td>\n",
       "      <td>NHS STOCKPORT CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q83</td>\n",
       "      <td>REGENT HOUSE</td>\n",
       "      <td>HEATON LANE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>STOCKPORT</td>\n",
       "      <td>CHESHIRE</td>\n",
       "      <td>SK4 1BS</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>01X</td>\n",
       "      <td>NHS ST HELENS CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q75</td>\n",
       "      <td>ST HELENS CHAMBER OF COMMERCE</td>\n",
       "      <td>SALISBURY STREET</td>\n",
       "      <td>CHALON WAY</td>\n",
       "      <td>ST. HELENS</td>\n",
       "      <td>MERSEYSIDE</td>\n",
       "      <td>WA10 1FY</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>01Y</td>\n",
       "      <td>NHS TAMESIDE AND GLOSSOP CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q83</td>\n",
       "      <td>NEW CENTURY HOUSE</td>\n",
       "      <td>PROGRESS WAY</td>\n",
       "      <td>DENTON</td>\n",
       "      <td>MANCHESTER</td>\n",
       "      <td>GREATER MANCHESTER</td>\n",
       "      <td>M34 2GP</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>02A</td>\n",
       "      <td>NHS TRAFFORD CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q83</td>\n",
       "      <td>FIRST FLOOR</td>\n",
       "      <td>CROSSGATE HOUSE</td>\n",
       "      <td>CROSS STREET</td>\n",
       "      <td>SALE</td>\n",
       "      <td>CHESHIRE</td>\n",
       "      <td>M33 7FT</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>213</th>\n",
       "      <td>14Q</td>\n",
       "      <td>NORTH MIDLANDS - H&amp;J COMMISSIONING HUB</td>\n",
       "      <td>Y55</td>\n",
       "      <td>Q76</td>\n",
       "      <td>C/O NHS ENGLAND</td>\n",
       "      <td>1W09, FIRST FLOOR, QUARRY HOUSE</td>\n",
       "      <td>QUARRY HILL</td>\n",
       "      <td>LEEDS</td>\n",
       "      <td>WEST YORKSHIRE</td>\n",
       "      <td>LS2 7UE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>214</th>\n",
       "      <td>14R</td>\n",
       "      <td>EAST - H&amp;J COMMISSIONING HUB</td>\n",
       "      <td>Y55</td>\n",
       "      <td>Q79</td>\n",
       "      <td>C/O NHS ENGLAND</td>\n",
       "      <td>1W09, 1ST FLOOR, QUARRY HOUSE</td>\n",
       "      <td>QUARRY HILL</td>\n",
       "      <td>LEEDS</td>\n",
       "      <td>WEST YORKSHIRE</td>\n",
       "      <td>LS2 7UE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>215</th>\n",
       "      <td>14T</td>\n",
       "      <td>SOUTH WEST - H&amp;J COMMISSIONING HUB</td>\n",
       "      <td>Y58</td>\n",
       "      <td>Q85</td>\n",
       "      <td>C/O NHS ENGLAND</td>\n",
       "      <td>1W09, 1ST FLOOR, QUARRY HOUSE</td>\n",
       "      <td>QUARRY HILL</td>\n",
       "      <td>LEEDS</td>\n",
       "      <td>WEST YORKSHIRE</td>\n",
       "      <td>LS2 7UE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216</th>\n",
       "      <td>14V</td>\n",
       "      <td>SOUTH EAST - H&amp;J COMMISSIONING HUB</td>\n",
       "      <td>Y59</td>\n",
       "      <td>Q88</td>\n",
       "      <td>C/O NHS ENGLAND</td>\n",
       "      <td>1W09, 1ST FLOOR, QUARRY HOUSE</td>\n",
       "      <td>QUARRY HILL</td>\n",
       "      <td>LEEDS</td>\n",
       "      <td>WEST YORKSHIRE</td>\n",
       "      <td>LS2 7UE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>217</th>\n",
       "      <td>14W</td>\n",
       "      <td>SOUTH CENTRAL - H&amp;J COMMISSIONING HUB</td>\n",
       "      <td>Y59</td>\n",
       "      <td>Q87</td>\n",
       "      <td>C/O NHS ENGLAND</td>\n",
       "      <td>1W09, 1ST FLOOR, QUARRY HOUSE</td>\n",
       "      <td>QUARRY HILL</td>\n",
       "      <td>LEEDS</td>\n",
       "      <td>WEST YORKSHIRE</td>\n",
       "      <td>LS2 7UE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>218</th>\n",
       "      <td>14X</td>\n",
       "      <td>LANCASHIRE - H&amp;J COMMISSIONING HUB</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q84</td>\n",
       "      <td>C/O NHS ENGLAND</td>\n",
       "      <td>1W09, 1ST FLOOR, QUARRY HOUSE</td>\n",
       "      <td>QUARRY HILL</td>\n",
       "      <td>LEEDS</td>\n",
       "      <td>WEST YORKSHIRE</td>\n",
       "      <td>LS2 7UE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>219</th>\n",
       "      <td>14Y</td>\n",
       "      <td>NHS BUCKINGHAMSHIRE CCG</td>\n",
       "      <td>Y59</td>\n",
       "      <td>Q87</td>\n",
       "      <td>SECOND FLOOR</td>\n",
       "      <td>THE GATEWAY</td>\n",
       "      <td>GATEHOUSE ROAD</td>\n",
       "      <td>AYLESBURY</td>\n",
       "      <td>BUCKINGHAMSHIRE</td>\n",
       "      <td>HP19 8FF</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>220</th>\n",
       "      <td>15A</td>\n",
       "      <td>NHS BERKSHIRE WEST CCG</td>\n",
       "      <td>Y59</td>\n",
       "      <td>Q87</td>\n",
       "      <td>57-59 BATH ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>READING</td>\n",
       "      <td>BERKSHIRE</td>\n",
       "      <td>RG30 2BA</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>221</th>\n",
       "      <td>15C</td>\n",
       "      <td>NHS BRISTOL, NORTH SOMERSET AND SOUTH GLOUCEST...</td>\n",
       "      <td>Y58</td>\n",
       "      <td>Q86</td>\n",
       "      <td>SOUTH PLAZA</td>\n",
       "      <td>MARLBOROUGH STREET</td>\n",
       "      <td>NaN</td>\n",
       "      <td>BRISTOL</td>\n",
       "      <td>AVON</td>\n",
       "      <td>BS1 3NX</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>222</th>\n",
       "      <td>15D</td>\n",
       "      <td>NHS EAST BERKSHIRE CCG</td>\n",
       "      <td>Y59</td>\n",
       "      <td>Q87</td>\n",
       "      <td>KING EDWARD VII HOSPITAL</td>\n",
       "      <td>ST. LEONARDS ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>WINDSOR</td>\n",
       "      <td>BERKSHIRE</td>\n",
       "      <td>SL4 3DP</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>223</th>\n",
       "      <td>15E</td>\n",
       "      <td>NHS BIRMINGHAM AND SOLIHULL CCG</td>\n",
       "      <td>Y55</td>\n",
       "      <td>Q77</td>\n",
       "      <td>BARTHOLOMEW HOUSE</td>\n",
       "      <td>142 HAGLEY ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>BIRMINGHAM</td>\n",
       "      <td>WEST MIDLANDS</td>\n",
       "      <td>B16 9PA</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>224</th>\n",
       "      <td>15F</td>\n",
       "      <td>NHS LEEDS CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q72</td>\n",
       "      <td>UNITS B5-B9 WIRA BUSINESS PARK</td>\n",
       "      <td>WEST PARK RING ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LEEDS</td>\n",
       "      <td>WEST YORKSHIRE</td>\n",
       "      <td>LS16 6EB</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225</th>\n",
       "      <td>15G</td>\n",
       "      <td>SOUTH WEST SOUTH COMMISSIONING HUB</td>\n",
       "      <td>Y58</td>\n",
       "      <td>Q85</td>\n",
       "      <td>NHS ENGLAND</td>\n",
       "      <td>QUARRY HOUSE</td>\n",
       "      <td>QUARRY HILL</td>\n",
       "      <td>LEEDS</td>\n",
       "      <td>WEST YORKSHIRE</td>\n",
       "      <td>LS2 7UE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>226</th>\n",
       "      <td>15H</td>\n",
       "      <td>SOUTH WEST NORTH COMMISSIONING HUB</td>\n",
       "      <td>Y58</td>\n",
       "      <td>Q86</td>\n",
       "      <td>NHS ENGLAND</td>\n",
       "      <td>QUARRY HOUSE</td>\n",
       "      <td>QUARRY HILL</td>\n",
       "      <td>LEEDS</td>\n",
       "      <td>WEST YORKSHIRE</td>\n",
       "      <td>LS2 7UE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>227</th>\n",
       "      <td>15J</td>\n",
       "      <td>HAMPSHIRE, ISLE OF WIGHT AND THAMES VALLEY COM...</td>\n",
       "      <td>Y59</td>\n",
       "      <td>Q87</td>\n",
       "      <td>NHS ENGLAND</td>\n",
       "      <td>QUARRY HOUSE</td>\n",
       "      <td>QUARRY HILL</td>\n",
       "      <td>LEEDS</td>\n",
       "      <td>WEST YORKSHIRE</td>\n",
       "      <td>LS2 7UE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>228</th>\n",
       "      <td>15K</td>\n",
       "      <td>KENT, SURREY AND SUSSEX COMMISSIONING HUB</td>\n",
       "      <td>Y59</td>\n",
       "      <td>Q88</td>\n",
       "      <td>NHS ENGLAND</td>\n",
       "      <td>QUARRY HOUSE</td>\n",
       "      <td>QUARRY HILL</td>\n",
       "      <td>LEEDS</td>\n",
       "      <td>WEST YORKSHIRE</td>\n",
       "      <td>LS2 7UE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>229</th>\n",
       "      <td>15L</td>\n",
       "      <td>NATIONAL COMMISSIONING HUB 2</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q72</td>\n",
       "      <td>C/O NHS ENGLAND</td>\n",
       "      <td>1W09, IST FLOOR, QUARRY HOUSE</td>\n",
       "      <td>QUARRY HILL</td>\n",
       "      <td>LEEDS</td>\n",
       "      <td>WEST YORKSHIRE</td>\n",
       "      <td>LS2 7UE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230</th>\n",
       "      <td>99A</td>\n",
       "      <td>NHS LIVERPOOL CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q75</td>\n",
       "      <td>1 ARTHOUSE SQUARE</td>\n",
       "      <td>61-69 SEEL STREET</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIVERPOOL</td>\n",
       "      <td>MERSEYSIDE</td>\n",
       "      <td>L1 4AZ</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>231</th>\n",
       "      <td>99C</td>\n",
       "      <td>NHS NORTH TYNESIDE CCG</td>\n",
       "      <td>Y54</td>\n",
       "      <td>Q74</td>\n",
       "      <td>12 HEDLEY COURT</td>\n",
       "      <td>ORION BUSINESS PARK</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NORTH SHIELDS</td>\n",
       "      <td>TYNE AND WEAR</td>\n",
       "      <td>NE29 7ST</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>99D</td>\n",
       "      <td>NHS SOUTH LINCOLNSHIRE CCG</td>\n",
       "      <td>Y55</td>\n",
       "      <td>Q78</td>\n",
       "      <td>CROSS O CLIFF</td>\n",
       "      <td>BRACEBRIDGE HEATH</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LINCOLN</td>\n",
       "      <td>LINCOLNSHIRE</td>\n",
       "      <td>LN4 2HN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233</th>\n",
       "      <td>99E</td>\n",
       "      <td>NHS BASILDON AND BRENTWOOD CCG</td>\n",
       "      <td>Y55</td>\n",
       "      <td>Q79</td>\n",
       "      <td>PHOENIX HOUSE</td>\n",
       "      <td>CHRISTOPHER MARTIN ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>BASILDON</td>\n",
       "      <td>ESSEX</td>\n",
       "      <td>SS14 3HG</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234</th>\n",
       "      <td>99F</td>\n",
       "      <td>NHS CASTLE POINT AND ROCHFORD CCG</td>\n",
       "      <td>Y55</td>\n",
       "      <td>Q79</td>\n",
       "      <td>PHOENIX HOUSE</td>\n",
       "      <td>CHRISTOPHER MARTIN ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>BASILDON</td>\n",
       "      <td>ESSEX</td>\n",
       "      <td>SS14 3HG</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>99G</td>\n",
       "      <td>NHS SOUTHEND CCG</td>\n",
       "      <td>Y55</td>\n",
       "      <td>Q79</td>\n",
       "      <td>HARCOURT HOUSE</td>\n",
       "      <td>5-15 HARCOURT AVENUE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SOUTHEND-ON-SEA</td>\n",
       "      <td>ESSEX</td>\n",
       "      <td>SS2 6HT</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>99H</td>\n",
       "      <td>NHS SURREY DOWNS CCG</td>\n",
       "      <td>Y59</td>\n",
       "      <td>Q88</td>\n",
       "      <td>PASCAL PLACE</td>\n",
       "      <td>RANDALS WAY</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LEATHERHEAD</td>\n",
       "      <td>SURREY</td>\n",
       "      <td>KT22 7TW</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>99J</td>\n",
       "      <td>NHS WEST KENT CCG</td>\n",
       "      <td>Y59</td>\n",
       "      <td>Q88</td>\n",
       "      <td>WHARF HOUSE</td>\n",
       "      <td>MEDWAY WHARF ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TONBRIDGE</td>\n",
       "      <td>KENT</td>\n",
       "      <td>TN9 1RE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238</th>\n",
       "      <td>99K</td>\n",
       "      <td>NHS HIGH WEALD LEWES HAVENS CCG</td>\n",
       "      <td>Y59</td>\n",
       "      <td>Q88</td>\n",
       "      <td>36-38 FRIARS WALK</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LEWES</td>\n",
       "      <td>EAST SUSSEX</td>\n",
       "      <td>BN7 2PB</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>239</th>\n",
       "      <td>99M</td>\n",
       "      <td>NHS NORTH EAST HAMPSHIRE AND FARNHAM CCG</td>\n",
       "      <td>Y59</td>\n",
       "      <td>Q87</td>\n",
       "      <td>ALDERSHOT CENTRE FOR HEALTH</td>\n",
       "      <td>HOSPITAL HILL</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ALDERSHOT</td>\n",
       "      <td>HAMPSHIRE</td>\n",
       "      <td>GU11 1AY</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>240</th>\n",
       "      <td>99N</td>\n",
       "      <td>NHS WILTSHIRE CCG</td>\n",
       "      <td>Y58</td>\n",
       "      <td>Q86</td>\n",
       "      <td>SOUTHGATE HOUSE</td>\n",
       "      <td>PANS LANE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DEVIZES</td>\n",
       "      <td>WILTSHIRE</td>\n",
       "      <td>SN10 5EQ</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>241</th>\n",
       "      <td>99P</td>\n",
       "      <td>NHS NORTHERN, EASTERN AND WESTERN DEVON CCG</td>\n",
       "      <td>Y58</td>\n",
       "      <td>Q85</td>\n",
       "      <td>NEWCOURT HOUSE</td>\n",
       "      <td>OLD RYDON LANE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>EXETER</td>\n",
       "      <td>DEVON</td>\n",
       "      <td>EX2 7JU</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>99Q</td>\n",
       "      <td>NHS SOUTH DEVON AND TORBAY CCG</td>\n",
       "      <td>Y58</td>\n",
       "      <td>Q85</td>\n",
       "      <td>POMONA HOUSE</td>\n",
       "      <td>OAK VIEW CLOSE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TORQUAY</td>\n",
       "      <td>DEVON</td>\n",
       "      <td>TQ2 7FF</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>243 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    org_code                                               name  \\\n",
       "0        00C                                 NHS DARLINGTON CCG   \n",
       "1        00D     NHS DURHAM DALES, EASINGTON AND SEDGEFIELD CCG   \n",
       "2        00J                               NHS NORTH DURHAM CCG   \n",
       "3        00K            NHS HARTLEPOOL AND STOCKTON-ON-TEES CCG   \n",
       "4        00L                             NHS NORTHUMBERLAND CCG   \n",
       "5        00M                                 NHS SOUTH TEES CCG   \n",
       "6        00N                             NHS SOUTH TYNESIDE CCG   \n",
       "7        00P                                 NHS SUNDERLAND CCG   \n",
       "8        00Q                      NHS BLACKBURN WITH DARWEN CCG   \n",
       "9        00R                                  NHS BLACKPOOL CCG   \n",
       "10       00T                                     NHS BOLTON CCG   \n",
       "11       00V                                       NHS BURY CCG   \n",
       "12       00X                   NHS CHORLEY AND SOUTH RIBBLE CCG   \n",
       "13       00Y                                     NHS OLDHAM CCG   \n",
       "14       01A                            NHS EAST LANCASHIRE CCG   \n",
       "15       01C                           NHS EASTERN CHESHIRE CCG   \n",
       "16       01D            NHS HEYWOOD, MIDDLETON AND ROCHDALE CCG   \n",
       "17       01E                            NHS GREATER PRESTON CCG   \n",
       "18       01F                                     NHS HALTON CCG   \n",
       "19       01G                                    NHS SALFORD CCG   \n",
       "20       01H                              NHS NORTH CUMBRIA CCG   \n",
       "21       01J                                   NHS KNOWSLEY CCG   \n",
       "22       01K                              NHS MORECAMBE BAY CCG   \n",
       "23       01R                             NHS SOUTH CHESHIRE CCG   \n",
       "24       01T                               NHS SOUTH SEFTON CCG   \n",
       "25       01V                       NHS SOUTHPORT AND FORMBY CCG   \n",
       "26       01W                                  NHS STOCKPORT CCG   \n",
       "27       01X                                  NHS ST HELENS CCG   \n",
       "28       01Y                       NHS TAMESIDE AND GLOSSOP CCG   \n",
       "29       02A                                   NHS TRAFFORD CCG   \n",
       "..       ...                                                ...   \n",
       "213      14Q             NORTH MIDLANDS - H&J COMMISSIONING HUB   \n",
       "214      14R                       EAST - H&J COMMISSIONING HUB   \n",
       "215      14T                 SOUTH WEST - H&J COMMISSIONING HUB   \n",
       "216      14V                 SOUTH EAST - H&J COMMISSIONING HUB   \n",
       "217      14W              SOUTH CENTRAL - H&J COMMISSIONING HUB   \n",
       "218      14X                 LANCASHIRE - H&J COMMISSIONING HUB   \n",
       "219      14Y                            NHS BUCKINGHAMSHIRE CCG   \n",
       "220      15A                             NHS BERKSHIRE WEST CCG   \n",
       "221      15C  NHS BRISTOL, NORTH SOMERSET AND SOUTH GLOUCEST...   \n",
       "222      15D                             NHS EAST BERKSHIRE CCG   \n",
       "223      15E                    NHS BIRMINGHAM AND SOLIHULL CCG   \n",
       "224      15F                                      NHS LEEDS CCG   \n",
       "225      15G                 SOUTH WEST SOUTH COMMISSIONING HUB   \n",
       "226      15H                 SOUTH WEST NORTH COMMISSIONING HUB   \n",
       "227      15J  HAMPSHIRE, ISLE OF WIGHT AND THAMES VALLEY COM...   \n",
       "228      15K          KENT, SURREY AND SUSSEX COMMISSIONING HUB   \n",
       "229      15L                       NATIONAL COMMISSIONING HUB 2   \n",
       "230      99A                                  NHS LIVERPOOL CCG   \n",
       "231      99C                             NHS NORTH TYNESIDE CCG   \n",
       "232      99D                         NHS SOUTH LINCOLNSHIRE CCG   \n",
       "233      99E                     NHS BASILDON AND BRENTWOOD CCG   \n",
       "234      99F                  NHS CASTLE POINT AND ROCHFORD CCG   \n",
       "235      99G                                   NHS SOUTHEND CCG   \n",
       "236      99H                               NHS SURREY DOWNS CCG   \n",
       "237      99J                                  NHS WEST KENT CCG   \n",
       "238      99K                    NHS HIGH WEALD LEWES HAVENS CCG   \n",
       "239      99M           NHS NORTH EAST HAMPSHIRE AND FARNHAM CCG   \n",
       "240      99N                                  NHS WILTSHIRE CCG   \n",
       "241      99P        NHS NORTHERN, EASTERN AND WESTERN DEVON CCG   \n",
       "242      99Q                     NHS SOUTH DEVON AND TORBAY CCG   \n",
       "\n",
       "    national_group high_geog                        address1  \\\n",
       "0              Y54       Q74    C/O BILLINGHAM HEALTH CENTRE   \n",
       "1              Y54       Q74   SEDGEFIELD COMMUNITY HOSPITAL   \n",
       "2              Y54       Q74   SEDGEFIELD COMMUNITY HOSPITAL   \n",
       "3              Y54       Q74        BILLINGHAM HEALTH CENTRE   \n",
       "4              Y54       Q74                     COUNTY HALL   \n",
       "5              Y54       Q74    NORTH ORMESBY HEALTH VILLAGE   \n",
       "6              Y54       Q74                    MONKTON HALL   \n",
       "7              Y54       Q74                 PEMBERTON HOUSE   \n",
       "8              Y54       Q84                    FUSION HOUSE   \n",
       "9              Y54       Q84                     THE STADIUM   \n",
       "10             Y54       Q83                 ST PETERS HOUSE   \n",
       "11             Y54       Q83    TOWNSIDE PRIMARY CARE CENTRE   \n",
       "12             Y54       Q84                   JUBILEE HOUSE   \n",
       "13             Y54       Q83                     ELLEN HOUSE   \n",
       "14             Y54       Q84                   WALSHAW HOUSE   \n",
       "15             Y54       Q75                       1ST FLOOR   \n",
       "16             Y54       Q83                       3RD FLOOR   \n",
       "17             Y54       Q84                   JUBILEE HOUSE   \n",
       "18             Y54       Q75                     FIRST FLOOR   \n",
       "19             Y54       Q83      ST JAMES HOUSE - 7TH FLOOR   \n",
       "20             Y54       Q74                          UNIT 4   \n",
       "21             Y54       Q75                  NUTGROVE VILLA   \n",
       "22             Y54       Q84                 MOOR LANE MILLS   \n",
       "23             Y54       Q75                     BEVAN HOUSE   \n",
       "24             Y54       Q75                       3RD FLOOR   \n",
       "25             Y54       Q75                   5 CURZON ROAD   \n",
       "26             Y54       Q83                    REGENT HOUSE   \n",
       "27             Y54       Q75   ST HELENS CHAMBER OF COMMERCE   \n",
       "28             Y54       Q83               NEW CENTURY HOUSE   \n",
       "29             Y54       Q83                     FIRST FLOOR   \n",
       "..             ...       ...                             ...   \n",
       "213            Y55       Q76                 C/O NHS ENGLAND   \n",
       "214            Y55       Q79                 C/O NHS ENGLAND   \n",
       "215            Y58       Q85                 C/O NHS ENGLAND   \n",
       "216            Y59       Q88                 C/O NHS ENGLAND   \n",
       "217            Y59       Q87                 C/O NHS ENGLAND   \n",
       "218            Y54       Q84                 C/O NHS ENGLAND   \n",
       "219            Y59       Q87                    SECOND FLOOR   \n",
       "220            Y59       Q87                 57-59 BATH ROAD   \n",
       "221            Y58       Q86                     SOUTH PLAZA   \n",
       "222            Y59       Q87        KING EDWARD VII HOSPITAL   \n",
       "223            Y55       Q77               BARTHOLOMEW HOUSE   \n",
       "224            Y54       Q72  UNITS B5-B9 WIRA BUSINESS PARK   \n",
       "225            Y58       Q85                     NHS ENGLAND   \n",
       "226            Y58       Q86                     NHS ENGLAND   \n",
       "227            Y59       Q87                     NHS ENGLAND   \n",
       "228            Y59       Q88                     NHS ENGLAND   \n",
       "229            Y54       Q72                 C/O NHS ENGLAND   \n",
       "230            Y54       Q75               1 ARTHOUSE SQUARE   \n",
       "231            Y54       Q74                 12 HEDLEY COURT   \n",
       "232            Y55       Q78                   CROSS O CLIFF   \n",
       "233            Y55       Q79                   PHOENIX HOUSE   \n",
       "234            Y55       Q79                   PHOENIX HOUSE   \n",
       "235            Y55       Q79                  HARCOURT HOUSE   \n",
       "236            Y59       Q88                    PASCAL PLACE   \n",
       "237            Y59       Q88                     WHARF HOUSE   \n",
       "238            Y59       Q88               36-38 FRIARS WALK   \n",
       "239            Y59       Q87     ALDERSHOT CENTRE FOR HEALTH   \n",
       "240            Y58       Q86                 SOUTHGATE HOUSE   \n",
       "241            Y58       Q85                  NEWCOURT HOUSE   \n",
       "242            Y58       Q85                    POMONA HOUSE   \n",
       "\n",
       "                                address2             address3  \\\n",
       "0                              QUEENSWAY                  NaN   \n",
       "1                           SALTERS LANE           SEDGEFIELD   \n",
       "2                           SALTERS LANE           SEDGEFIELD   \n",
       "3                              QUEENSWAY                  NaN   \n",
       "4                                    NaN                  NaN   \n",
       "5                        11 TRINITY MEWS        NORTH ORMESBY   \n",
       "6                           MONKTON LANE      MONKTON VILLAGE   \n",
       "7                          COLIMA AVENUE                  NaN   \n",
       "8                         EVOLUTION PARK      HASLINGDEN ROAD   \n",
       "9                          SEASIDERS WAY                  NaN   \n",
       "10                     SILVERWELL STREET                  NaN   \n",
       "11                      1 KNOWSLEY PLACE      KNOWSLEY STREET   \n",
       "12   LANCASHIRE ENTERPRISE BUSINESS PARK                  NaN   \n",
       "13                     WADDINGTON STREET                  NaN   \n",
       "14                         REGENT STREET                  NaN   \n",
       "15                             WEST WING  NEW ALDERLERY HOUSE   \n",
       "16                  NUMBER ONE RIVERSIDE         SMITH STREET   \n",
       "17   LANCASHIRE ENTERPRISE BUSINESS PARK        CENTURION WAY   \n",
       "18                     RUNCORN TOWN HALL           HEATH ROAD   \n",
       "19                         PENDLETON WAY                  NaN   \n",
       "20       HACKTHORPE HALL BUSINESS CENTRE           HACKTHORPE   \n",
       "21                      WESTMORLAND ROAD               HUYTON   \n",
       "22                             MOOR LANE                  NaN   \n",
       "23                          BARONY COURT                  NaN   \n",
       "24                          MERTON HOUSE         STANLEY ROAD   \n",
       "25                                   NaN                  NaN   \n",
       "26                           HEATON LANE                  NaN   \n",
       "27                      SALISBURY STREET           CHALON WAY   \n",
       "28                          PROGRESS WAY               DENTON   \n",
       "29                       CROSSGATE HOUSE         CROSS STREET   \n",
       "..                                   ...                  ...   \n",
       "213      1W09, FIRST FLOOR, QUARRY HOUSE          QUARRY HILL   \n",
       "214        1W09, 1ST FLOOR, QUARRY HOUSE          QUARRY HILL   \n",
       "215        1W09, 1ST FLOOR, QUARRY HOUSE          QUARRY HILL   \n",
       "216        1W09, 1ST FLOOR, QUARRY HOUSE          QUARRY HILL   \n",
       "217        1W09, 1ST FLOOR, QUARRY HOUSE          QUARRY HILL   \n",
       "218        1W09, 1ST FLOOR, QUARRY HOUSE          QUARRY HILL   \n",
       "219                          THE GATEWAY       GATEHOUSE ROAD   \n",
       "220                                  NaN                  NaN   \n",
       "221                   MARLBOROUGH STREET                  NaN   \n",
       "222                    ST. LEONARDS ROAD                  NaN   \n",
       "223                      142 HAGLEY ROAD                  NaN   \n",
       "224                  WEST PARK RING ROAD                  NaN   \n",
       "225                         QUARRY HOUSE          QUARRY HILL   \n",
       "226                         QUARRY HOUSE          QUARRY HILL   \n",
       "227                         QUARRY HOUSE          QUARRY HILL   \n",
       "228                         QUARRY HOUSE          QUARRY HILL   \n",
       "229        1W09, IST FLOOR, QUARRY HOUSE          QUARRY HILL   \n",
       "230                    61-69 SEEL STREET                  NaN   \n",
       "231                  ORION BUSINESS PARK                  NaN   \n",
       "232                    BRACEBRIDGE HEATH                  NaN   \n",
       "233              CHRISTOPHER MARTIN ROAD                  NaN   \n",
       "234              CHRISTOPHER MARTIN ROAD                  NaN   \n",
       "235                 5-15 HARCOURT AVENUE                  NaN   \n",
       "236                          RANDALS WAY                  NaN   \n",
       "237                    MEDWAY WHARF ROAD                  NaN   \n",
       "238                                  NaN                  NaN   \n",
       "239                        HOSPITAL HILL                  NaN   \n",
       "240                            PANS LANE                  NaN   \n",
       "241                       OLD RYDON LANE                  NaN   \n",
       "242                       OAK VIEW CLOSE                  NaN   \n",
       "\n",
       "                       address4            address5  postcode  ...    col18  \\\n",
       "0                    BILLINGHAM           CLEVELAND  TS23 2LA  ...      NaN   \n",
       "1              STOCKTON-ON-TEES           CLEVELAND  TS21 3EE  ...      NaN   \n",
       "2              STOCKTON-ON-TEES           CLEVELAND  TS21 3EE  ...      NaN   \n",
       "3                    BILLINGHAM           CLEVELAND  TS23 2LA  ...      NaN   \n",
       "4                       MORPETH      NORTHUMBERLAND  NE61 2EF  ...      NaN   \n",
       "5                 MIDDLESBROUGH           CLEVELAND   TS3 6AL  ...      NaN   \n",
       "6                        JARROW       TYNE AND WEAR  NE32 5NN  ...      NaN   \n",
       "7                    SUNDERLAND       TYNE AND WEAR   SR5 3XB  ...      NaN   \n",
       "8                     BLACKBURN          LANCASHIRE   BB1 2FD  ...      NaN   \n",
       "9                     BLACKPOOL          LANCASHIRE   FY1 6JX  ...      NaN   \n",
       "10                       BOLTON          LANCASHIRE   BL1 1PP  ...      NaN   \n",
       "11                         BURY          LANCASHIRE   BL9 0SN  ...      NaN   \n",
       "12                      LEYLAND          LANCASHIRE  PR26 6TR  ...      NaN   \n",
       "13                       OLDHAM          LANCASHIRE   OL9 6EE  ...      NaN   \n",
       "14                       NELSON          LANCASHIRE   BB9 8AS  ...      NaN   \n",
       "15   VICTORIA ROAD MACCLESFIELD            CHESHIRE  SK10 3BL  ...      NaN   \n",
       "16                     ROCHDALE          LANCASHIRE  OL16 1XU  ...      NaN   \n",
       "17                      LEYLAND          LANCASHIRE  PR26 6TR  ...      NaN   \n",
       "18                      RUNCORN            CHESHIRE   WA7 5TD  ...      NaN   \n",
       "19                      SALFORD          LANCASHIRE    M6 5FW  ...      NaN   \n",
       "20                      PENRITH             CUMBRIA  CA10 2HX  ...      NaN   \n",
       "21                    LIVERPOOL          MERSEYSIDE   L36 6GA  ...      NaN   \n",
       "22                    LANCASTER          LANCASHIRE   LA1 1QD  ...      NaN   \n",
       "23                     NANTWICH            CHESHIRE   CW5 5QU  ...      NaN   \n",
       "24                       BOOTLE          MERSEYSIDE   L20 3DL  ...      NaN   \n",
       "25                    SOUTHPORT          MERSEYSIDE   PR8 6PL  ...      NaN   \n",
       "26                    STOCKPORT            CHESHIRE   SK4 1BS  ...      NaN   \n",
       "27                   ST. HELENS          MERSEYSIDE  WA10 1FY  ...      NaN   \n",
       "28                   MANCHESTER  GREATER MANCHESTER   M34 2GP  ...      NaN   \n",
       "29                         SALE            CHESHIRE   M33 7FT  ...      NaN   \n",
       "..                          ...                 ...       ...  ...      ...   \n",
       "213                       LEEDS      WEST YORKSHIRE   LS2 7UE  ...      NaN   \n",
       "214                       LEEDS      WEST YORKSHIRE   LS2 7UE  ...      NaN   \n",
       "215                       LEEDS      WEST YORKSHIRE   LS2 7UE  ...      NaN   \n",
       "216                       LEEDS      WEST YORKSHIRE   LS2 7UE  ...      NaN   \n",
       "217                       LEEDS      WEST YORKSHIRE   LS2 7UE  ...      NaN   \n",
       "218                       LEEDS      WEST YORKSHIRE   LS2 7UE  ...      NaN   \n",
       "219                   AYLESBURY     BUCKINGHAMSHIRE  HP19 8FF  ...      NaN   \n",
       "220                     READING           BERKSHIRE  RG30 2BA  ...      NaN   \n",
       "221                     BRISTOL                AVON   BS1 3NX  ...      NaN   \n",
       "222                     WINDSOR           BERKSHIRE   SL4 3DP  ...      NaN   \n",
       "223                  BIRMINGHAM       WEST MIDLANDS   B16 9PA  ...      NaN   \n",
       "224                       LEEDS      WEST YORKSHIRE  LS16 6EB  ...      NaN   \n",
       "225                       LEEDS      WEST YORKSHIRE   LS2 7UE  ...      NaN   \n",
       "226                       LEEDS      WEST YORKSHIRE   LS2 7UE  ...      NaN   \n",
       "227                       LEEDS      WEST YORKSHIRE   LS2 7UE  ...      NaN   \n",
       "228                       LEEDS      WEST YORKSHIRE   LS2 7UE  ...      NaN   \n",
       "229                       LEEDS      WEST YORKSHIRE   LS2 7UE  ...      NaN   \n",
       "230                   LIVERPOOL          MERSEYSIDE    L1 4AZ  ...      NaN   \n",
       "231               NORTH SHIELDS       TYNE AND WEAR  NE29 7ST  ...      NaN   \n",
       "232                     LINCOLN        LINCOLNSHIRE   LN4 2HN  ...      NaN   \n",
       "233                    BASILDON               ESSEX  SS14 3HG  ...      NaN   \n",
       "234                    BASILDON               ESSEX  SS14 3HG  ...      NaN   \n",
       "235             SOUTHEND-ON-SEA               ESSEX   SS2 6HT  ...      NaN   \n",
       "236                 LEATHERHEAD              SURREY  KT22 7TW  ...      NaN   \n",
       "237                   TONBRIDGE                KENT   TN9 1RE  ...      NaN   \n",
       "238                       LEWES         EAST SUSSEX   BN7 2PB  ...      NaN   \n",
       "239                   ALDERSHOT           HAMPSHIRE  GU11 1AY  ...      NaN   \n",
       "240                     DEVIZES           WILTSHIRE  SN10 5EQ  ...      NaN   \n",
       "241                      EXETER               DEVON   EX2 7JU  ...      NaN   \n",
       "242                     TORQUAY               DEVON   TQ2 7FF  ...      NaN   \n",
       "\n",
       "     col19  col20 col21  col22  col23  col24  col25  col26  col27  \n",
       "0      NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "1      NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "2      NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "3      NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "4      NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "5      NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "6      NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "7      NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "8      NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "9      NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "10     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "11     NaN    NaN   NaN      1    NaN    NaN    NaN    NaN    NaN  \n",
       "12     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "13     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "14     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "15     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "16     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "17     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "18     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "19     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "20     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "21     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "22     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "23     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "24     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "25     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "26     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "27     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "28     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "29     NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "..     ...    ...   ...    ...    ...    ...    ...    ...    ...  \n",
       "213    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "214    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "215    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "216    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "217    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "218    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "219    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "220    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "221    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "222    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "223    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "224    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "225    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "226    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "227    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "228    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "229    NaN    NaN   NaN      1    NaN    NaN    NaN    NaN    NaN  \n",
       "230    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "231    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "232    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "233    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "234    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "235    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "236    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "237    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "238    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "239    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "240    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "241    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "242    NaN    NaN   NaN      0    NaN    NaN    NaN    NaN    NaN  \n",
       "\n",
       "[243 rows x 27 columns]"
      ]
     },
     "execution_count": 258,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#List of all CCGs\n",
    "lookup_ccg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 259,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(28, 27)"
      ]
     },
     "execution_count": 259,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Obtained list of London CCG names from NHS England website https://www.england.nhs.uk/london/ccg-trust/\n",
    "london = ['NHS BARKING AND DAGENHAM CCG','NHS BARNET CCG','NHS BEXLEY CCG','NHS BRENT CGG','NHS BROMLEY CGG','NHS CAMDEN CCG','NHS CENTRAL LONDON CGG','NHS CITY AND HACKNEY CCG','NHS CROYDON CCG','NHS EALING CCG','NHS ENFIELD CCG','NHS GREENWICH CCG','NHS HAMMERSMITH AND FULHAM CCG','NHS HARINGEY CCG','NHS HARROW CCG','NHS HAVERING CCG','NHS HILLINGDON CCG','NHS HOUNSLOW CCG','NHS ISLINGTON CCG','NHS KINGSTON CCG','NHS LAMBETH CCG','NHS LEWISHAM CCG','NHS MERTON CCG','NHS NEWHAM CCG','NHS REDBRIDGE CCG','NHS RICHMOND CCG','NHS SOUTHWARK CCG','NHS SUTTON CCG','NHS TOWER HAMLETS CGG','NHS WALTHAM FOREST CCG','NHS WANDSWORTH CCG','NHS WEST LONDON CCG']\n",
    "lookup_ccg.name.isin(london)\n",
    "london_lookup= lookup_ccg[lookup_ccg.name.isin(london)]\n",
    "london_lookup.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 260,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>org_code</th>\n",
       "      <th>name</th>\n",
       "      <th>national_group</th>\n",
       "      <th>high_geog</th>\n",
       "      <th>address1</th>\n",
       "      <th>address2</th>\n",
       "      <th>address3</th>\n",
       "      <th>address4</th>\n",
       "      <th>address5</th>\n",
       "      <th>postcode</th>\n",
       "      <th>...</th>\n",
       "      <th>col18</th>\n",
       "      <th>col19</th>\n",
       "      <th>col20</th>\n",
       "      <th>col21</th>\n",
       "      <th>col22</th>\n",
       "      <th>col23</th>\n",
       "      <th>col24</th>\n",
       "      <th>col25</th>\n",
       "      <th>col26</th>\n",
       "      <th>col27</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>07L</td>\n",
       "      <td>NHS BARKING AND DAGENHAM CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>BARKING HOSPITAL</td>\n",
       "      <td>UPNEY LANE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>BARKING</td>\n",
       "      <td>ESSEX</td>\n",
       "      <td>IG11 9LX</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>07M</td>\n",
       "      <td>NHS BARNET CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>GROUND FLOOR, BUILDING 2</td>\n",
       "      <td>NORTH LONDON BUSINESS PARK</td>\n",
       "      <td>OAKLEIGH ROAD SOUTH, NEW SOUTHGATE</td>\n",
       "      <td>LONDON</td>\n",
       "      <td>GREATER LONDON</td>\n",
       "      <td>N11 1NP</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>117</th>\n",
       "      <td>07N</td>\n",
       "      <td>NHS BEXLEY CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>CIVIC OFFICES</td>\n",
       "      <td>2 WATLING STREET</td>\n",
       "      <td>NaN</td>\n",
       "      <td>BEXLEYHEATH</td>\n",
       "      <td>KENT</td>\n",
       "      <td>DA6 7AT</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>07R</td>\n",
       "      <td>NHS CAMDEN CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>4TH FLOOR</td>\n",
       "      <td>STEPHENSON HOUSE</td>\n",
       "      <td>75 HAMPSTEAD ROAD</td>\n",
       "      <td>LONDON</td>\n",
       "      <td>GREATER LONDON</td>\n",
       "      <td>NW1 2PL</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>07T</td>\n",
       "      <td>NHS CITY AND HACKNEY CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>SECOND FLOOR</td>\n",
       "      <td>THE LAWSON PRACTICE</td>\n",
       "      <td>85 NUTTALL STREET</td>\n",
       "      <td>LONDON</td>\n",
       "      <td>GREATER LONDON</td>\n",
       "      <td>N1 5HZ</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>07V</td>\n",
       "      <td>NHS CROYDON CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>LEON HOUSE</td>\n",
       "      <td>233 HIGH STREET</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CROYDON</td>\n",
       "      <td>SURREY</td>\n",
       "      <td>CR0 9XT</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>07W</td>\n",
       "      <td>NHS EALING CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>PERCEVAL HOUSE</td>\n",
       "      <td>14-16 UXBRIDGE ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LONDON</td>\n",
       "      <td>GREATER LONDON</td>\n",
       "      <td>W5 2HL</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>07X</td>\n",
       "      <td>NHS ENFIELD CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>HOLBROOK HOUSE</td>\n",
       "      <td>COCKFOSTERS ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>BARNET</td>\n",
       "      <td>HERTFORDSHIRE</td>\n",
       "      <td>EN4 0DY</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>07Y</td>\n",
       "      <td>NHS HOUNSLOW CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>SOVEREIGN COURT</td>\n",
       "      <td>15-21 STAINES ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>HOUNSLOW</td>\n",
       "      <td>MIDDLESEX</td>\n",
       "      <td>TW3 3HR</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>08A</td>\n",
       "      <td>NHS GREENWICH CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>THE WOOLWICH CENTRE</td>\n",
       "      <td>35 WELLINGTON STREET</td>\n",
       "      <td>WOOLWICH</td>\n",
       "      <td>LONDON</td>\n",
       "      <td>GREATER LONDON</td>\n",
       "      <td>SE18 6ND</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>08C</td>\n",
       "      <td>NHS HAMMERSMITH AND FULHAM CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>15 MARYLEBONE ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LONDON</td>\n",
       "      <td>GREATER LONDON</td>\n",
       "      <td>NW1 5JD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>08D</td>\n",
       "      <td>NHS HARINGEY CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>RIVER PARK HOUSE</td>\n",
       "      <td>225 HIGH ROAD</td>\n",
       "      <td>WOOD GREEN</td>\n",
       "      <td>LONDON</td>\n",
       "      <td>GREATER LONDON</td>\n",
       "      <td>N22 8HQ</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>08E</td>\n",
       "      <td>NHS HARROW CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>4TH FLOOR</td>\n",
       "      <td>THE HEIGHTS</td>\n",
       "      <td>59-65 LOWLANDS ROAD</td>\n",
       "      <td>HARROW</td>\n",
       "      <td>MIDDLESEX</td>\n",
       "      <td>HA1 3AW</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>130</th>\n",
       "      <td>08F</td>\n",
       "      <td>NHS HAVERING CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>IMPERIAL OFFICES</td>\n",
       "      <td>2-4 EASTERN ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ROMFORD</td>\n",
       "      <td>ESSEX</td>\n",
       "      <td>RM1 3PJ</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131</th>\n",
       "      <td>08G</td>\n",
       "      <td>NHS HILLINGDON CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>BOUNDARY HOUSE</td>\n",
       "      <td>CRICKET FIELD ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>UXBRIDGE</td>\n",
       "      <td>MIDDLESEX</td>\n",
       "      <td>UB8 1QG</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>08H</td>\n",
       "      <td>NHS ISLINGTON CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>2ND FLOOR</td>\n",
       "      <td>LAYCOCK PROFESSIONAL DEVELOPMENT</td>\n",
       "      <td>LAYCOCK STREET</td>\n",
       "      <td>LONDON</td>\n",
       "      <td>GREATER LONDON</td>\n",
       "      <td>N1 1TH</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>08J</td>\n",
       "      <td>NHS KINGSTON CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>3RD FLOOR, GUILDHALL 1</td>\n",
       "      <td>HIGH STREET</td>\n",
       "      <td>NaN</td>\n",
       "      <td>KINGSTON UPON THAMES</td>\n",
       "      <td>SURREY</td>\n",
       "      <td>KT1 1EU</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>08K</td>\n",
       "      <td>NHS LAMBETH CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>1 LOWER MARSH</td>\n",
       "      <td>WATERLOO</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LONDON</td>\n",
       "      <td>GREATER LONDON</td>\n",
       "      <td>SE1 7NT</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>135</th>\n",
       "      <td>08L</td>\n",
       "      <td>NHS LEWISHAM CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>CANTILEVER HOUSE</td>\n",
       "      <td>ELTHAM ROAD</td>\n",
       "      <td>LEE</td>\n",
       "      <td>LONDON</td>\n",
       "      <td>GREATER LONDON</td>\n",
       "      <td>SE12 8RN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>136</th>\n",
       "      <td>08M</td>\n",
       "      <td>NHS NEWHAM CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>4TH FLOOR, UNEX TOWER</td>\n",
       "      <td>5 STATION STREET</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LONDON</td>\n",
       "      <td>GREATER LONDON</td>\n",
       "      <td>E15 1DA</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137</th>\n",
       "      <td>08N</td>\n",
       "      <td>NHS REDBRIDGE CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>BECKETT HOUSE</td>\n",
       "      <td>2-14 ILFORD HILL</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ILFORD</td>\n",
       "      <td>ESSEX</td>\n",
       "      <td>IG1 2QX</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138</th>\n",
       "      <td>08P</td>\n",
       "      <td>NHS RICHMOND CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>CIVIC CENTRE</td>\n",
       "      <td>44 YORK STREET</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TWICKENHAM</td>\n",
       "      <td>MIDDLESEX</td>\n",
       "      <td>TW1 3BZ</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>139</th>\n",
       "      <td>08Q</td>\n",
       "      <td>NHS SOUTHWARK CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>160 TOOLEY STREET</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LONDON</td>\n",
       "      <td>GREATER LONDON</td>\n",
       "      <td>SE1 2QH</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140</th>\n",
       "      <td>08R</td>\n",
       "      <td>NHS MERTON CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>120 THE BROADWAY</td>\n",
       "      <td>WIMBLEDON</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LONDON</td>\n",
       "      <td>GREATER LONDON</td>\n",
       "      <td>SW19 1RH</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>141</th>\n",
       "      <td>08T</td>\n",
       "      <td>NHS SUTTON CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>PRIORY CRESCENT</td>\n",
       "      <td>CHEAM</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SUTTON</td>\n",
       "      <td>SURREY</td>\n",
       "      <td>SM3 8LR</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>143</th>\n",
       "      <td>08W</td>\n",
       "      <td>NHS WALTHAM FOREST CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>KIRKDALE HOUSE</td>\n",
       "      <td>7 KIRKDALE ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LONDON</td>\n",
       "      <td>GREATER LONDON</td>\n",
       "      <td>E11 1HP</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>08X</td>\n",
       "      <td>NHS WANDSWORTH CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>1ST FLOOR</td>\n",
       "      <td>73-75 UPPER RICHMOND ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LONDON</td>\n",
       "      <td>GREATER LONDON</td>\n",
       "      <td>SW15 2SR</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>08Y</td>\n",
       "      <td>NHS WEST LONDON CCG</td>\n",
       "      <td>Y56</td>\n",
       "      <td>Q71</td>\n",
       "      <td>15 MARYLEBONE ROAD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LONDON</td>\n",
       "      <td>GREATER LONDON</td>\n",
       "      <td>NW1 5JD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>28 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    org_code                            name national_group high_geog  \\\n",
       "115      07L    NHS BARKING AND DAGENHAM CCG            Y56       Q71   \n",
       "116      07M                  NHS BARNET CCG            Y56       Q71   \n",
       "117      07N                  NHS BEXLEY CCG            Y56       Q71   \n",
       "120      07R                  NHS CAMDEN CCG            Y56       Q71   \n",
       "121      07T        NHS CITY AND HACKNEY CCG            Y56       Q71   \n",
       "122      07V                 NHS CROYDON CCG            Y56       Q71   \n",
       "123      07W                  NHS EALING CCG            Y56       Q71   \n",
       "124      07X                 NHS ENFIELD CCG            Y56       Q71   \n",
       "125      07Y                NHS HOUNSLOW CCG            Y56       Q71   \n",
       "126      08A               NHS GREENWICH CCG            Y56       Q71   \n",
       "127      08C  NHS HAMMERSMITH AND FULHAM CCG            Y56       Q71   \n",
       "128      08D                NHS HARINGEY CCG            Y56       Q71   \n",
       "129      08E                  NHS HARROW CCG            Y56       Q71   \n",
       "130      08F                NHS HAVERING CCG            Y56       Q71   \n",
       "131      08G              NHS HILLINGDON CCG            Y56       Q71   \n",
       "132      08H               NHS ISLINGTON CCG            Y56       Q71   \n",
       "133      08J                NHS KINGSTON CCG            Y56       Q71   \n",
       "134      08K                 NHS LAMBETH CCG            Y56       Q71   \n",
       "135      08L                NHS LEWISHAM CCG            Y56       Q71   \n",
       "136      08M                  NHS NEWHAM CCG            Y56       Q71   \n",
       "137      08N               NHS REDBRIDGE CCG            Y56       Q71   \n",
       "138      08P                NHS RICHMOND CCG            Y56       Q71   \n",
       "139      08Q               NHS SOUTHWARK CCG            Y56       Q71   \n",
       "140      08R                  NHS MERTON CCG            Y56       Q71   \n",
       "141      08T                  NHS SUTTON CCG            Y56       Q71   \n",
       "143      08W          NHS WALTHAM FOREST CCG            Y56       Q71   \n",
       "144      08X              NHS WANDSWORTH CCG            Y56       Q71   \n",
       "145      08Y             NHS WEST LONDON CCG            Y56       Q71   \n",
       "\n",
       "                     address1                          address2  \\\n",
       "115          BARKING HOSPITAL                        UPNEY LANE   \n",
       "116  GROUND FLOOR, BUILDING 2        NORTH LONDON BUSINESS PARK   \n",
       "117             CIVIC OFFICES                  2 WATLING STREET   \n",
       "120                 4TH FLOOR                  STEPHENSON HOUSE   \n",
       "121              SECOND FLOOR               THE LAWSON PRACTICE   \n",
       "122                LEON HOUSE                   233 HIGH STREET   \n",
       "123            PERCEVAL HOUSE               14-16 UXBRIDGE ROAD   \n",
       "124            HOLBROOK HOUSE                  COCKFOSTERS ROAD   \n",
       "125           SOVEREIGN COURT                15-21 STAINES ROAD   \n",
       "126       THE WOOLWICH CENTRE              35 WELLINGTON STREET   \n",
       "127        15 MARYLEBONE ROAD                               NaN   \n",
       "128          RIVER PARK HOUSE                     225 HIGH ROAD   \n",
       "129                 4TH FLOOR                       THE HEIGHTS   \n",
       "130          IMPERIAL OFFICES                  2-4 EASTERN ROAD   \n",
       "131            BOUNDARY HOUSE                CRICKET FIELD ROAD   \n",
       "132                 2ND FLOOR  LAYCOCK PROFESSIONAL DEVELOPMENT   \n",
       "133    3RD FLOOR, GUILDHALL 1                       HIGH STREET   \n",
       "134             1 LOWER MARSH                          WATERLOO   \n",
       "135          CANTILEVER HOUSE                       ELTHAM ROAD   \n",
       "136     4TH FLOOR, UNEX TOWER                  5 STATION STREET   \n",
       "137             BECKETT HOUSE                  2-14 ILFORD HILL   \n",
       "138              CIVIC CENTRE                    44 YORK STREET   \n",
       "139         160 TOOLEY STREET                               NaN   \n",
       "140          120 THE BROADWAY                         WIMBLEDON   \n",
       "141           PRIORY CRESCENT                             CHEAM   \n",
       "143            KIRKDALE HOUSE                   7 KIRKDALE ROAD   \n",
       "144                 1ST FLOOR         73-75 UPPER RICHMOND ROAD   \n",
       "145        15 MARYLEBONE ROAD                               NaN   \n",
       "\n",
       "                               address3              address4        address5  \\\n",
       "115                                 NaN               BARKING           ESSEX   \n",
       "116  OAKLEIGH ROAD SOUTH, NEW SOUTHGATE                LONDON  GREATER LONDON   \n",
       "117                                 NaN           BEXLEYHEATH            KENT   \n",
       "120                   75 HAMPSTEAD ROAD                LONDON  GREATER LONDON   \n",
       "121                   85 NUTTALL STREET                LONDON  GREATER LONDON   \n",
       "122                                 NaN               CROYDON          SURREY   \n",
       "123                                 NaN                LONDON  GREATER LONDON   \n",
       "124                                 NaN                BARNET   HERTFORDSHIRE   \n",
       "125                                 NaN              HOUNSLOW       MIDDLESEX   \n",
       "126                            WOOLWICH                LONDON  GREATER LONDON   \n",
       "127                                 NaN                LONDON  GREATER LONDON   \n",
       "128                          WOOD GREEN                LONDON  GREATER LONDON   \n",
       "129                 59-65 LOWLANDS ROAD                HARROW       MIDDLESEX   \n",
       "130                                 NaN               ROMFORD           ESSEX   \n",
       "131                                 NaN              UXBRIDGE       MIDDLESEX   \n",
       "132                      LAYCOCK STREET                LONDON  GREATER LONDON   \n",
       "133                                 NaN  KINGSTON UPON THAMES          SURREY   \n",
       "134                                 NaN                LONDON  GREATER LONDON   \n",
       "135                                 LEE                LONDON  GREATER LONDON   \n",
       "136                                 NaN                LONDON  GREATER LONDON   \n",
       "137                                 NaN                ILFORD           ESSEX   \n",
       "138                                 NaN            TWICKENHAM       MIDDLESEX   \n",
       "139                                 NaN                LONDON  GREATER LONDON   \n",
       "140                                 NaN                LONDON  GREATER LONDON   \n",
       "141                                 NaN                SUTTON          SURREY   \n",
       "143                                 NaN                LONDON  GREATER LONDON   \n",
       "144                                 NaN                LONDON  GREATER LONDON   \n",
       "145                                 NaN                LONDON  GREATER LONDON   \n",
       "\n",
       "     postcode  ...    col18  col19  col20 col21  col22  col23  col24  col25  \\\n",
       "115  IG11 9LX  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "116   N11 1NP  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "117   DA6 7AT  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "120   NW1 2PL  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "121    N1 5HZ  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "122   CR0 9XT  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "123    W5 2HL  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "124   EN4 0DY  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "125   TW3 3HR  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "126  SE18 6ND  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "127   NW1 5JD  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "128   N22 8HQ  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "129   HA1 3AW  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "130   RM1 3PJ  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "131   UB8 1QG  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "132    N1 1TH  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "133   KT1 1EU  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "134   SE1 7NT  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "135  SE12 8RN  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "136   E15 1DA  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "137   IG1 2QX  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "138   TW1 3BZ  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "139   SE1 2QH  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "140  SW19 1RH  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "141   SM3 8LR  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "143   E11 1HP  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "144  SW15 2SR  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "145   NW1 5JD  ...      NaN    NaN    NaN   NaN      0    NaN    NaN    NaN   \n",
       "\n",
       "     col26  col27  \n",
       "115    NaN    NaN  \n",
       "116    NaN    NaN  \n",
       "117    NaN    NaN  \n",
       "120    NaN    NaN  \n",
       "121    NaN    NaN  \n",
       "122    NaN    NaN  \n",
       "123    NaN    NaN  \n",
       "124    NaN    NaN  \n",
       "125    NaN    NaN  \n",
       "126    NaN    NaN  \n",
       "127    NaN    NaN  \n",
       "128    NaN    NaN  \n",
       "129    NaN    NaN  \n",
       "130    NaN    NaN  \n",
       "131    NaN    NaN  \n",
       "132    NaN    NaN  \n",
       "133    NaN    NaN  \n",
       "134    NaN    NaN  \n",
       "135    NaN    NaN  \n",
       "136    NaN    NaN  \n",
       "137    NaN    NaN  \n",
       "138    NaN    NaN  \n",
       "139    NaN    NaN  \n",
       "140    NaN    NaN  \n",
       "141    NaN    NaN  \n",
       "143    NaN    NaN  \n",
       "144    NaN    NaN  \n",
       "145    NaN    NaN  \n",
       "\n",
       "[28 rows x 27 columns]"
      ]
     },
     "execution_count": 260,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Now we have a subset of just London CCGs along with their codes\n",
    "london_lookup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 261,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "115    07L\n",
       "116    07M\n",
       "117    07N\n",
       "120    07R\n",
       "121    07T\n",
       "122    07V\n",
       "123    07W\n",
       "124    07X\n",
       "125    07Y\n",
       "126    08A\n",
       "127    08C\n",
       "128    08D\n",
       "129    08E\n",
       "130    08F\n",
       "131    08G\n",
       "132    08H\n",
       "133    08J\n",
       "134    08K\n",
       "135    08L\n",
       "136    08M\n",
       "137    08N\n",
       "138    08P\n",
       "139    08Q\n",
       "140    08R\n",
       "141    08T\n",
       "143    08W\n",
       "144    08X\n",
       "145    08Y\n",
       "Name: org_code, dtype: object"
      ]
     },
     "execution_count": 261,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Now we just extract the London CCG codes for use later\n",
    "london_lookup.org_code"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 262,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PUBLICATION</th>\n",
       "      <th>EXTRACT_DATE</th>\n",
       "      <th>TYPE</th>\n",
       "      <th>CCG_CODE</th>\n",
       "      <th>ONS_CCG_CODE</th>\n",
       "      <th>CODE</th>\n",
       "      <th>POSTCODE</th>\n",
       "      <th>SEX</th>\n",
       "      <th>AGE</th>\n",
       "      <th>NUMBER_OF_PATIENTS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>GP_PRAC_PAT_LIST</td>\n",
       "      <td>01APR2018</td>\n",
       "      <td>GP</td>\n",
       "      <td>00C</td>\n",
       "      <td>E38000042</td>\n",
       "      <td>A83005</td>\n",
       "      <td>DL1 3RT</td>\n",
       "      <td>ALL</td>\n",
       "      <td>ALL</td>\n",
       "      <td>11826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>GP_PRAC_PAT_LIST</td>\n",
       "      <td>01APR2018</td>\n",
       "      <td>GP</td>\n",
       "      <td>00C</td>\n",
       "      <td>E38000042</td>\n",
       "      <td>A83006</td>\n",
       "      <td>DL3 6HZ</td>\n",
       "      <td>ALL</td>\n",
       "      <td>ALL</td>\n",
       "      <td>8044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>GP_PRAC_PAT_LIST</td>\n",
       "      <td>01APR2018</td>\n",
       "      <td>GP</td>\n",
       "      <td>00C</td>\n",
       "      <td>E38000042</td>\n",
       "      <td>A83010</td>\n",
       "      <td>DL3 9JP</td>\n",
       "      <td>ALL</td>\n",
       "      <td>ALL</td>\n",
       "      <td>14070</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>GP_PRAC_PAT_LIST</td>\n",
       "      <td>01APR2018</td>\n",
       "      <td>GP</td>\n",
       "      <td>00C</td>\n",
       "      <td>E38000042</td>\n",
       "      <td>A83013</td>\n",
       "      <td>DL1 4YL</td>\n",
       "      <td>ALL</td>\n",
       "      <td>ALL</td>\n",
       "      <td>11298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>GP_PRAC_PAT_LIST</td>\n",
       "      <td>01APR2018</td>\n",
       "      <td>GP</td>\n",
       "      <td>00C</td>\n",
       "      <td>E38000042</td>\n",
       "      <td>A83031</td>\n",
       "      <td>DL3 8SQ</td>\n",
       "      <td>ALL</td>\n",
       "      <td>ALL</td>\n",
       "      <td>10109</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        PUBLICATION EXTRACT_DATE TYPE CCG_CODE ONS_CCG_CODE    CODE POSTCODE  \\\n",
       "0  GP_PRAC_PAT_LIST    01APR2018   GP      00C    E38000042  A83005  DL1 3RT   \n",
       "1  GP_PRAC_PAT_LIST    01APR2018   GP      00C    E38000042  A83006  DL3 6HZ   \n",
       "2  GP_PRAC_PAT_LIST    01APR2018   GP      00C    E38000042  A83010  DL3 9JP   \n",
       "3  GP_PRAC_PAT_LIST    01APR2018   GP      00C    E38000042  A83013  DL1 4YL   \n",
       "4  GP_PRAC_PAT_LIST    01APR2018   GP      00C    E38000042  A83031  DL3 8SQ   \n",
       "\n",
       "   SEX  AGE  NUMBER_OF_PATIENTS  \n",
       "0  ALL  ALL               11826  \n",
       "1  ALL  ALL                8044  \n",
       "2  ALL  ALL               14070  \n",
       "3  ALL  ALL               11298  \n",
       "4  ALL  ALL               10109  "
      ]
     },
     "execution_count": 262,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Next, we can use that list of CCG codes to get the subset of GP practices from the ODS GP practice file\n",
    "#the file gp-reg-pat-prac-all.csv is from April 2018 practice list on nhs digital\n",
    "#april 2018 list of all gp practices and number of patients on list\n",
    "\n",
    "path = '/Users/michaelshemko/Downloads/'\n",
    "gp_prac_filename=path + 'gp-reg-pat-prac-all.csv'\n",
    "gp_practices = pd.read_csv(gp_prac_filename)\n",
    "\n",
    "gp_practices.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 263,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1143, 10)"
      ]
     },
     "execution_count": 263,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Now, we can select the subset of gp practices in london, using our previous list of all london CCGs\n",
    "\n",
    "london_ccgs = ['07L','07M','07N','07R','07T','07V','07W','07X','07Y','08A','08C','08D','08E','08F','08G','08H','08J','08K','08L','08M','08N','08P','08Q','08R','08T','08W','08X','08Y']\n",
    "gp_practices.CCG_CODE.isin(london_ccgs)\n",
    "\n",
    "london_gplookup= gp_practices[gp_practices.CCG_CODE.isin(london_ccgs)]\n",
    "\n",
    "london_gplookup.shape\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 264,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PUBLICATION</th>\n",
       "      <th>EXTRACT_DATE</th>\n",
       "      <th>TYPE</th>\n",
       "      <th>CCG_CODE</th>\n",
       "      <th>ONS_CCG_CODE</th>\n",
       "      <th>CODE</th>\n",
       "      <th>POSTCODE</th>\n",
       "      <th>SEX</th>\n",
       "      <th>AGE</th>\n",
       "      <th>NUMBER_OF_PATIENTS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3628</th>\n",
       "      <td>GP_PRAC_PAT_LIST</td>\n",
       "      <td>01APR2018</td>\n",
       "      <td>GP</td>\n",
       "      <td>07L</td>\n",
       "      <td>E38000004</td>\n",
       "      <td>F82001</td>\n",
       "      <td>RM9 5AS</td>\n",
       "      <td>ALL</td>\n",
       "      <td>ALL</td>\n",
       "      <td>6761</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3629</th>\n",
       "      <td>GP_PRAC_PAT_LIST</td>\n",
       "      <td>01APR2018</td>\n",
       "      <td>GP</td>\n",
       "      <td>07L</td>\n",
       "      <td>E38000004</td>\n",
       "      <td>F82003</td>\n",
       "      <td>RM10 9AT</td>\n",
       "      <td>ALL</td>\n",
       "      <td>ALL</td>\n",
       "      <td>5307</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3630</th>\n",
       "      <td>GP_PRAC_PAT_LIST</td>\n",
       "      <td>01APR2018</td>\n",
       "      <td>GP</td>\n",
       "      <td>07L</td>\n",
       "      <td>E38000004</td>\n",
       "      <td>F82005</td>\n",
       "      <td>RM10 9RR</td>\n",
       "      <td>ALL</td>\n",
       "      <td>ALL</td>\n",
       "      <td>6010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3631</th>\n",
       "      <td>GP_PRAC_PAT_LIST</td>\n",
       "      <td>01APR2018</td>\n",
       "      <td>GP</td>\n",
       "      <td>07L</td>\n",
       "      <td>E38000004</td>\n",
       "      <td>F82012</td>\n",
       "      <td>RM9 5TT</td>\n",
       "      <td>ALL</td>\n",
       "      <td>ALL</td>\n",
       "      <td>4105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3632</th>\n",
       "      <td>GP_PRAC_PAT_LIST</td>\n",
       "      <td>01APR2018</td>\n",
       "      <td>GP</td>\n",
       "      <td>07L</td>\n",
       "      <td>E38000004</td>\n",
       "      <td>F82015</td>\n",
       "      <td>RM9 6HT</td>\n",
       "      <td>ALL</td>\n",
       "      <td>ALL</td>\n",
       "      <td>5795</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           PUBLICATION EXTRACT_DATE TYPE CCG_CODE ONS_CCG_CODE    CODE  \\\n",
       "3628  GP_PRAC_PAT_LIST    01APR2018   GP      07L    E38000004  F82001   \n",
       "3629  GP_PRAC_PAT_LIST    01APR2018   GP      07L    E38000004  F82003   \n",
       "3630  GP_PRAC_PAT_LIST    01APR2018   GP      07L    E38000004  F82005   \n",
       "3631  GP_PRAC_PAT_LIST    01APR2018   GP      07L    E38000004  F82012   \n",
       "3632  GP_PRAC_PAT_LIST    01APR2018   GP      07L    E38000004  F82015   \n",
       "\n",
       "      POSTCODE  SEX  AGE  NUMBER_OF_PATIENTS  \n",
       "3628   RM9 5AS  ALL  ALL                6761  \n",
       "3629  RM10 9AT  ALL  ALL                5307  \n",
       "3630  RM10 9RR  ALL  ALL                6010  \n",
       "3631   RM9 5TT  ALL  ALL                4105  \n",
       "3632   RM9 6HT  ALL  ALL                5795  "
      ]
     },
     "execution_count": 264,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Exploring the subset of data we can see that these are London GP practices\n",
    "#a total of 1,143, including the number of patients at each practice\n",
    "london_gplookup.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 357,
   "metadata": {},
   "outputs": [],
   "source": [
    "total_patients_london = london_gplookup['NUMBER_OF_PATIENTS'].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 358,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "8566907"
      ]
     },
     "execution_count": 358,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total_patients_london"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 265,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([630., 437.,  68.,   6.,   0.,   1.,   0.,   0.,   0.,   1.]),\n",
       " array([1.00000e+00, 7.22360e+03, 1.44462e+04, 2.16688e+04, 2.88914e+04,\n",
       "        3.61140e+04, 4.33366e+04, 5.05592e+04, 5.77818e+04, 6.50044e+04,\n",
       "        7.22270e+04]),\n",
       " <a list of 10 Patch objects>)"
      ]
     },
     "execution_count": 265,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Exploring a rough histogram of practice lists, we see that a few\n",
    "#practices have very large lists (70k, 40k, ~25k,) and the majority\n",
    "#of practices have lists of between low thousands to 10-15k)\n",
    "#this makes sense and seems to fit what we expect\n",
    "x = london_gplookup.NUMBER_OF_PATIENTS\n",
    "\n",
    "plt.hist(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 266,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PUBLICATION           object\n",
       "EXTRACT_DATE          object\n",
       "TYPE                  object\n",
       "CCG_CODE              object\n",
       "ONS_CCG_CODE          object\n",
       "CODE                  object\n",
       "POSTCODE              object\n",
       "SEX                   object\n",
       "AGE                   object\n",
       "NUMBER_OF_PATIENTS     int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 266,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#quick look at data types in order to do a sum calculation on the number of patients at each GP practice\n",
    "london_gplookup.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 267,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/michaelshemko/anaconda/envs/py36/lib/python3.6/site-packages/pandas/core/generic.py:3643: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  self[name] = value\n"
     ]
    }
   ],
   "source": [
    "#not sure if this is necessary step,but tried sum previously and did not work until after I did this step\n",
    "london_gplookup.NUMBER_OF_PATIENTS = london_gplookup.NUMBER_OF_PATIENTS.astype(int)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 268,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PUBLICATION           object\n",
       "EXTRACT_DATE          object\n",
       "TYPE                  object\n",
       "CCG_CODE              object\n",
       "ONS_CCG_CODE          object\n",
       "CODE                  object\n",
       "POSTCODE              object\n",
       "SEX                   object\n",
       "AGE                   object\n",
       "NUMBER_OF_PATIENTS     int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 268,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "london_gplookup.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 269,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8566907\n"
     ]
    }
   ],
   "source": [
    "#Thus, the answer to question 1 in the assignment is\n",
    "#1a.  The total number of patients registered at GP practices in London\n",
    "#as at 1 Apr 2018 is 8,566,907\n",
    "Total_Patients = london_gplookup.NUMBER_OF_PATIENTS.sum()\n",
    "print(Total_Patients)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 270,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SHA</th>\n",
       "      <th>PCT</th>\n",
       "      <th>PRACTICE</th>\n",
       "      <th>BNF CODE</th>\n",
       "      <th>BNF NAME</th>\n",
       "      <th>prescr</th>\n",
       "      <th>NIC</th>\n",
       "      <th>ACT COST</th>\n",
       "      <th>QUANTITY</th>\n",
       "      <th>PERIOD</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y04937</td>\n",
       "      <td>0401010Z0AAAAAA</td>\n",
       "      <td>Zopiclone_Tab 7.5mg</td>\n",
       "      <td>6</td>\n",
       "      <td>1.56</td>\n",
       "      <td>2.12</td>\n",
       "      <td>63</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y04937</td>\n",
       "      <td>0401020K0AAAHAH</td>\n",
       "      <td>Diazepam_Tab 2mg</td>\n",
       "      <td>4</td>\n",
       "      <td>0.87</td>\n",
       "      <td>1.15</td>\n",
       "      <td>73</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y04937</td>\n",
       "      <td>0401020K0AAAIAI</td>\n",
       "      <td>Diazepam_Tab 5mg</td>\n",
       "      <td>2</td>\n",
       "      <td>0.46</td>\n",
       "      <td>0.56</td>\n",
       "      <td>35</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y04937</td>\n",
       "      <td>0402010ABAAABAB</td>\n",
       "      <td>Quetiapine_Tab 25mg</td>\n",
       "      <td>1</td>\n",
       "      <td>2.60</td>\n",
       "      <td>2.52</td>\n",
       "      <td>14</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y04937</td>\n",
       "      <td>0402010ADAAAAAA</td>\n",
       "      <td>Aripiprazole_Tab 10mg</td>\n",
       "      <td>1</td>\n",
       "      <td>1.53</td>\n",
       "      <td>1.53</td>\n",
       "      <td>14</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   SHA  PCT PRACTICE         BNF CODE  \\\n",
       "0  Q44  RTV   Y04937  0401010Z0AAAAAA   \n",
       "1  Q44  RTV   Y04937  0401020K0AAAHAH   \n",
       "2  Q44  RTV   Y04937  0401020K0AAAIAI   \n",
       "3  Q44  RTV   Y04937  0402010ABAAABAB   \n",
       "4  Q44  RTV   Y04937  0402010ADAAAAAA   \n",
       "\n",
       "  BNF NAME                                      prescr    NIC          \\\n",
       "0     Zopiclone_Tab 7.5mg                              6         1.56   \n",
       "1     Diazepam_Tab 2mg                                 4         0.87   \n",
       "2     Diazepam_Tab 5mg                                 2         0.46   \n",
       "3     Quetiapine_Tab 25mg                              1         2.60   \n",
       "4     Aripiprazole_Tab 10mg                            1         1.53   \n",
       "\n",
       "   ACT COST     QUANTITY  PERIOD                      \n",
       "0         2.12        63  201804                      \n",
       "1         1.15        73  201804                      \n",
       "2         0.56        35  201804                      \n",
       "3         2.52        14  201804                      \n",
       "4         1.53        14  201804                      "
      ]
     },
     "execution_count": 270,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#next, we bring in the total prescription data for April 2018 (all practices)\n",
    "#provided in the assignment files, but also downloadable from \n",
    "#https://digital.nhs.uk/data-and-information/publications/statistical/practice-level-prescribing-data/april-2018\n",
    "path = '/Users/michaelshemko/Downloads/'\n",
    "april_presc_filename=path + 'T201804PDPI+BNFT.CSV'\n",
    "april_presc = pd.read_csv(april_presc_filename)\n",
    "\n",
    "april_presc.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 271,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3628    F82001\n",
       "3629    F82003\n",
       "3630    F82005\n",
       "3631    F82012\n",
       "3632    F82015\n",
       "3633    F82017\n",
       "3634    F82018\n",
       "3635    F82025\n",
       "3636    F82027\n",
       "3637    F82034\n",
       "3638    F82038\n",
       "3639    F82040\n",
       "3640    F82042\n",
       "3641    F82051\n",
       "3642    F82604\n",
       "3643    F82612\n",
       "3644    F82621\n",
       "3645    F82625\n",
       "3646    F82634\n",
       "3647    F82642\n",
       "3648    F82647\n",
       "3649    F82650\n",
       "3650    F82660\n",
       "3651    F82661\n",
       "3652    F82668\n",
       "3653    F82676\n",
       "3654    F82677\n",
       "3655    F82678\n",
       "3656    F82679\n",
       "3657    F82680\n",
       "         ...  \n",
       "4885    E87050\n",
       "4886    E87057\n",
       "4887    E87061\n",
       "4888    E87063\n",
       "4889    E87065\n",
       "4890    E87067\n",
       "4891    E87637\n",
       "4892    E87665\n",
       "4893    E87682\n",
       "4894    E87701\n",
       "4895    E87702\n",
       "4896    E87706\n",
       "4897    E87711\n",
       "4898    E87715\n",
       "4899    E87720\n",
       "4900    E87722\n",
       "4901    E87733\n",
       "4902    E87735\n",
       "4903    E87738\n",
       "4904    E87742\n",
       "4905    E87746\n",
       "4906    E87750\n",
       "4907    E87751\n",
       "4908    E87755\n",
       "4909    E87762\n",
       "4910    Y00200\n",
       "4911    Y00507\n",
       "4912    Y01011\n",
       "4913    Y02842\n",
       "4914    Y03441\n",
       "Name: CODE, Length: 1143, dtype: object"
      ]
     },
     "execution_count": 271,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#next, we need the practice codes from all london gp practices\n",
    "#we already have the London GP codes from a previous step\n",
    "london_gplookup.CODE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 272,
   "metadata": {},
   "outputs": [],
   "source": [
    "london_gp_codes = london_gplookup.CODE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 273,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1217658, 11)"
      ]
     },
     "execution_count": 273,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#now we use the London GP codes to select the subset of rows from\n",
    "#the prescribing data, which gives us the april london gp precribing data\n",
    "london_gps = [\"F82001\", \"F82003\", \"F82005\", \"F82012\", \"F82015\", \"F82017\", \"F82018\", \"F82025\", \"F82027\", \"F82034\", \"F82038\", \"F82040\", \"F82042\", \"F82051\", \"F82604\", \"F82612\", \"F82621\", \"F82625\", \"F82634\", \"F82642\", \"F82647\", \"F82650\", \"F82660\", \"F82661\", \"F82668\", \"F82676\", \"F82677\", \"F82678\", \"F82679\", \"F82680\", \"F86040\", \"Y01280\", \"Y01719\", \"Y01795\", \"Y02575\", \"Y02583\", \"Y04786\", \"E83003\", \"E83005\", \"E83006\", \"E83007\", \"E83008\", \"E83009\", \"E83010\", \"E83011\", \"E83012\", \"E83013\", \"E83016\", \"E83017\", \"E83018\", \"E83020\", \"E83021\", \"E83024\", \"E83025\", \"E83026\", \"E83027\", \"E83028\", \"E83030\", \"E83031\", \"E83032\", \"E83034\", \"E83035\", \"E83036\", \"E83037\", \"E83038\", \"E83039\", \"E83041\", \"E83044\", \"E83045\", \"E83046\", \"E83049\", \"E83050\", \"E83053\", \"E83600\", \"E83613\", \"E83621\", \"E83622\", \"E83624\", \"E83629\", \"E83631\", \"E83632\", \"E83633\", \"E83637\", \"E83638\", \"E83639\", \"E83644\", \"E83649\", \"E83650\", \"E83653\", \"E83657\", \"E83668\", \"Y00105\", \"Y00316\", \"Y01697\", \"Y02986\", \"Y03663\", \"Y03664\", \"G83002\", \"G83004\", \"G83005\", \"G83006\", \"G83009\", \"G83010\", \"G83018\", \"G83024\", \"G83025\", \"G83028\", \"G83029\", \"G83033\", \"G83037\", \"G83046\", \"G83047\", \"G83049\", \"G83052\", \"G83053\", \"G83057\", \"G83061\", \"G83062\", \"G83064\", \"G83066\", \"G83630\", \"G83642\", \"G83672\", \"F83003\", \"F83005\", \"F83006\", \"F83011\", \"F83017\", \"F83018\", \"F83019\", \"F83020\", \"F83022\", \"F83023\", \"F83025\", \"F83042\", \"F83043\", \"F83044\", \"F83048\", \"F83050\", \"F83052\", \"F83055\", \"F83057\", \"F83058\", \"F83059\", \"F83061\", \"F83615\", \"F83623\", \"F83632\", \"F83633\", \"F83635\", \"F83658\", \"F83665\", \"F83672\", \"F83677\", \"F83682\", \"F83683\", \"Y02674\", \"F84003\", \"F84008\", \"F84013\", \"F84015\", \"F84018\", \"F84021\", \"F84033\", \"F84035\", \"F84036\", \"F84038\", \"F84041\", \"F84043\", \"F84060\", \"F84063\", \"F84069\", \"F84072\", \"F84080\", \"F84096\", \"F84105\", \"F84115\", \"F84117\", \"F84119\", \"F84601\", \"F84619\", \"F84620\", \"F84621\", \"F84624\", \"F84632\", \"F84635\", \"F84636\", \"F84640\", \"F84659\", \"F84668\", \"F84685\", \"F84686\", \"F84692\", \"F84694\", \"F84711\", \"F84716\", \"F84719\", \"F84720\", \"Y00403\", \"Y03049\", \"H83001\", \"H83004\", \"H83005\", \"H83006\", \"H83007\", \"H83008\", \"H83009\", \"H83010\", \"H83011\", \"H83012\", \"H83013\", \"H83014\", \"H83015\", \"H83016\", \"H83017\", \"H83018\", \"H83019\", \"H83020\", \"H83021\", \"H83022\", \"H83023\", \"H83024\", \"H83027\", \"H83028\", \"H83029\", \"H83030\", \"H83031\", \"H83033\", \"H83034\", \"H83037\", \"H83039\", \"H83040\", \"H83042\", \"H83043\", \"H83044\", \"H83046\", \"H83048\", \"H83049\", \"H83050\", \"H83051\", \"H83052\", \"H83053\", \"H83608\", \"H83609\", \"H83611\", \"H83620\", \"H83622\", \"H83624\", \"H83625\", \"H83626\", \"H83627\", \"H83631\", \"Y00182\", \"Y02962\", \"Y05317\", \"Y05318\", \"E84059\", \"E85006\", \"E85012\", \"E85013\", \"E85014\", \"E85019\", \"E85021\", \"E85023\", \"E85026\", \"E85028\", \"E85034\", \"E85041\", \"E85046\", \"E85049\", \"E85050\", \"E85051\", \"E85053\", \"E85054\", \"E85057\", \"E85061\", \"E85064\", \"E85066\", \"E85069\", \"E85075\", \"E85083\", \"E85088\", \"E85090\", \"E85091\", \"E85096\", \"E85098\", \"E85099\", \"E85103\", \"E85105\", \"E85107\", \"E85108\", \"E85109\", \"E85111\", \"E85112\", \"E85116\", \"E85119\", \"E85120\", \"E85121\", \"E85122\", \"E85123\", \"E85127\", \"E85129\", \"E85130\", \"E85617\", \"E85623\", \"E85628\", \"E85630\", \"E85633\", \"E85635\", \"E85640\", \"E85643\", \"E85656\", \"E85657\", \"E85663\", \"E85677\", \"E85680\", \"E85682\", \"E85687\", \"E85694\", \"E85712\", \"E85714\", \"E85715\", \"E85721\", \"E85723\", \"E85725\", \"E85726\", \"E85728\", \"E85733\", \"E85740\", \"E85743\", \"E85745\", \"Y01221\", \"Y02342\", \"Y04225\", \"F85002\", \"F85003\", \"F85004\", \"F85010\", \"F85015\", \"F85016\", \"F85020\", \"F85023\", \"F85024\", \"F85025\", \"F85027\", \"F85029\", \"F85032\", \"F85033\", \"F85035\", \"F85036\", \"F85039\", \"F85043\", \"F85044\", \"F85048\", \"F85053\", \"F85055\", \"F85058\", \"F85072\", \"F85076\", \"F85625\", \"F85634\", \"F85642\", \"F85650\", \"F85652\", \"F85654\", \"F85656\", \"F85663\", \"F85666\", \"F85676\", \"F85678\", \"F85681\", \"F85682\", \"F85684\", \"F85686\", \"F85687\", \"F85700\", \"F85701\", \"F85703\", \"F85707\", \"Y00057\", \"Y00612\", \"Y03402\", \"E85001\", \"E85004\", \"E85007\", \"E85015\", \"E85018\", \"E85024\", \"E85030\", \"E85035\", \"E85040\", \"E85045\", \"E85052\", \"E85056\", \"E85058\", \"E85059\", \"E85060\", \"E85062\", \"E85071\", \"E85113\", \"E85114\", \"E85115\", \"E85126\", \"E85600\", \"E85605\", \"E85625\", \"E85658\", \"E85681\", \"E85683\", \"E85692\", \"E85693\", \"E85696\", \"E85697\", \"E85699\", \"E85700\", \"E85707\", \"E85708\", \"E85713\", \"E85716\", \"E85718\", \"E85732\", \"E85734\", \"E85735\", \"E85736\", \"E85739\", \"E85744\", \"E85746\", \"E85750\", \"Y02671\", \"Y02672\", \"G83001\", \"G83003\", \"G83012\", \"G83013\", \"G83015\", \"G83016\", \"G83019\", \"G83021\", \"G83022\", \"G83026\", \"G83027\", \"G83030\", \"G83031\", \"G83034\", \"G83039\", \"G83044\", \"G83058\", \"G83060\", \"G83065\", \"G83067\", \"G83628\", \"G83631\", \"G83633\", \"G83635\", \"G83641\", \"G83647\", \"G83651\", \"G83654\", \"G83663\", \"G83673\", \"G83680\", \"Y02222\", \"Y02974\", \"Y03296\", \"Y03755\", \"E85003\", \"E85005\", \"E85008\", \"E85016\", \"E85020\", \"E85025\", \"E85029\", \"E85032\", \"E85033\", \"E85038\", \"E85042\", \"E85048\", \"E85055\", \"E85074\", \"E85077\", \"E85118\", \"E85124\", \"E85125\", \"E85128\", \"E85624\", \"E85636\", \"E85649\", \"E85659\", \"E85672\", \"E85685\", \"E85719\", \"E85748\", \"Y02589\", \"Y02906\", \"F85007\", \"F85008\", \"F85013\", \"F85014\", \"F85017\", \"F85019\", \"F85028\", \"F85030\", \"F85031\", \"F85034\", \"F85045\", \"F85046\", \"F85052\", \"F85060\", \"F85061\", \"F85063\", \"F85064\", \"F85065\", \"F85066\", \"F85067\", \"F85069\", \"F85071\", \"F85615\", \"F85623\", \"F85628\", \"F85640\", \"F85645\", \"F85669\", \"F85675\", \"F85688\", \"F85697\", \"F85705\", \"F85711\", \"Y01655\", \"Y02117\", \"Y03035\", \"Y03135\", \"Y05330\", \"E84004\", \"E84005\", \"E84008\", \"E84009\", \"E84014\", \"E84018\", \"E84022\", \"E84024\", \"E84039\", \"E84040\", \"E84044\", \"E84053\", \"E84057\", \"E84058\", \"E84061\", \"E84062\", \"E84068\", \"E84069\", \"E84070\", \"E84075\", \"E84601\", \"E84617\", \"E84646\", \"E84647\", \"E84653\", \"E84657\", \"E84658\", \"E84663\", \"E84676\", \"E84680\", \"E84681\", \"E84693\", \"E84713\", \"Y03528\", \"Y05080\", \"F82002\", \"F82006\", \"F82007\", \"F82008\", \"F82009\", \"F82010\", \"F82011\", \"F82013\", \"F82014\", \"F82016\", \"F82019\", \"F82021\", \"F82022\", \"F82023\", \"F82028\", \"F82030\", \"F82031\", \"F82033\", \"F82039\", \"F82045\", \"F82053\", \"F82055\", \"F82607\", \"F82609\", \"F82610\", \"F82614\", \"F82619\", \"F82624\", \"F82627\", \"F82630\", \"F82638\", \"F82639\", \"F82648\", \"F82649\", \"F82653\", \"F82663\", \"F82666\", \"F82670\", \"F82671\", \"F82674\", \"F82675\", \"F82686\", \"Y00312\", \"Y02973\", \"E86001\", \"E86003\", \"E86004\", \"E86005\", \"E86006\", \"E86007\", \"E86009\", \"E86010\", \"E86011\", \"E86012\", \"E86014\", \"E86015\", \"E86016\", \"E86017\", \"E86018\", \"E86019\", \"E86020\", \"E86022\", \"E86024\", \"E86026\", \"E86027\", \"E86028\", \"E86029\", \"E86030\", \"E86033\", \"E86034\", \"E86036\", \"E86038\", \"E86041\", \"E86042\", \"E86605\", \"E86609\", \"E86610\", \"E86612\", \"E86615\", \"E86618\", \"E86619\", \"E86620\", \"E86625\", \"E86626\", \"E86629\", \"E86632\", \"E86637\", \"E86640\", \"Y00352\", \"Y02812\", \"F83002\", \"F83004\", \"F83007\", \"F83008\", \"F83010\", \"F83012\", \"F83015\", \"F83021\", \"F83027\", \"F83032\", \"F83033\", \"F83034\", \"F83039\", \"F83045\", \"F83051\", \"F83053\", \"F83056\", \"F83060\", \"F83063\", \"F83064\", \"F83624\", \"F83652\", \"F83660\", \"F83664\", \"F83666\", \"F83671\", \"F83673\", \"F83674\", \"F83678\", \"F83680\", \"F83681\", \"F83686\", \"Y01066\", \"H84010\", \"H84015\", \"H84016\", \"H84020\", \"H84025\", \"H84027\", \"H84030\", \"H84033\", \"H84034\", \"H84042\", \"H84049\", \"H84050\", \"H84051\", \"H84053\", \"H84054\", \"H84061\", \"H84062\", \"H84618\", \"H84619\", \"H84629\", \"H84635\", \"H84637\", \"H85055\", \"Y03054\", \"G85002\", \"G85010\", \"G85011\", \"G85014\", \"G85016\", \"G85021\", \"G85022\", \"G85025\", \"G85028\", \"G85039\", \"G85041\", \"G85044\", \"G85045\", \"G85047\", \"G85053\", \"G85054\", \"G85073\", \"G85083\", \"G85086\", \"G85096\", \"G85100\", \"G85102\", \"G85109\", \"G85113\", \"G85118\", \"G85123\", \"G85127\", \"G85129\", \"G85130\", \"G85133\", \"G85135\", \"G85136\", \"G85137\", \"G85647\", \"G85662\", \"G85673\", \"G85674\", \"G85690\", \"G85695\", \"G85706\", \"G85708\", \"G85724\", \"Y00020\", \"Y01962\", \"Y03063\", \"G85003\", \"G85004\", \"G85005\", \"G85008\", \"G85015\", \"G85020\", \"G85023\", \"G85024\", \"G85026\", \"G85027\", \"G85032\", \"G85035\", \"G85036\", \"G85038\", \"G85046\", \"G85048\", \"G85055\", \"G85057\", \"G85061\", \"G85076\", \"G85081\", \"G85085\", \"G85089\", \"G85104\", \"G85105\", \"G85114\", \"G85120\", \"G85121\", \"G85124\", \"G85633\", \"G85696\", \"G85698\", \"G85711\", \"G85716\", \"G85717\", \"G85722\", \"G85727\", \"G85736\", \"Y02957\", \"F84004\", \"F84006\", \"F84009\", \"F84010\", \"F84014\", \"F84017\", \"F84022\", \"F84047\", \"F84050\", \"F84052\", \"F84053\", \"F84070\", \"F84074\", \"F84077\", \"F84086\", \"F84088\", \"F84089\", \"F84092\", \"F84093\", \"F84097\", \"F84111\", \"F84121\", \"F84124\", \"F84631\", \"F84641\", \"F84642\", \"F84657\", \"F84658\", \"F84660\", \"F84661\", \"F84666\", \"F84669\", \"F84670\", \"F84672\", \"F84673\", \"F84677\", \"F84679\", \"F84681\", \"F84706\", \"F84708\", \"F84717\", \"F84724\", \"F84729\", \"F84730\", \"F84734\", \"F84735\", \"F84739\", \"F84740\", \"F84741\", \"F84742\", \"F84749\", \"Y02928\", \"Y04273\", \"F86007\", \"F86008\", \"F86009\", \"F86010\", \"F86012\", \"F86013\", \"F86020\", \"F86022\", \"F86023\", \"F86025\", \"F86028\", \"F86032\", \"F86034\", \"F86042\", \"F86057\", \"F86060\", \"F86064\", \"F86066\", \"F86081\", \"F86082\", \"F86083\", \"F86085\", \"F86087\", \"F86612\", \"F86624\", \"F86637\", \"F86641\", \"F86642\", \"F86652\", \"F86655\", \"F86657\", \"F86658\", \"F86691\", \"F86692\", \"F86698\", \"F86702\", \"F86703\", \"F86704\", \"F86707\", \"F86731\", \"Y00090\", \"Y00155\", \"Y00918\", \"Y02987\", \"H84002\", \"H84005\", \"H84006\", \"H84007\", \"H84012\", \"H84014\", \"H84017\", \"H84018\", \"H84023\", \"H84031\", \"H84032\", \"H84039\", \"H84040\", \"H84041\", \"H84043\", \"H84044\", \"H84048\", \"H84055\", \"H84057\", \"H84059\", \"H84060\", \"H84608\", \"H84623\", \"H84625\", \"H84630\", \"H84632\", \"H84639\", \"Y01206\", \"G85001\", \"G85006\", \"G85009\", \"G85013\", \"G85019\", \"G85029\", \"G85030\", \"G85031\", \"G85034\", \"G85040\", \"G85042\", \"G85050\", \"G85051\", \"G85052\", \"G85082\", \"G85084\", \"G85087\", \"G85091\", \"G85097\", \"G85106\", \"G85112\", \"G85119\", \"G85125\", \"G85132\", \"G85134\", \"G85138\", \"G85623\", \"G85632\", \"G85642\", \"G85644\", \"G85651\", \"G85681\", \"G85685\", \"G85705\", \"G85712\", \"G85715\", \"G85721\", \"G85723\", \"G85726\", \"Y00454\", \"Y00812\", \"H85020\", \"H85024\", \"H85026\", \"H85027\", \"H85028\", \"H85029\", \"H85033\", \"H85035\", \"H85037\", \"H85038\", \"H85051\", \"H85070\", \"H85072\", \"H85076\", \"H85078\", \"H85090\", \"H85092\", \"H85101\", \"H85110\", \"H85112\", \"H85634\", \"H85649\", \"H85656\", \"Y02968\", \"H85018\", \"H85019\", \"H85021\", \"H85022\", \"H85023\", \"H85025\", \"H85030\", \"H85031\", \"H85032\", \"H85053\", \"H85054\", \"H85063\", \"H85095\", \"H85103\", \"H85105\", \"H85113\", \"H85115\", \"H85116\", \"H85618\", \"H85653\", \"H85662\", \"H85665\", \"H85683\", \"H85686\", \"H85693\", \"F86001\", \"F86004\", \"F86005\", \"F86006\", \"F86011\", \"F86018\", \"F86026\", \"F86030\", \"F86036\", \"F86038\", \"F86044\", \"F86045\", \"F86049\", \"F86058\", \"F86062\", \"F86073\", \"F86074\", \"F86078\", \"F86086\", \"F86088\", \"F86607\", \"F86616\", \"F86621\", \"F86625\", \"F86626\", \"F86627\", \"F86638\", \"F86644\", \"F86650\", \"F86664\", \"F86666\", \"F86679\", \"F86689\", \"F86696\", \"F86700\", \"F86701\", \"F86705\", \"F86708\", \"F86712\", \"Y00092\", \"Y01291\", \"Y01839\", \"Y02585\", \"H85001\", \"H85002\", \"H85003\", \"H85005\", \"H85006\", \"H85007\", \"H85008\", \"H85009\", \"H85011\", \"H85012\", \"H85041\", \"H85045\", \"H85047\", \"H85048\", \"H85049\", \"H85052\", \"H85056\", \"H85057\", \"H85061\", \"H85065\", \"H85066\", \"H85067\", \"H85069\", \"H85075\", \"H85077\", \"H85082\", \"H85087\", \"H85088\", \"H85100\", \"H85111\", \"H85114\", \"H85637\", \"H85643\", \"H85659\", \"H85664\", \"H85680\", \"H85682\", \"H85691\", \"H85695\", \"Y00367\", \"Y01132\", \"Y02423\", \"Y02946\", \"E87003\", \"E87004\", \"E87007\", \"E87009\", \"E87013\", \"E87016\", \"E87021\", \"E87024\", \"E87026\", \"E87029\", \"E87038\", \"E87043\", \"E87047\", \"E87048\", \"E87050\", \"E87057\", \"E87061\", \"E87063\", \"E87065\", \"E87067\", \"E87637\", \"E87665\", \"E87682\", \"E87701\", \"E87702\", \"E87706\", \"E87711\", \"E87715\", \"E87720\", \"E87722\", \"E87733\", \"E87735\", \"E87738\", \"E87742\", \"E87746\", \"E87750\", \"E87751\", \"E87755\", \"E87762\", \"Y00200\", \"Y00507\", \"Y01011\", \"Y02842\", \"Y03441\"]\n",
    "\n",
    "april_presc.PRACTICE.isin(london_gps)\n",
    "\n",
    "london_gp_precr= april_presc[april_presc.PRACTICE.isin(london_gps)]\n",
    "\n",
    "london_gp_precr.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 274,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SHA</th>\n",
       "      <th>PCT</th>\n",
       "      <th>PRACTICE</th>\n",
       "      <th>BNF CODE</th>\n",
       "      <th>BNF NAME</th>\n",
       "      <th>prescr</th>\n",
       "      <th>NIC</th>\n",
       "      <th>ACT COST</th>\n",
       "      <th>QUANTITY</th>\n",
       "      <th>PERIOD</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6011502</th>\n",
       "      <td>Q61</td>\n",
       "      <td>07L</td>\n",
       "      <td>F82001</td>\n",
       "      <td>0101010L0BEAAAI</td>\n",
       "      <td>Maalox Plus_Susp</td>\n",
       "      <td>1</td>\n",
       "      <td>2.91</td>\n",
       "      <td>2.71</td>\n",
       "      <td>250</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6011503</th>\n",
       "      <td>Q61</td>\n",
       "      <td>07L</td>\n",
       "      <td>F82001</td>\n",
       "      <td>0101021B0BEADAJ</td>\n",
       "      <td>Gaviscon Infant_Sach 2g (Dual Pack) S/F</td>\n",
       "      <td>1</td>\n",
       "      <td>19.28</td>\n",
       "      <td>17.89</td>\n",
       "      <td>60</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6011504</th>\n",
       "      <td>Q61</td>\n",
       "      <td>07L</td>\n",
       "      <td>F82001</td>\n",
       "      <td>0101021B0BEAFAH</td>\n",
       "      <td>Gaviscon_Liq Relief Peppermint</td>\n",
       "      <td>2</td>\n",
       "      <td>27.75</td>\n",
       "      <td>25.76</td>\n",
       "      <td>1800</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6011505</th>\n",
       "      <td>Q61</td>\n",
       "      <td>07L</td>\n",
       "      <td>F82001</td>\n",
       "      <td>0101021B0BEAIAL</td>\n",
       "      <td>Gaviscon Advance_Liq (Aniseed) (Reckitt)</td>\n",
       "      <td>10</td>\n",
       "      <td>56.32</td>\n",
       "      <td>52.36</td>\n",
       "      <td>5500</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6011506</th>\n",
       "      <td>Q61</td>\n",
       "      <td>07L</td>\n",
       "      <td>F82001</td>\n",
       "      <td>0101021B0BEBEAL</td>\n",
       "      <td>Gaviscon Advance_Liq (Peppermint) S/F</td>\n",
       "      <td>13</td>\n",
       "      <td>82.92</td>\n",
       "      <td>77.26</td>\n",
       "      <td>7650</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         SHA  PCT PRACTICE         BNF CODE  \\\n",
       "6011502  Q61  07L   F82001  0101010L0BEAAAI   \n",
       "6011503  Q61  07L   F82001  0101021B0BEADAJ   \n",
       "6011504  Q61  07L   F82001  0101021B0BEAFAH   \n",
       "6011505  Q61  07L   F82001  0101021B0BEAIAL   \n",
       "6011506  Q61  07L   F82001  0101021B0BEBEAL   \n",
       "\n",
       "        BNF NAME                                      prescr    NIC          \\\n",
       "6011502     Maalox Plus_Susp                                 1         2.91   \n",
       "6011503     Gaviscon Infant_Sach 2g (Dual Pack) S/F          1        19.28   \n",
       "6011504     Gaviscon_Liq Relief Peppermint                   2        27.75   \n",
       "6011505     Gaviscon Advance_Liq (Aniseed) (Reckitt)        10        56.32   \n",
       "6011506     Gaviscon Advance_Liq (Peppermint) S/F           13        82.92   \n",
       "\n",
       "         ACT COST     QUANTITY  PERIOD                      \n",
       "6011502         2.71       250  201804                      \n",
       "6011503        17.89        60  201804                      \n",
       "6011504        25.76      1800  201804                      \n",
       "6011505        52.36      5500  201804                      \n",
       "6011506        77.26      7650  201804                      "
      ]
     },
     "execution_count": 274,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#exploring this data we see london practice codes and presribing data\n",
    "london_gp_precr.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 275,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1217658, 11)"
      ]
     },
     "execution_count": 275,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "london_gp_precr.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 276,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       " SHA                                             object\n",
       "PCT                                              object\n",
       "PRACTICE                                         object\n",
       "BNF CODE                                         object\n",
       "BNF NAME                                         object\n",
       "prescr                                            int64\n",
       "NIC                                             float64\n",
       "ACT COST                                        float64\n",
       "QUANTITY                                          int64\n",
       "PERIOD                                            int64\n",
       "                                                 object\n",
       "dtype: object"
      ]
     },
     "execution_count": 276,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "london_gp_precr.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 277,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[' SHA',\n",
       " 'PCT',\n",
       " 'PRACTICE',\n",
       " 'BNF CODE',\n",
       " 'BNF NAME                                    ',\n",
       " 'prescr  ',\n",
       " 'NIC        ',\n",
       " 'ACT COST   ',\n",
       " 'QUANTITY',\n",
       " 'PERIOD',\n",
       " '                 ']"
      ]
     },
     "execution_count": 277,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "london_gp_precr.columns.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "metadata": {},
   "outputs": [],
   "source": [
    "london_gp_precr.columns = london_gp_precr.columns.str.lower()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 279,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[' sha',\n",
       " 'pct',\n",
       " 'practice',\n",
       " 'bnf code',\n",
       " 'bnf name                                    ',\n",
       " 'prescr  ',\n",
       " 'nic        ',\n",
       " 'act cost   ',\n",
       " 'quantity',\n",
       " 'period',\n",
       " '                 ']"
      ]
     },
     "execution_count": 279,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "london_gp_precr.columns.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 280,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index([' sha', 'pct', 'practice', 'bnf code',\n",
       "       'bnf name                                    ', 'prescr  ',\n",
       "       'nic        ', 'act cost   ', 'quantity', 'period',\n",
       "       '                 '],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 280,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "london_gp_precr.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 281,
   "metadata": {},
   "outputs": [],
   "source": [
    "#cleaning up the headers to allow sum calculation\n",
    "london_gp_precr = london_gp_precr.rename(columns={'prescr  ': 'prescr'})\n",
    "london_gp_precr = london_gp_precr.rename(columns={'act cost   ': 'actual_cost'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 282,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9052454\n"
     ]
    }
   ],
   "source": [
    "#we can then answer part 1b - total number of prescriptions\n",
    "#total number of presriptions in london gp practices in april 2018\n",
    "#is equal to 9,052,454 prescriptions\n",
    "total_prescriptions = london_gp_precr.prescr.sum()\n",
    "print(total_prescriptions)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 283,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "66498516.330000006\n"
     ]
    }
   ],
   "source": [
    "#next, part 1c - total actual cost of these prescriptions\n",
    "#using the ACT COST column = £66,498,516.33\n",
    "total_actual_cost = london_gp_precr.actual_cost.sum()\n",
    "print(total_actual_cost)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 284,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sha</th>\n",
       "      <th>pct</th>\n",
       "      <th>practice</th>\n",
       "      <th>bnf code</th>\n",
       "      <th>bnf name</th>\n",
       "      <th>prescr</th>\n",
       "      <th>nic</th>\n",
       "      <th>actual_cost</th>\n",
       "      <th>quantity</th>\n",
       "      <th>period</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6535206</th>\n",
       "      <td>Q61</td>\n",
       "      <td>08W</td>\n",
       "      <td>F86018</td>\n",
       "      <td>1404000H0AAAKAK</td>\n",
       "      <td>Influenza_Vac SplitViron Inact 0.5ml Pfs</td>\n",
       "      <td>2249</td>\n",
       "      <td>14820.91</td>\n",
       "      <td>13744.79</td>\n",
       "      <td>2249</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6249702</th>\n",
       "      <td>Q61</td>\n",
       "      <td>07X</td>\n",
       "      <td>Y03402</td>\n",
       "      <td>1404000H0AAAKAK</td>\n",
       "      <td>Influenza_Vac SplitViron Inact 0.5ml Pfs</td>\n",
       "      <td>2012</td>\n",
       "      <td>13259.08</td>\n",
       "      <td>12296.36</td>\n",
       "      <td>2012</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7299819</th>\n",
       "      <td>Q63</td>\n",
       "      <td>08Q</td>\n",
       "      <td>G85034</td>\n",
       "      <td>0103050P0AAAAAA</td>\n",
       "      <td>Omeprazole_Cap E/C 20mg</td>\n",
       "      <td>1885</td>\n",
       "      <td>1424.43</td>\n",
       "      <td>1438.32</td>\n",
       "      <td>66473</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7301081</th>\n",
       "      <td>Q63</td>\n",
       "      <td>08Q</td>\n",
       "      <td>G85034</td>\n",
       "      <td>0601022B0AAABAB</td>\n",
       "      <td>Metformin HCl_Tab 500mg</td>\n",
       "      <td>1654</td>\n",
       "      <td>5078.09</td>\n",
       "      <td>4770.96</td>\n",
       "      <td>157954</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7300101</th>\n",
       "      <td>Q63</td>\n",
       "      <td>08Q</td>\n",
       "      <td>G85034</td>\n",
       "      <td>0206020A0AAABAB</td>\n",
       "      <td>Amlodipine_Tab 10mg</td>\n",
       "      <td>1578</td>\n",
       "      <td>3175.91</td>\n",
       "      <td>3037.49</td>\n",
       "      <td>56218</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7300208</th>\n",
       "      <td>Q63</td>\n",
       "      <td>08Q</td>\n",
       "      <td>G85034</td>\n",
       "      <td>0212000B0AAABAB</td>\n",
       "      <td>Atorvastatin_Tab 20mg</td>\n",
       "      <td>1548</td>\n",
       "      <td>1287.01</td>\n",
       "      <td>1292.84</td>\n",
       "      <td>51322</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7300209</th>\n",
       "      <td>Q63</td>\n",
       "      <td>08Q</td>\n",
       "      <td>G85034</td>\n",
       "      <td>0212000B0AAACAC</td>\n",
       "      <td>Atorvastatin_Tab 40mg</td>\n",
       "      <td>1378</td>\n",
       "      <td>1204.49</td>\n",
       "      <td>1225.39</td>\n",
       "      <td>34285</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7300100</th>\n",
       "      <td>Q63</td>\n",
       "      <td>08Q</td>\n",
       "      <td>G85034</td>\n",
       "      <td>0206020A0AAAAAA</td>\n",
       "      <td>Amlodipine_Tab 5mg</td>\n",
       "      <td>1313</td>\n",
       "      <td>2191.75</td>\n",
       "      <td>2114.40</td>\n",
       "      <td>42883</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7300629</th>\n",
       "      <td>Q63</td>\n",
       "      <td>08Q</td>\n",
       "      <td>G85034</td>\n",
       "      <td>0407010H0AAAMAM</td>\n",
       "      <td>Paracet_Tab 500mg</td>\n",
       "      <td>1205</td>\n",
       "      <td>1226.11</td>\n",
       "      <td>1195.59</td>\n",
       "      <td>126500</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6316494</th>\n",
       "      <td>Q61</td>\n",
       "      <td>08F</td>\n",
       "      <td>F82030</td>\n",
       "      <td>1404000H0BWAAAF</td>\n",
       "      <td>Quadrivalent_Vac Inact 0.5ml Pfs</td>\n",
       "      <td>1184</td>\n",
       "      <td>9472.00</td>\n",
       "      <td>8784.25</td>\n",
       "      <td>1184</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         sha  pct practice         bnf code  \\\n",
       "6535206  Q61  08W   F86018  1404000H0AAAKAK   \n",
       "6249702  Q61  07X   Y03402  1404000H0AAAKAK   \n",
       "7299819  Q63  08Q   G85034  0103050P0AAAAAA   \n",
       "7301081  Q63  08Q   G85034  0601022B0AAABAB   \n",
       "7300101  Q63  08Q   G85034  0206020A0AAABAB   \n",
       "7300208  Q63  08Q   G85034  0212000B0AAABAB   \n",
       "7300209  Q63  08Q   G85034  0212000B0AAACAC   \n",
       "7300100  Q63  08Q   G85034  0206020A0AAAAAA   \n",
       "7300629  Q63  08Q   G85034  0407010H0AAAMAM   \n",
       "6316494  Q61  08F   F82030  1404000H0BWAAAF   \n",
       "\n",
       "        bnf name                                      prescr  nic          \\\n",
       "6535206     Influenza_Vac SplitViron Inact 0.5ml Pfs    2249     14820.91   \n",
       "6249702     Influenza_Vac SplitViron Inact 0.5ml Pfs    2012     13259.08   \n",
       "7299819     Omeprazole_Cap E/C 20mg                     1885      1424.43   \n",
       "7301081     Metformin HCl_Tab 500mg                     1654      5078.09   \n",
       "7300101     Amlodipine_Tab 10mg                         1578      3175.91   \n",
       "7300208     Atorvastatin_Tab 20mg                       1548      1287.01   \n",
       "7300209     Atorvastatin_Tab 40mg                       1378      1204.49   \n",
       "7300100     Amlodipine_Tab 5mg                          1313      2191.75   \n",
       "7300629     Paracet_Tab 500mg                           1205      1226.11   \n",
       "6316494     Quadrivalent_Vac Inact 0.5ml Pfs            1184      9472.00   \n",
       "\n",
       "         actual_cost  quantity  period                      \n",
       "6535206     13744.79      2249  201804                      \n",
       "6249702     12296.36      2012  201804                      \n",
       "7299819      1438.32     66473  201804                      \n",
       "7301081      4770.96    157954  201804                      \n",
       "7300101      3037.49     56218  201804                      \n",
       "7300208      1292.84     51322  201804                      \n",
       "7300209      1225.39     34285  201804                      \n",
       "7300100      2114.40     42883  201804                      \n",
       "7300629      1195.59    126500  201804                      \n",
       "6316494      8784.25      1184  201804                      "
      ]
     },
     "execution_count": 284,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#the next question 1d asks for the top 10 most frequent drugs prescribed\n",
    "\n",
    "london_sorted=london_gp_precr.sort_values('prescr', axis=0, ascending=False, kind='quicksort', na_position='last')\n",
    "london_top10 = london_sorted.head(10)\n",
    "london_top10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 285,
   "metadata": {},
   "outputs": [],
   "source": [
    "#from the output above, we see that the top 10 drugs prescribed\n",
    "#in london gp practices in april 2018 are - in descending order:\n",
    "#1 - Influenza_Vac SplitViron Inact 0.5ml Pfs\n",
    "#2 - Influenza_Vac SplitViron Inact 0.5ml Pfs\n",
    "#3 - Omeprazole_Cap E/C 20mg\n",
    "#4 - Metformin HCl_Tab 500mg\n",
    "#5 - Amlodipine_Tab 10mg\n",
    "#6 - Atorvastatin_Tab 20mg\n",
    "#7 - Atorvastatin_Tab 40mg\n",
    "#8 - Amlodipine_Tab 5mg\n",
    "#9 - Paracet_Tab 500mg\n",
    "#10 - Quadrivalent_Vac Inact 0.5ml Pfs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 286,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sha</th>\n",
       "      <th>pct</th>\n",
       "      <th>practice</th>\n",
       "      <th>bnf code</th>\n",
       "      <th>bnf name</th>\n",
       "      <th>prescr</th>\n",
       "      <th>nic</th>\n",
       "      <th>actual_cost</th>\n",
       "      <th>quantity</th>\n",
       "      <th>period</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6692418</th>\n",
       "      <td>Q62</td>\n",
       "      <td>07W</td>\n",
       "      <td>E85680</td>\n",
       "      <td>20030900082</td>\n",
       "      <td>Silflex 12cm x 15cm Wound Dress Soft Slc</td>\n",
       "      <td>1</td>\n",
       "      <td>45.80</td>\n",
       "      <td>42.49</td>\n",
       "      <td>10</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6692408</th>\n",
       "      <td>Q62</td>\n",
       "      <td>07W</td>\n",
       "      <td>E85680</td>\n",
       "      <td>190500000BBDPA0</td>\n",
       "      <td>MacuShield_Cap</td>\n",
       "      <td>1</td>\n",
       "      <td>10.95</td>\n",
       "      <td>10.17</td>\n",
       "      <td>30</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6692409</th>\n",
       "      <td>Q62</td>\n",
       "      <td>07W</td>\n",
       "      <td>E85680</td>\n",
       "      <td>190700000BBCJA0</td>\n",
       "      <td>Resource_ThickenUp Clr Pdr</td>\n",
       "      <td>1</td>\n",
       "      <td>16.92</td>\n",
       "      <td>15.70</td>\n",
       "      <td>254</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6692410</th>\n",
       "      <td>Q62</td>\n",
       "      <td>07W</td>\n",
       "      <td>E85680</td>\n",
       "      <td>190700000BBCVA0</td>\n",
       "      <td>Resource_ThickenUp Clr Pdr Sach 1.2g</td>\n",
       "      <td>1</td>\n",
       "      <td>46.64</td>\n",
       "      <td>43.37</td>\n",
       "      <td>212</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6692412</th>\n",
       "      <td>Q62</td>\n",
       "      <td>07W</td>\n",
       "      <td>E85680</td>\n",
       "      <td>20030100381</td>\n",
       "      <td>Tegaderm + Pad 9cm x 10cm VP Adh Film Dr</td>\n",
       "      <td>1</td>\n",
       "      <td>19.50</td>\n",
       "      <td>18.10</td>\n",
       "      <td>30</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6692413</th>\n",
       "      <td>Q62</td>\n",
       "      <td>07W</td>\n",
       "      <td>E85680</td>\n",
       "      <td>20030100600</td>\n",
       "      <td>Adpore 10cm x 10cm Adh Dress Pfa</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.94</td>\n",
       "      <td>10</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6692414</th>\n",
       "      <td>Q62</td>\n",
       "      <td>07W</td>\n",
       "      <td>E85680</td>\n",
       "      <td>20030100608</td>\n",
       "      <td>Cosmopor 8cm x 15cm Adh Dress Pfa</td>\n",
       "      <td>1</td>\n",
       "      <td>4.95</td>\n",
       "      <td>4.60</td>\n",
       "      <td>15</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6692416</th>\n",
       "      <td>Q62</td>\n",
       "      <td>07W</td>\n",
       "      <td>E85680</td>\n",
       "      <td>20030400102</td>\n",
       "      <td>DuoDERM Ex Thin 15cm x 15cm Wound Dress</td>\n",
       "      <td>1</td>\n",
       "      <td>29.00</td>\n",
       "      <td>26.91</td>\n",
       "      <td>10</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6692417</th>\n",
       "      <td>Q62</td>\n",
       "      <td>07W</td>\n",
       "      <td>E85680</td>\n",
       "      <td>20030900042</td>\n",
       "      <td>Mepitel One 13cm x 15cm Wound Dress Soft</td>\n",
       "      <td>1</td>\n",
       "      <td>199.20</td>\n",
       "      <td>184.75</td>\n",
       "      <td>40</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7442541</th>\n",
       "      <td>Q63</td>\n",
       "      <td>08X</td>\n",
       "      <td>Y02946</td>\n",
       "      <td>23944809510</td>\n",
       "      <td>ConvaTec_Combihesive Natura Drnbl Pouch</td>\n",
       "      <td>1</td>\n",
       "      <td>13.44</td>\n",
       "      <td>12.46</td>\n",
       "      <td>10</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         sha  pct practice         bnf code  \\\n",
       "6692418  Q62  07W   E85680  20030900082       \n",
       "6692408  Q62  07W   E85680  190500000BBDPA0   \n",
       "6692409  Q62  07W   E85680  190700000BBCJA0   \n",
       "6692410  Q62  07W   E85680  190700000BBCVA0   \n",
       "6692412  Q62  07W   E85680  20030100381       \n",
       "6692413  Q62  07W   E85680  20030100600       \n",
       "6692414  Q62  07W   E85680  20030100608       \n",
       "6692416  Q62  07W   E85680  20030400102       \n",
       "6692417  Q62  07W   E85680  20030900042       \n",
       "7442541  Q63  08X   Y02946  23944809510       \n",
       "\n",
       "        bnf name                                      prescr  nic          \\\n",
       "6692418     Silflex 12cm x 15cm Wound Dress Soft Slc       1        45.80   \n",
       "6692408     MacuShield_Cap                                 1        10.95   \n",
       "6692409     Resource_ThickenUp Clr Pdr                     1        16.92   \n",
       "6692410     Resource_ThickenUp Clr Pdr Sach 1.2g           1        46.64   \n",
       "6692412     Tegaderm + Pad 9cm x 10cm VP Adh Film Dr       1        19.50   \n",
       "6692413     Adpore 10cm x 10cm Adh Dress Pfa               1         1.00   \n",
       "6692414     Cosmopor 8cm x 15cm Adh Dress Pfa              1         4.95   \n",
       "6692416     DuoDERM Ex Thin 15cm x 15cm Wound Dress        1        29.00   \n",
       "6692417     Mepitel One 13cm x 15cm Wound Dress Soft       1       199.20   \n",
       "7442541     ConvaTec_Combihesive Natura Drnbl Pouch        1        13.44   \n",
       "\n",
       "         actual_cost  quantity  period                      \n",
       "6692418        42.49        10  201804                      \n",
       "6692408        10.17        30  201804                      \n",
       "6692409        15.70       254  201804                      \n",
       "6692410        43.37       212  201804                      \n",
       "6692412        18.10        30  201804                      \n",
       "6692413         0.94        10  201804                      \n",
       "6692414         4.60        15  201804                      \n",
       "6692416        26.91        10  201804                      \n",
       "6692417       184.75        40  201804                      \n",
       "7442541        12.46        10  201804                      "
      ]
     },
     "execution_count": 286,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#next part of the question 1e asks for the bottom 10 least frequent drugs prescribed\n",
    "london_bottom10 = london_sorted.tail(10)\n",
    "london_bottom10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 287,
   "metadata": {},
   "outputs": [],
   "source": [
    "#from the output above, we see that the bottom 10 drugs prescribed\n",
    "#in london gp practices in april 2018 are - in descending order:\n",
    "#1 - Silflex 12cm x 15cm Wound Dress Soft Slc\n",
    "#2 - MacuShield_Cap\n",
    "#3 - Resource_ThickenUp Clr Pdr\n",
    "#4 - Resource_ThickenUp Clr Pdr Sach 1.2g\n",
    "#5 - Tegaderm + Pad 9cm x 10cm VP Adh Film Dr\n",
    "#6 - Adpore 10cm x 10cm Adh Dress Pfa\n",
    "#7 - Cosmopor 8cm x 15cm Adh Dress Pfa\n",
    "#8 - DuoDERM Ex Thin 15cm x 15cm Wound Dress\n",
    "#9 - Mepitel One 13cm x 15cm Wound Dress Soft\n",
    "#10 - ConvaTec_Combihesive Natura Drnbl Pouch"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 288,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PUBLICATION</th>\n",
       "      <th>EXTRACT_DATE</th>\n",
       "      <th>TYPE</th>\n",
       "      <th>CCG_CODE</th>\n",
       "      <th>ONS_CCG_CODE</th>\n",
       "      <th>CODE</th>\n",
       "      <th>POSTCODE</th>\n",
       "      <th>SEX</th>\n",
       "      <th>AGE</th>\n",
       "      <th>NUMBER_OF_PATIENTS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3050</th>\n",
       "      <td>GP_PRAC_PAT_LIST</td>\n",
       "      <td>01APR2018</td>\n",
       "      <td>GP</td>\n",
       "      <td>06H</td>\n",
       "      <td>E38000026</td>\n",
       "      <td>D81001</td>\n",
       "      <td>CB2 1EH</td>\n",
       "      <td>ALL</td>\n",
       "      <td>ALL</td>\n",
       "      <td>12057</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3051</th>\n",
       "      <td>GP_PRAC_PAT_LIST</td>\n",
       "      <td>01APR2018</td>\n",
       "      <td>GP</td>\n",
       "      <td>06H</td>\n",
       "      <td>E38000026</td>\n",
       "      <td>D81002</td>\n",
       "      <td>CB3 0DB</td>\n",
       "      <td>ALL</td>\n",
       "      <td>ALL</td>\n",
       "      <td>16939</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3052</th>\n",
       "      <td>GP_PRAC_PAT_LIST</td>\n",
       "      <td>01APR2018</td>\n",
       "      <td>GP</td>\n",
       "      <td>06H</td>\n",
       "      <td>E38000026</td>\n",
       "      <td>D81003</td>\n",
       "      <td>CB1 2PY</td>\n",
       "      <td>ALL</td>\n",
       "      <td>ALL</td>\n",
       "      <td>9927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3054</th>\n",
       "      <td>GP_PRAC_PAT_LIST</td>\n",
       "      <td>01APR2018</td>\n",
       "      <td>GP</td>\n",
       "      <td>06H</td>\n",
       "      <td>E38000026</td>\n",
       "      <td>D81005</td>\n",
       "      <td>CB3 9HS</td>\n",
       "      <td>ALL</td>\n",
       "      <td>ALL</td>\n",
       "      <td>14941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3057</th>\n",
       "      <td>GP_PRAC_PAT_LIST</td>\n",
       "      <td>01APR2018</td>\n",
       "      <td>GP</td>\n",
       "      <td>06H</td>\n",
       "      <td>E38000026</td>\n",
       "      <td>D81009</td>\n",
       "      <td>CB22 5FY</td>\n",
       "      <td>ALL</td>\n",
       "      <td>ALL</td>\n",
       "      <td>9071</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           PUBLICATION EXTRACT_DATE TYPE CCG_CODE ONS_CCG_CODE    CODE  \\\n",
       "3050  GP_PRAC_PAT_LIST    01APR2018   GP      06H    E38000026  D81001   \n",
       "3051  GP_PRAC_PAT_LIST    01APR2018   GP      06H    E38000026  D81002   \n",
       "3052  GP_PRAC_PAT_LIST    01APR2018   GP      06H    E38000026  D81003   \n",
       "3054  GP_PRAC_PAT_LIST    01APR2018   GP      06H    E38000026  D81005   \n",
       "3057  GP_PRAC_PAT_LIST    01APR2018   GP      06H    E38000026  D81009   \n",
       "\n",
       "      POSTCODE  SEX  AGE  NUMBER_OF_PATIENTS  \n",
       "3050   CB2 1EH  ALL  ALL               12057  \n",
       "3051   CB3 0DB  ALL  ALL               16939  \n",
       "3052   CB1 2PY  ALL  ALL                9927  \n",
       "3054   CB3 9HS  ALL  ALL               14941  \n",
       "3057  CB22 5FY  ALL  ALL                9071  "
      ]
     },
     "execution_count": 288,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Question 2 asks for the same analysis, but for Cambridge GP practices\n",
    "#first we obtain a list of Cambridge GP practice codes from the same \n",
    "#original practice list file as Question 1\n",
    "#this time, there is no easy way of demarcating a City of Cambridge\n",
    "#set of CCG codes, so a quick manual check of the gp practice file\n",
    "#allows us to segregate the Cambridge GP practice codes\n",
    "#also important to manually separate out any possible errors, such\n",
    "#as \"Cambridge Road\", \"Cambridgeshire\" text in address fields in the\n",
    "#GP practice list file - hence the manual double checking approach \n",
    "#which was manageable with the relatively small number of practices\n",
    "\n",
    "cambs_gps = [\"D81001\", \"D81002\", \"D81003\", \"D81005\", \"D81009\", \"D81012\", \"D81013\", \"D81016\", \"D81017\", \"D81025\", \"D81028\", \"D81033\", \"D81035\", \"D81037\", \"D81041\", \"D81042\", \"D81043\", \"D81044\", \"D81051\", \"D81054\", \"D81055\", \"D81056\", \"D81058\", \"D81066\", \"D81070\", \"D81078\", \"D81084\", \"D81086\", \"D81602\", \"D81607\", \"Y00056\", \"Y01778\", \"Y02991\", \"Y03550\", \"Y04602\", \"Y05839\"]\n",
    "\n",
    "gp_practices.CODE.isin(cambs_gps)\n",
    "\n",
    "cambs_gplookup= gp_practices[gp_practices.CODE.isin(cambs_gps)]\n",
    "\n",
    "cambs_gplookup.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 289,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([3., 8., 9., 5., 3., 1., 1., 0., 0., 1.]),\n",
       " array([  568. ,  3861.3,  7154.6, 10447.9, 13741.2, 17034.5, 20327.8,\n",
       "        23621.1, 26914.4, 30207.7, 33501. ]),\n",
       " <a list of 10 Patch objects>)"
      ]
     },
     "execution_count": 289,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Exploring a rough histogram of practice lists for cambridge, we\n",
    "#see that there are much fewer practices and lower list sizes\n",
    "x = cambs_gplookup.NUMBER_OF_PATIENTS\n",
    "\n",
    "plt.hist(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 290,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PUBLICATION           object\n",
       "EXTRACT_DATE          object\n",
       "TYPE                  object\n",
       "CCG_CODE              object\n",
       "ONS_CCG_CODE          object\n",
       "CODE                  object\n",
       "POSTCODE              object\n",
       "SEX                   object\n",
       "AGE                   object\n",
       "NUMBER_OF_PATIENTS     int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 290,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#quick look at data types in order to do a sum calculation on the number of patients at each GP practice\n",
    "cambs_gplookup.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 291,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "311579\n"
     ]
    }
   ],
   "source": [
    "#Thus, the answer to question 2a in the assignment is\n",
    "#2a.  The total number of patients registered at GP practices in Cambridge\n",
    "#as at 1 Apr 2018 is 311,579\n",
    "Total_Patients = cambs_gplookup.NUMBER_OF_PATIENTS.sum()\n",
    "print(Total_Patients)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 292,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(40324, 11)"
      ]
     },
     "execution_count": 292,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#next we use the Cambridge GP codes to select the subset of rows from\n",
    "#the prescribing data, which gives us the april Cambs gp precribing data\n",
    "cambs_gps = [\"D81001\", \"D81002\", \"D81003\", \"D81005\", \"D81009\", \"D81012\", \"D81013\", \"D81016\", \"D81017\", \"D81025\", \"D81028\", \"D81033\", \"D81035\", \"D81037\", \"D81041\", \"D81042\", \"D81043\", \"D81044\", \"D81051\", \"D81054\", \"D81055\", \"D81056\", \"D81058\", \"D81066\", \"D81070\", \"D81078\", \"D81084\", \"D81086\", \"D81602\", \"D81607\", \"Y00056\", \"Y01778\", \"Y02991\", \"Y03550\", \"Y04602\", \"Y05839\"]\n",
    "\n",
    "april_presc.PRACTICE.isin(cambs_gps)\n",
    "\n",
    "cambs_gp_precr= april_presc[april_presc.PRACTICE.isin(cambs_gps)]\n",
    "\n",
    "cambs_gp_precr.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 293,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SHA</th>\n",
       "      <th>PCT</th>\n",
       "      <th>PRACTICE</th>\n",
       "      <th>BNF CODE</th>\n",
       "      <th>BNF NAME</th>\n",
       "      <th>prescr</th>\n",
       "      <th>NIC</th>\n",
       "      <th>ACT COST</th>\n",
       "      <th>QUANTITY</th>\n",
       "      <th>PERIOD</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4183977</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81001</td>\n",
       "      <td>0101021B0AAAHAH</td>\n",
       "      <td>Alginate_Raft-Forming Oral Susp S/F</td>\n",
       "      <td>3</td>\n",
       "      <td>12.13</td>\n",
       "      <td>11.29</td>\n",
       "      <td>2300</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4183978</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81001</td>\n",
       "      <td>0101021B0AAALAL</td>\n",
       "      <td>Sod Algin/Pot Bicarb_Susp S/F</td>\n",
       "      <td>3</td>\n",
       "      <td>14.85</td>\n",
       "      <td>13.91</td>\n",
       "      <td>1450</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4183979</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81001</td>\n",
       "      <td>0101021B0BEACAH</td>\n",
       "      <td>Gaviscon_Liq Orig Aniseed Relief</td>\n",
       "      <td>1</td>\n",
       "      <td>11.85</td>\n",
       "      <td>11.10</td>\n",
       "      <td>1000</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4183980</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81001</td>\n",
       "      <td>0101021B0BEADAJ</td>\n",
       "      <td>Gaviscon Infant_Sach 2g (Dual Pack) S/F</td>\n",
       "      <td>2</td>\n",
       "      <td>9.64</td>\n",
       "      <td>8.96</td>\n",
       "      <td>30</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4183981</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81001</td>\n",
       "      <td>0101021B0BEAUA0</td>\n",
       "      <td>Gaviscon P/Mint_Tab Chble</td>\n",
       "      <td>2</td>\n",
       "      <td>29.59</td>\n",
       "      <td>27.57</td>\n",
       "      <td>336</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         SHA  PCT PRACTICE         BNF CODE  \\\n",
       "4183977  Q56  06H   D81001  0101021B0AAAHAH   \n",
       "4183978  Q56  06H   D81001  0101021B0AAALAL   \n",
       "4183979  Q56  06H   D81001  0101021B0BEACAH   \n",
       "4183980  Q56  06H   D81001  0101021B0BEADAJ   \n",
       "4183981  Q56  06H   D81001  0101021B0BEAUA0   \n",
       "\n",
       "        BNF NAME                                      prescr    NIC          \\\n",
       "4183977     Alginate_Raft-Forming Oral Susp S/F              3        12.13   \n",
       "4183978     Sod Algin/Pot Bicarb_Susp S/F                    3        14.85   \n",
       "4183979     Gaviscon_Liq Orig Aniseed Relief                 1        11.85   \n",
       "4183980     Gaviscon Infant_Sach 2g (Dual Pack) S/F          2         9.64   \n",
       "4183981     Gaviscon P/Mint_Tab Chble                        2        29.59   \n",
       "\n",
       "         ACT COST     QUANTITY  PERIOD                      \n",
       "4183977        11.29      2300  201804                      \n",
       "4183978        13.91      1450  201804                      \n",
       "4183979        11.10      1000  201804                      \n",
       "4183980         8.96        30  201804                      \n",
       "4183981        27.57       336  201804                      "
      ]
     },
     "execution_count": 293,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#exploring this data we see cambridge practice codes and presribing data\n",
    "cambs_gp_precr.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 294,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[' SHA',\n",
       " 'PCT',\n",
       " 'PRACTICE',\n",
       " 'BNF CODE',\n",
       " 'BNF NAME                                    ',\n",
       " 'prescr  ',\n",
       " 'NIC        ',\n",
       " 'ACT COST   ',\n",
       " 'QUANTITY',\n",
       " 'PERIOD',\n",
       " '                 ']"
      ]
     },
     "execution_count": 294,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#cleaning up column headers\n",
    "cambs_gp_precr.columns.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 295,
   "metadata": {},
   "outputs": [],
   "source": [
    "cambs_gp_precr.columns = cambs_gp_precr.columns.str.lower()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 296,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[' sha',\n",
       " 'pct',\n",
       " 'practice',\n",
       " 'bnf code',\n",
       " 'bnf name                                    ',\n",
       " 'prescr  ',\n",
       " 'nic        ',\n",
       " 'act cost   ',\n",
       " 'quantity',\n",
       " 'period',\n",
       " '                 ']"
      ]
     },
     "execution_count": 296,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cambs_gp_precr.columns.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 297,
   "metadata": {},
   "outputs": [],
   "source": [
    "#cleaning up the headers to allow sum calculation\n",
    "cambs_gp_precr = cambs_gp_precr.rename(columns={'prescr  ': 'prescr'})\n",
    "cambs_gp_precr = cambs_gp_precr.rename(columns={'act cost   ': 'actual_cost'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 298,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "345532\n"
     ]
    }
   ],
   "source": [
    "#we can then answer part 2b - total number of prescriptions\n",
    "#total number of presriptions in cambridge gp practices in april 2018\n",
    "#is equal to 345,532 prescriptions\n",
    "total_prescriptions = cambs_gp_precr.prescr.sum()\n",
    "print(total_prescriptions)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 299,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2434403.94\n"
     ]
    }
   ],
   "source": [
    "#next, part 2c - total actual cost of these prescriptions\n",
    "#using the ACT COST column = £2,434,403.94\n",
    "total_actual_cost = cambs_gp_precr.actual_cost.sum()\n",
    "print(total_actual_cost)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 300,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sha</th>\n",
       "      <th>pct</th>\n",
       "      <th>practice</th>\n",
       "      <th>bnf code</th>\n",
       "      <th>bnf name</th>\n",
       "      <th>prescr</th>\n",
       "      <th>nic</th>\n",
       "      <th>actual_cost</th>\n",
       "      <th>quantity</th>\n",
       "      <th>period</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4246482</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81043</td>\n",
       "      <td>0103050P0AAAAAA</td>\n",
       "      <td>Omeprazole_Cap E/C 20mg</td>\n",
       "      <td>2087</td>\n",
       "      <td>1627.47</td>\n",
       "      <td>1536.47</td>\n",
       "      <td>75949</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4246782</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81043</td>\n",
       "      <td>0206020A0AAAAAA</td>\n",
       "      <td>Amlodipine_Tab 5mg</td>\n",
       "      <td>995</td>\n",
       "      <td>1390.98</td>\n",
       "      <td>1301.32</td>\n",
       "      <td>27239</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4246901</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81043</td>\n",
       "      <td>0212000B0AAABAB</td>\n",
       "      <td>Atorvastatin_Tab 20mg</td>\n",
       "      <td>955</td>\n",
       "      <td>670.96</td>\n",
       "      <td>632.75</td>\n",
       "      <td>25921</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4246885</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81043</td>\n",
       "      <td>0209000A0AAABAB</td>\n",
       "      <td>Aspirin Disper_Tab 75mg</td>\n",
       "      <td>817</td>\n",
       "      <td>258.14</td>\n",
       "      <td>250.44</td>\n",
       "      <td>21917</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4246930</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81043</td>\n",
       "      <td>0212000Y0AAADAD</td>\n",
       "      <td>Simvastatin_Tab 40mg</td>\n",
       "      <td>816</td>\n",
       "      <td>503.55</td>\n",
       "      <td>476.53</td>\n",
       "      <td>21693</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4247799</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81043</td>\n",
       "      <td>0602010V0AABZBZ</td>\n",
       "      <td>Levothyrox Sod_Tab 100mcg</td>\n",
       "      <td>740</td>\n",
       "      <td>726.37</td>\n",
       "      <td>683.25</td>\n",
       "      <td>21186</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4247297</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81043</td>\n",
       "      <td>0407010H0AAAMAM</td>\n",
       "      <td>Paracet_Tab 500mg</td>\n",
       "      <td>691</td>\n",
       "      <td>947.27</td>\n",
       "      <td>892.38</td>\n",
       "      <td>92043</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4185511</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81002</td>\n",
       "      <td>0212000B0AAABAB</td>\n",
       "      <td>Atorvastatin_Tab 20mg</td>\n",
       "      <td>685</td>\n",
       "      <td>483.24</td>\n",
       "      <td>460.21</td>\n",
       "      <td>19313</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4247797</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81043</td>\n",
       "      <td>0602010V0AABXBX</td>\n",
       "      <td>Levothyrox Sod_Tab 50mcg</td>\n",
       "      <td>678</td>\n",
       "      <td>645.04</td>\n",
       "      <td>608.60</td>\n",
       "      <td>18617</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4247796</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81043</td>\n",
       "      <td>0602010V0AABWBW</td>\n",
       "      <td>Levothyrox Sod_Tab 25mcg</td>\n",
       "      <td>644</td>\n",
       "      <td>1218.97</td>\n",
       "      <td>1143.22</td>\n",
       "      <td>18247</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         sha  pct practice         bnf code  \\\n",
       "4246482  Q56  06H   D81043  0103050P0AAAAAA   \n",
       "4246782  Q56  06H   D81043  0206020A0AAAAAA   \n",
       "4246901  Q56  06H   D81043  0212000B0AAABAB   \n",
       "4246885  Q56  06H   D81043  0209000A0AAABAB   \n",
       "4246930  Q56  06H   D81043  0212000Y0AAADAD   \n",
       "4247799  Q56  06H   D81043  0602010V0AABZBZ   \n",
       "4247297  Q56  06H   D81043  0407010H0AAAMAM   \n",
       "4185511  Q56  06H   D81002  0212000B0AAABAB   \n",
       "4247797  Q56  06H   D81043  0602010V0AABXBX   \n",
       "4247796  Q56  06H   D81043  0602010V0AABWBW   \n",
       "\n",
       "        bnf name                                      prescr  nic          \\\n",
       "4246482     Omeprazole_Cap E/C 20mg                     2087      1627.47   \n",
       "4246782     Amlodipine_Tab 5mg                           995      1390.98   \n",
       "4246901     Atorvastatin_Tab 20mg                        955       670.96   \n",
       "4246885     Aspirin Disper_Tab 75mg                      817       258.14   \n",
       "4246930     Simvastatin_Tab 40mg                         816       503.55   \n",
       "4247799     Levothyrox Sod_Tab 100mcg                    740       726.37   \n",
       "4247297     Paracet_Tab 500mg                            691       947.27   \n",
       "4185511     Atorvastatin_Tab 20mg                        685       483.24   \n",
       "4247797     Levothyrox Sod_Tab 50mcg                     678       645.04   \n",
       "4247796     Levothyrox Sod_Tab 25mcg                     644      1218.97   \n",
       "\n",
       "         actual_cost  quantity  period                      \n",
       "4246482      1536.47     75949  201804                      \n",
       "4246782      1301.32     27239  201804                      \n",
       "4246901       632.75     25921  201804                      \n",
       "4246885       250.44     21917  201804                      \n",
       "4246930       476.53     21693  201804                      \n",
       "4247799       683.25     21186  201804                      \n",
       "4247297       892.38     92043  201804                      \n",
       "4185511       460.21     19313  201804                      \n",
       "4247797       608.60     18617  201804                      \n",
       "4247796      1143.22     18247  201804                      "
      ]
     },
     "execution_count": 300,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#the next question 2d asks for the top 10 most frequent drugs prescribed\n",
    "\n",
    "cambs_sorted= cambs_gp_precr.sort_values('prescr', axis=0, ascending=False, kind='quicksort', na_position='last')\n",
    "cambs_top10 = cambs_sorted.head(10)\n",
    "cambs_top10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 301,
   "metadata": {},
   "outputs": [],
   "source": [
    "#from the output above, we see that the top 10 drugs prescribed\n",
    "#in cambridge gp practices in april 2018 are - in descending order:\n",
    "#1 - Omeprazole_Cap E/C 20mg\n",
    "#2 - Amlodipine_Tab 5mg\n",
    "#3 - Atorvastatin_Tab 20mg\n",
    "#4 - Aspirin Disper_Tab 75mg\n",
    "#5 - Simvastatin_Tab 40mg\n",
    "#6 - Levothyrox Sod_Tab 100mcg\n",
    "#7 - Paracet_Tab 500mg\n",
    "#8 - Atorvastatin_Tab 20mg\n",
    "#9 - Levothyrox Sod_Tab 50mcg\n",
    "#10 - Levothyrox Sod_Tab 25mcg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 302,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sha</th>\n",
       "      <th>pct</th>\n",
       "      <th>practice</th>\n",
       "      <th>bnf code</th>\n",
       "      <th>bnf name</th>\n",
       "      <th>prescr</th>\n",
       "      <th>nic</th>\n",
       "      <th>actual_cost</th>\n",
       "      <th>quantity</th>\n",
       "      <th>period</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4220605</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81025</td>\n",
       "      <td>0304030C0BIACBG</td>\n",
       "      <td>Emerade_Auto Inj 1/1000 1mg/ml 0.5ml</td>\n",
       "      <td>1</td>\n",
       "      <td>26.99</td>\n",
       "      <td>25.04</td>\n",
       "      <td>1</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4263256</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81054</td>\n",
       "      <td>0604012P0AAAAAA</td>\n",
       "      <td>Norethist_Tab 5mg</td>\n",
       "      <td>1</td>\n",
       "      <td>4.12</td>\n",
       "      <td>3.83</td>\n",
       "      <td>60</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4220604</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81025</td>\n",
       "      <td>0304030C0BEABA3</td>\n",
       "      <td>Epipen_Auto-Inj 1/1000 1mg/ml 0.3ml</td>\n",
       "      <td>1</td>\n",
       "      <td>26.45</td>\n",
       "      <td>24.54</td>\n",
       "      <td>1</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4220603</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81025</td>\n",
       "      <td>0304010Y0AAABAB</td>\n",
       "      <td>Alimemazine Tart_Oral Soln 7.5mg/5ml</td>\n",
       "      <td>1</td>\n",
       "      <td>179.55</td>\n",
       "      <td>166.53</td>\n",
       "      <td>100</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4220599</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81025</td>\n",
       "      <td>0304010J0AAABAB</td>\n",
       "      <td>Hydroxyzine HCl_Tab 10mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.23</td>\n",
       "      <td>0.33</td>\n",
       "      <td>14</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4220595</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81025</td>\n",
       "      <td>0304010G0AAABAB</td>\n",
       "      <td>Chlorphenamine Mal_Oral Soln 2mg/5ml</td>\n",
       "      <td>1</td>\n",
       "      <td>2.78</td>\n",
       "      <td>2.59</td>\n",
       "      <td>150</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4263261</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81054</td>\n",
       "      <td>0604020C0BBAAAA</td>\n",
       "      <td>Proscar_Tab 5mg</td>\n",
       "      <td>1</td>\n",
       "      <td>13.94</td>\n",
       "      <td>12.94</td>\n",
       "      <td>28</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4263262</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81054</td>\n",
       "      <td>0604020K0AABHBH</td>\n",
       "      <td>Testosterone_Gel 50mg/5g Ud Sach</td>\n",
       "      <td>1</td>\n",
       "      <td>62.22</td>\n",
       "      <td>57.71</td>\n",
       "      <td>60</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4263263</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>D81054</td>\n",
       "      <td>0604020K0AABKBK</td>\n",
       "      <td>Testosterone_Gel 50mg/5g Ud Tube</td>\n",
       "      <td>1</td>\n",
       "      <td>32.00</td>\n",
       "      <td>29.69</td>\n",
       "      <td>30</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4327784</th>\n",
       "      <td>Q56</td>\n",
       "      <td>06H</td>\n",
       "      <td>Y05839</td>\n",
       "      <td>21210000012</td>\n",
       "      <td>Salivix Pastil (App)</td>\n",
       "      <td>1</td>\n",
       "      <td>3.55</td>\n",
       "      <td>3.30</td>\n",
       "      <td>50</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         sha  pct practice         bnf code  \\\n",
       "4220605  Q56  06H   D81025  0304030C0BIACBG   \n",
       "4263256  Q56  06H   D81054  0604012P0AAAAAA   \n",
       "4220604  Q56  06H   D81025  0304030C0BEABA3   \n",
       "4220603  Q56  06H   D81025  0304010Y0AAABAB   \n",
       "4220599  Q56  06H   D81025  0304010J0AAABAB   \n",
       "4220595  Q56  06H   D81025  0304010G0AAABAB   \n",
       "4263261  Q56  06H   D81054  0604020C0BBAAAA   \n",
       "4263262  Q56  06H   D81054  0604020K0AABHBH   \n",
       "4263263  Q56  06H   D81054  0604020K0AABKBK   \n",
       "4327784  Q56  06H   Y05839  21210000012       \n",
       "\n",
       "        bnf name                                      prescr  nic          \\\n",
       "4220605     Emerade_Auto Inj 1/1000 1mg/ml 0.5ml           1        26.99   \n",
       "4263256     Norethist_Tab 5mg                              1         4.12   \n",
       "4220604     Epipen_Auto-Inj 1/1000 1mg/ml 0.3ml            1        26.45   \n",
       "4220603     Alimemazine Tart_Oral Soln 7.5mg/5ml           1       179.55   \n",
       "4220599     Hydroxyzine HCl_Tab 10mg                       1         0.23   \n",
       "4220595     Chlorphenamine Mal_Oral Soln 2mg/5ml           1         2.78   \n",
       "4263261     Proscar_Tab 5mg                                1        13.94   \n",
       "4263262     Testosterone_Gel 50mg/5g Ud Sach               1        62.22   \n",
       "4263263     Testosterone_Gel 50mg/5g Ud Tube               1        32.00   \n",
       "4327784     Salivix Pastil (App)                           1         3.55   \n",
       "\n",
       "         actual_cost  quantity  period                      \n",
       "4220605        25.04         1  201804                      \n",
       "4263256         3.83        60  201804                      \n",
       "4220604        24.54         1  201804                      \n",
       "4220603       166.53       100  201804                      \n",
       "4220599         0.33        14  201804                      \n",
       "4220595         2.59       150  201804                      \n",
       "4263261        12.94        28  201804                      \n",
       "4263262        57.71        60  201804                      \n",
       "4263263        29.69        30  201804                      \n",
       "4327784         3.30        50  201804                      "
      ]
     },
     "execution_count": 302,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#next part of the question 1e asks for the bottom 10 least frequent drugs prescribed\n",
    "cambs_bottom10 = cambs_sorted.tail(10)\n",
    "cambs_bottom10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 303,
   "metadata": {},
   "outputs": [],
   "source": [
    "#from the output above, we see that the bottom 10 drugs prescribed\n",
    "#in cambs gp practices in april 2018 are - in descending order:\n",
    "#1 - Emerade_Auto Inj 1/1000 1mg/ml 0.5ml\n",
    "#2 - Norethist_Tab 5mg\n",
    "#3 - Epipen_Auto-Inj 1/1000 1mg/ml 0.3ml\n",
    "#4 - Alimemazine Tart_Oral Soln 7.5mg/5ml\n",
    "#5 - Hydroxyzine HCl_Tab 10mg\n",
    "#6 - Chlorphenamine Mal_Oral Soln 2mg/5ml\n",
    "#7 - Proscar_Tab 5mg\n",
    "#8 - Testosterone_Gel 50mg/5g Ud Sach\n",
    "#9 - Testosterone_Gel 50mg/5g Ud Tube\n",
    "#10 - Salivix Pastil (App)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 304,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Next, we are asked to use descriptive statistics to discuss and compare\n",
    "#the london and cambridge findings for april 2018\n",
    "#total patients registered (london=8,566,907) (cambridge=311,579)\n",
    "#total no prescriptions (london=9,052,454) (cambridge=345,532)\n",
    "#total actual costs of these prescriptions (london=£66,498,516.33) (cambridge=£2,434,403.94)\n",
    "#top 10 and bottom 10 frequent drugs used (see above)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 305,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7495.106736657918\n",
      "6689.0\n",
      "4728.69728425336\n",
      "22360578.0061051\n"
     ]
    }
   ],
   "source": [
    "#calculate the mean, median, standard deviation, variance of practice lists\n",
    "#london\n",
    "A = np.array(london_gplookup.NUMBER_OF_PATIENTS)\n",
    "print(np.mean(A))\n",
    "print(np.median(A))\n",
    "print(np.std(A))\n",
    "print(np.var(A))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 306,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10050.935483870968\n",
      "9063.0\n",
      "6173.940196035654\n",
      "38117537.54422477\n"
     ]
    }
   ],
   "source": [
    "#calculate the mean, median, standard deviation, variance of practice lists\n",
    "#cambridge\n",
    "B = np.array(cambs_gplookup.NUMBER_OF_PATIENTS)\n",
    "print(np.mean(B))\n",
    "print(np.median(B))\n",
    "print(np.std(B))\n",
    "print(np.var(B))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 307,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7.434315710979602\n",
      "2.0\n",
      "22.007378969680538\n",
      "484.3247291151372\n"
     ]
    }
   ],
   "source": [
    "#calculate the mean, median, standard deviation, variance of prescriptions\n",
    "#london\n",
    "C = np.array(london_gp_precr.prescr)\n",
    "print(np.mean(C))\n",
    "print(np.median(C))\n",
    "print(np.std(C))\n",
    "print(np.var(C))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 308,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8.56889197500248\n",
      "2.0\n",
      "29.252103978962744\n",
      "855.685587196048\n"
     ]
    }
   ],
   "source": [
    "#calculate the mean, median, standard deviation, variance of prescriptions\n",
    "#cambridge\n",
    "D = np.array(cambs_gp_precr.prescr)\n",
    "print(np.mean(D))\n",
    "print(np.median(D))\n",
    "print(np.std(D))\n",
    "print(np.var(D))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 309,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "54.61181738222063\n",
      "18.0\n",
      "136.42913638401734\n",
      "18612.909254488804\n"
     ]
    }
   ],
   "source": [
    "#calculate the mean, median, standard deviation, variance of actual cost\n",
    "#london\n",
    "E = np.array(london_gp_precr.actual_cost)\n",
    "print(np.mean(E))\n",
    "print(np.median(E))\n",
    "print(np.std(E))\n",
    "print(np.var(E))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 310,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "60.37109264953874\n",
      "19.92\n",
      "156.95650882944813\n",
      "24635.345663928623\n"
     ]
    }
   ],
   "source": [
    "#calculate the mean, median, standard deviation, variance of actual cost\n",
    "#cambridge\n",
    "F = np.array(cambs_gp_precr.actual_cost)\n",
    "print(np.mean(F))\n",
    "print(np.median(F))\n",
    "print(np.std(F))\n",
    "print(np.var(F))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 311,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "156.95"
      ]
     },
     "execution_count": 311,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Patients registered\n",
    "#City       n(total lists)       mean       stdev     \n",
    "#London     8,566,907            7,495      4,728.7\n",
    "#Cambridge  311,579              10,051     6,173.9\n",
    "\n",
    "#Number prescriptions\n",
    "#City       n(total prescr)      mean       stdev     \n",
    "#London     9,052,454            7.43       22.0\n",
    "#Cambridge  345,532              8.57       29.3\n",
    "\n",
    "#Actual costs\n",
    "#City       n(total prescr)      mean       stdev     \n",
    "#London     £66,498,516.33       £54.61     £136.40\n",
    "#Cambridge  £2,434,403.94        £60.37     £156.95\n",
    "\n",
    "60.37109264953874\n",
    "19.92\n",
    "156.95\n",
    "#total patients registered (london=8,566,907) (cambridge=311,579)\n",
    "#total no prescriptions (london=9,052,454) (cambridge=345,532)\n",
    "#total actual costs of these prescriptions (london=£66,498,516.33) (cambridge=£2,434,403.94)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 312,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.615584716376952\n",
      "11.060518876315497\n"
     ]
    }
   ],
   "source": [
    "#two sample t-test - patients registered\n",
    "import math\n",
    "n1 = 8566907\n",
    "n2 = 311579\n",
    "\n",
    "mean1 = 7495\n",
    "mean2 = 10051\n",
    "\n",
    "std1 = 4728.7\n",
    "std2 = 6173.9\n",
    "\n",
    "se1, se2 = std1/math.sqrt(n1), std2/math.sqrt(n2)\n",
    "print(se1)\n",
    "print(se2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 313,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "11.177888521054511\n"
     ]
    }
   ],
   "source": [
    "sed = math.sqrt(se1**2.0 + se2**2.0)\n",
    "print(sed)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 314,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-228.66572655341434\n"
     ]
    }
   ],
   "source": [
    "t_stat = (mean1 - mean2) / sed\n",
    "print(t_stat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 315,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1172\n"
     ]
    }
   ],
   "source": [
    "df = len(london_gplookup.NUMBER_OF_PATIENTS) + len(cambs_gplookup.NUMBER_OF_PATIENTS) - 2\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 316,
   "metadata": {},
   "outputs": [],
   "source": [
    "from numpy.random import seed\n",
    "from numpy.random import randn\n",
    "from scipy.stats import sem\n",
    "from scipy.stats import t\n",
    "\n",
    "alpha = 0.05\n",
    "cv = t.ppf(1.0 - alpha, df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 317,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0\n"
     ]
    }
   ],
   "source": [
    "p = (1 - t.cdf(abs(t_stat), df)) * 2\n",
    "print(p)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 318,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-228.66572655341434\n",
      "1172\n",
      "1.6461548058258575\n",
      "0.0\n"
     ]
    }
   ],
   "source": [
    "\n",
    "print(t_stat)\n",
    "print(df)\n",
    "print(cv)\n",
    "print(p)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 319,
   "metadata": {},
   "outputs": [],
   "source": [
    "#now for something different - next question"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 320,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SHA</th>\n",
       "      <th>PCT</th>\n",
       "      <th>PRACTICE</th>\n",
       "      <th>BNF CODE</th>\n",
       "      <th>BNF NAME</th>\n",
       "      <th>prescr</th>\n",
       "      <th>NIC</th>\n",
       "      <th>ACT COST</th>\n",
       "      <th>QUANTITY</th>\n",
       "      <th>PERIOD</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y05294</td>\n",
       "      <td>0204000R0AAAHAH</td>\n",
       "      <td>Propranolol HCl_Tab 10mg</td>\n",
       "      <td>4</td>\n",
       "      <td>7.12</td>\n",
       "      <td>6.65</td>\n",
       "      <td>224</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y05294</td>\n",
       "      <td>0204000R0AAAJAJ</td>\n",
       "      <td>Propranolol HCl_Tab 40mg</td>\n",
       "      <td>3</td>\n",
       "      <td>1.35</td>\n",
       "      <td>1.59</td>\n",
       "      <td>42</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>337</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0202020D0AAAEAE</td>\n",
       "      <td>Bumetanide_Tab 1mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.26</td>\n",
       "      <td>0.35</td>\n",
       "      <td>6</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>338</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0202020L0AABBBB</td>\n",
       "      <td>Furosemide_Tab 20mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.13</td>\n",
       "      <td>0.23</td>\n",
       "      <td>10</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>339</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0202020L0AABDBD</td>\n",
       "      <td>Furosemide_Tab 40mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.27</td>\n",
       "      <td>14</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>340</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0204000E0AAABAB</td>\n",
       "      <td>Atenolol_Tab 50mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.19</td>\n",
       "      <td>5</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>341</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0204000E0AAACAC</td>\n",
       "      <td>Atenolol_Tab 100mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.16</td>\n",
       "      <td>3</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>342</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0204000H0AAABAB</td>\n",
       "      <td>Bisoprolol Fumar_Tab 10mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.45</td>\n",
       "      <td>0.43</td>\n",
       "      <td>28</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>343</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0204000R0AAAJAJ</td>\n",
       "      <td>Propranolol HCl_Tab 40mg</td>\n",
       "      <td>2</td>\n",
       "      <td>1.78</td>\n",
       "      <td>1.68</td>\n",
       "      <td>56</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>344</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0205051R0AAAKAK</td>\n",
       "      <td>Ramipril_Tab 1.25mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.39</td>\n",
       "      <td>7</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0205051R0AAAMAM</td>\n",
       "      <td>Ramipril_Tab 5mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.11</td>\n",
       "      <td>0.21</td>\n",
       "      <td>5</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>346</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0206010K0CNAAAE</td>\n",
       "      <td>Monomil XL_Tab 60mg</td>\n",
       "      <td>1</td>\n",
       "      <td>6.98</td>\n",
       "      <td>6.49</td>\n",
       "      <td>56</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>347</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0208010W0AAAKAK</td>\n",
       "      <td>Tinzaparin Sod_Inj 20 000u/ml 0.5ml Pfs</td>\n",
       "      <td>1</td>\n",
       "      <td>17.85</td>\n",
       "      <td>16.67</td>\n",
       "      <td>3</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>348</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0208020V0AAAAAA</td>\n",
       "      <td>Warfarin Sod_Tab 1mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.17</td>\n",
       "      <td>5</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>349</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0208020V0AAABAB</td>\n",
       "      <td>Warfarin Sod_Tab 3mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.18</td>\n",
       "      <td>5</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>350</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0208020Z0AAAAAA</td>\n",
       "      <td>Apixaban_Tab 2.5mg</td>\n",
       "      <td>1</td>\n",
       "      <td>9.50</td>\n",
       "      <td>8.92</td>\n",
       "      <td>10</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>351</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0211000P0AAACAC</td>\n",
       "      <td>Tranexamic Acid_Tab 500mg</td>\n",
       "      <td>1</td>\n",
       "      <td>3.86</td>\n",
       "      <td>3.69</td>\n",
       "      <td>18</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>352</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0212000Y0AAADAD</td>\n",
       "      <td>Simvastatin_Tab 40mg</td>\n",
       "      <td>2</td>\n",
       "      <td>1.35</td>\n",
       "      <td>1.38</td>\n",
       "      <td>58</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>591</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y04109</td>\n",
       "      <td>0202010B0AAACAC</td>\n",
       "      <td>Bendroflumethiazide_Tab 5mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.27</td>\n",
       "      <td>14</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>592</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y04109</td>\n",
       "      <td>0202020D0AAAEAE</td>\n",
       "      <td>Bumetanide_Tab 1mg</td>\n",
       "      <td>3</td>\n",
       "      <td>4.80</td>\n",
       "      <td>4.49</td>\n",
       "      <td>112</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>593</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y04109</td>\n",
       "      <td>0202020L0AABBBB</td>\n",
       "      <td>Furosemide_Tab 20mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.37</td>\n",
       "      <td>0.36</td>\n",
       "      <td>28</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>594</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y04109</td>\n",
       "      <td>0202030S0AAATAT</td>\n",
       "      <td>Spironol_Tab 25mg</td>\n",
       "      <td>5</td>\n",
       "      <td>3.48</td>\n",
       "      <td>3.59</td>\n",
       "      <td>98</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>595</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y04109</td>\n",
       "      <td>0202030X0AAAAAA</td>\n",
       "      <td>Eplerenone_Tab 25mg</td>\n",
       "      <td>1</td>\n",
       "      <td>14.52</td>\n",
       "      <td>13.48</td>\n",
       "      <td>28</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>596</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y04109</td>\n",
       "      <td>0204000ABAAAAAA</td>\n",
       "      <td>Nebivolol_Tab 5mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.89</td>\n",
       "      <td>0.84</td>\n",
       "      <td>28</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>597</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y04109</td>\n",
       "      <td>0204000ABAAABAB</td>\n",
       "      <td>Nebivolol_Tab 2.5mg</td>\n",
       "      <td>3</td>\n",
       "      <td>55.14</td>\n",
       "      <td>51.17</td>\n",
       "      <td>84</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>598</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y04109</td>\n",
       "      <td>0204000H0AAAAAA</td>\n",
       "      <td>Bisoprolol Fumar_Tab 5mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.38</td>\n",
       "      <td>0.36</td>\n",
       "      <td>28</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>599</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y04109</td>\n",
       "      <td>0204000H0AAABAB</td>\n",
       "      <td>Bisoprolol Fumar_Tab 10mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.45</td>\n",
       "      <td>0.43</td>\n",
       "      <td>28</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>600</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y04109</td>\n",
       "      <td>0204000H0AAAJAJ</td>\n",
       "      <td>Bisoprolol Fumar_Tab 2.5mg</td>\n",
       "      <td>3</td>\n",
       "      <td>1.72</td>\n",
       "      <td>1.62</td>\n",
       "      <td>112</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>601</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y04109</td>\n",
       "      <td>0204000H0AAAMAM</td>\n",
       "      <td>Bisoprolol Fumar_Tab 1.25mg</td>\n",
       "      <td>2</td>\n",
       "      <td>0.96</td>\n",
       "      <td>0.92</td>\n",
       "      <td>56</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>602</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y04109</td>\n",
       "      <td>0205052AEAAAAAA</td>\n",
       "      <td>Sacubitril/Valsartan_Tab 49mg/51mg</td>\n",
       "      <td>4</td>\n",
       "      <td>366.24</td>\n",
       "      <td>339.70</td>\n",
       "      <td>224</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9747352</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>J82630</td>\n",
       "      <td>0212000Y0AAADAD</td>\n",
       "      <td>Simvastatin_Tab 40mg</td>\n",
       "      <td>52</td>\n",
       "      <td>33.24</td>\n",
       "      <td>34.37</td>\n",
       "      <td>1435</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9747353</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>J82630</td>\n",
       "      <td>0212000Y0BDABAB</td>\n",
       "      <td>Simvador_Tab 20mg</td>\n",
       "      <td>1</td>\n",
       "      <td>1.22</td>\n",
       "      <td>1.14</td>\n",
       "      <td>56</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748057</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0201010F0AAAFAF</td>\n",
       "      <td>Digoxin_Tab 250mcg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.27</td>\n",
       "      <td>3</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748058</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0202020L0AABDBD</td>\n",
       "      <td>Furosemide_Tab 40mg</td>\n",
       "      <td>3</td>\n",
       "      <td>0.49</td>\n",
       "      <td>0.69</td>\n",
       "      <td>42</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748059</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0202030S0AAATAT</td>\n",
       "      <td>Spironol_Tab 25mg</td>\n",
       "      <td>2</td>\n",
       "      <td>1.98</td>\n",
       "      <td>1.86</td>\n",
       "      <td>56</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748060</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0202040B0AAABAB</td>\n",
       "      <td>Co-Amilofruse_Tab 2.5mg/20mg</td>\n",
       "      <td>1</td>\n",
       "      <td>1.30</td>\n",
       "      <td>1.32</td>\n",
       "      <td>7</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748061</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0204000H0AAAMAM</td>\n",
       "      <td>Bisoprolol Fumar_Tab 1.25mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.12</td>\n",
       "      <td>0.22</td>\n",
       "      <td>7</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748062</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0204000K0AAABAB</td>\n",
       "      <td>Metoprolol Tart_Tab 50mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.27</td>\n",
       "      <td>7</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748063</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0204000R0AAAHAH</td>\n",
       "      <td>Propranolol HCl_Tab 10mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.17</td>\n",
       "      <td>2</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748064</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0205040D0AAAAAA</td>\n",
       "      <td>Doxazosin Mesil_Tab 1mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.94</td>\n",
       "      <td>0.88</td>\n",
       "      <td>28</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748065</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0205051L0AAACAC</td>\n",
       "      <td>Lisinopril_Tab 10mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.15</td>\n",
       "      <td>0.25</td>\n",
       "      <td>7</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748066</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0205052C0AAABAB</td>\n",
       "      <td>Candesartan Cilexetil_Tab 4mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.29</td>\n",
       "      <td>7</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748067</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0205052N0AAAAAA</td>\n",
       "      <td>Losartan Pot_Tab 25mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.55</td>\n",
       "      <td>0.52</td>\n",
       "      <td>28</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748068</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0205052N0AAAHAH</td>\n",
       "      <td>Losartan Pot_Tab 12.5mg</td>\n",
       "      <td>1</td>\n",
       "      <td>4.50</td>\n",
       "      <td>4.19</td>\n",
       "      <td>28</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748069</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0206020A0AAABAB</td>\n",
       "      <td>Amlodipine_Tab 10mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.27</td>\n",
       "      <td>3</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748070</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0206020T0AAACAC</td>\n",
       "      <td>Verapamil HCl_Tab 40mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.20</td>\n",
       "      <td>0.30</td>\n",
       "      <td>12</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748071</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0208020Y0AAAAAA</td>\n",
       "      <td>Rivaroxaban_Tab 10mg</td>\n",
       "      <td>1</td>\n",
       "      <td>18.00</td>\n",
       "      <td>16.81</td>\n",
       "      <td>10</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748072</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0208020Z0AAABAB</td>\n",
       "      <td>Apixaban_Tab 5mg</td>\n",
       "      <td>2</td>\n",
       "      <td>16.15</td>\n",
       "      <td>15.21</td>\n",
       "      <td>17</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748073</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0209000A0AAAJAJ</td>\n",
       "      <td>Aspirin_Tab 75mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.28</td>\n",
       "      <td>0.37</td>\n",
       "      <td>7</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748074</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0209000C0AAAAAA</td>\n",
       "      <td>Clopidogrel_Tab 75mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.33</td>\n",
       "      <td>0.42</td>\n",
       "      <td>7</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748075</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0212000B0AAABAB</td>\n",
       "      <td>Atorvastatin_Tab 20mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.18</td>\n",
       "      <td>0.28</td>\n",
       "      <td>7</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748076</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0212000B0AAADAD</td>\n",
       "      <td>Atorvastatin_Tab 80mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.52</td>\n",
       "      <td>0.59</td>\n",
       "      <td>7</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748077</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y00617</td>\n",
       "      <td>0212000Y0AAADAD</td>\n",
       "      <td>Simvastatin_Tab 40mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.18</td>\n",
       "      <td>3</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748342</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y03585</td>\n",
       "      <td>0201010F0AAAEAE</td>\n",
       "      <td>Digoxin_Tab 125mcg</td>\n",
       "      <td>1</td>\n",
       "      <td>3.00</td>\n",
       "      <td>2.79</td>\n",
       "      <td>56</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748343</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y03585</td>\n",
       "      <td>0202020L0AABBBB</td>\n",
       "      <td>Furosemide_Tab 20mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.74</td>\n",
       "      <td>0.70</td>\n",
       "      <td>56</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748344</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y03585</td>\n",
       "      <td>0202020L0AABDBD</td>\n",
       "      <td>Furosemide_Tab 40mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.33</td>\n",
       "      <td>0.32</td>\n",
       "      <td>28</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748345</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y03585</td>\n",
       "      <td>0203020D0AAAAAA</td>\n",
       "      <td>Amiodarone HCl_Tab 100mg</td>\n",
       "      <td>1</td>\n",
       "      <td>1.63</td>\n",
       "      <td>1.52</td>\n",
       "      <td>28</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748346</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y03585</td>\n",
       "      <td>0203020D0AAABAB</td>\n",
       "      <td>Amiodarone HCl_Tab 200mg</td>\n",
       "      <td>2</td>\n",
       "      <td>6.06</td>\n",
       "      <td>5.65</td>\n",
       "      <td>84</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748347</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y03585</td>\n",
       "      <td>0204000H0AAAJAJ</td>\n",
       "      <td>Bisoprolol Fumar_Tab 2.5mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.86</td>\n",
       "      <td>0.81</td>\n",
       "      <td>56</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9748348</th>\n",
       "      <td>Q70</td>\n",
       "      <td>99M</td>\n",
       "      <td>Y03585</td>\n",
       "      <td>0204000H0AAAMAM</td>\n",
       "      <td>Bisoprolol Fumar_Tab 1.25mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.96</td>\n",
       "      <td>0.90</td>\n",
       "      <td>56</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1330453 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         SHA  PCT PRACTICE         BNF CODE  \\\n",
       "28       Q44  RTV   Y05294  0204000R0AAAHAH   \n",
       "29       Q44  RTV   Y05294  0204000R0AAAJAJ   \n",
       "337      Q44  RXA   Y00327  0202020D0AAAEAE   \n",
       "338      Q44  RXA   Y00327  0202020L0AABBBB   \n",
       "339      Q44  RXA   Y00327  0202020L0AABDBD   \n",
       "340      Q44  RXA   Y00327  0204000E0AAABAB   \n",
       "341      Q44  RXA   Y00327  0204000E0AAACAC   \n",
       "342      Q44  RXA   Y00327  0204000H0AAABAB   \n",
       "343      Q44  RXA   Y00327  0204000R0AAAJAJ   \n",
       "344      Q44  RXA   Y00327  0205051R0AAAKAK   \n",
       "345      Q44  RXA   Y00327  0205051R0AAAMAM   \n",
       "346      Q44  RXA   Y00327  0206010K0CNAAAE   \n",
       "347      Q44  RXA   Y00327  0208010W0AAAKAK   \n",
       "348      Q44  RXA   Y00327  0208020V0AAAAAA   \n",
       "349      Q44  RXA   Y00327  0208020V0AAABAB   \n",
       "350      Q44  RXA   Y00327  0208020Z0AAAAAA   \n",
       "351      Q44  RXA   Y00327  0211000P0AAACAC   \n",
       "352      Q44  RXA   Y00327  0212000Y0AAADAD   \n",
       "591      Q44  RXA   Y04109  0202010B0AAACAC   \n",
       "592      Q44  RXA   Y04109  0202020D0AAAEAE   \n",
       "593      Q44  RXA   Y04109  0202020L0AABBBB   \n",
       "594      Q44  RXA   Y04109  0202030S0AAATAT   \n",
       "595      Q44  RXA   Y04109  0202030X0AAAAAA   \n",
       "596      Q44  RXA   Y04109  0204000ABAAAAAA   \n",
       "597      Q44  RXA   Y04109  0204000ABAAABAB   \n",
       "598      Q44  RXA   Y04109  0204000H0AAAAAA   \n",
       "599      Q44  RXA   Y04109  0204000H0AAABAB   \n",
       "600      Q44  RXA   Y04109  0204000H0AAAJAJ   \n",
       "601      Q44  RXA   Y04109  0204000H0AAAMAM   \n",
       "602      Q44  RXA   Y04109  0205052AEAAAAAA   \n",
       "...      ...  ...      ...              ...   \n",
       "9747352  Q70  99M   J82630  0212000Y0AAADAD   \n",
       "9747353  Q70  99M   J82630  0212000Y0BDABAB   \n",
       "9748057  Q70  99M   Y00617  0201010F0AAAFAF   \n",
       "9748058  Q70  99M   Y00617  0202020L0AABDBD   \n",
       "9748059  Q70  99M   Y00617  0202030S0AAATAT   \n",
       "9748060  Q70  99M   Y00617  0202040B0AAABAB   \n",
       "9748061  Q70  99M   Y00617  0204000H0AAAMAM   \n",
       "9748062  Q70  99M   Y00617  0204000K0AAABAB   \n",
       "9748063  Q70  99M   Y00617  0204000R0AAAHAH   \n",
       "9748064  Q70  99M   Y00617  0205040D0AAAAAA   \n",
       "9748065  Q70  99M   Y00617  0205051L0AAACAC   \n",
       "9748066  Q70  99M   Y00617  0205052C0AAABAB   \n",
       "9748067  Q70  99M   Y00617  0205052N0AAAAAA   \n",
       "9748068  Q70  99M   Y00617  0205052N0AAAHAH   \n",
       "9748069  Q70  99M   Y00617  0206020A0AAABAB   \n",
       "9748070  Q70  99M   Y00617  0206020T0AAACAC   \n",
       "9748071  Q70  99M   Y00617  0208020Y0AAAAAA   \n",
       "9748072  Q70  99M   Y00617  0208020Z0AAABAB   \n",
       "9748073  Q70  99M   Y00617  0209000A0AAAJAJ   \n",
       "9748074  Q70  99M   Y00617  0209000C0AAAAAA   \n",
       "9748075  Q70  99M   Y00617  0212000B0AAABAB   \n",
       "9748076  Q70  99M   Y00617  0212000B0AAADAD   \n",
       "9748077  Q70  99M   Y00617  0212000Y0AAADAD   \n",
       "9748342  Q70  99M   Y03585  0201010F0AAAEAE   \n",
       "9748343  Q70  99M   Y03585  0202020L0AABBBB   \n",
       "9748344  Q70  99M   Y03585  0202020L0AABDBD   \n",
       "9748345  Q70  99M   Y03585  0203020D0AAAAAA   \n",
       "9748346  Q70  99M   Y03585  0203020D0AAABAB   \n",
       "9748347  Q70  99M   Y03585  0204000H0AAAJAJ   \n",
       "9748348  Q70  99M   Y03585  0204000H0AAAMAM   \n",
       "\n",
       "        BNF NAME                                      prescr    NIC          \\\n",
       "28          Propranolol HCl_Tab 10mg                         4         7.12   \n",
       "29          Propranolol HCl_Tab 40mg                         3         1.35   \n",
       "337         Bumetanide_Tab 1mg                               1         0.26   \n",
       "338         Furosemide_Tab 20mg                              1         0.13   \n",
       "339         Furosemide_Tab 40mg                              1         0.17   \n",
       "340         Atenolol_Tab 50mg                                1         0.08   \n",
       "341         Atenolol_Tab 100mg                               1         0.05   \n",
       "342         Bisoprolol Fumar_Tab 10mg                        1         0.45   \n",
       "343         Propranolol HCl_Tab 40mg                         2         1.78   \n",
       "344         Ramipril_Tab 1.25mg                              1         0.30   \n",
       "345         Ramipril_Tab 5mg                                 1         0.11   \n",
       "346         Monomil XL_Tab 60mg                              1         6.98   \n",
       "347         Tinzaparin Sod_Inj 20 000u/ml 0.5ml Pfs          1        17.85   \n",
       "348         Warfarin Sod_Tab 1mg                             1         0.06   \n",
       "349         Warfarin Sod_Tab 3mg                             1         0.07   \n",
       "350         Apixaban_Tab 2.5mg                               1         9.50   \n",
       "351         Tranexamic Acid_Tab 500mg                        1         3.86   \n",
       "352         Simvastatin_Tab 40mg                             2         1.35   \n",
       "591         Bendroflumethiazide_Tab 5mg                      1         0.17   \n",
       "592         Bumetanide_Tab 1mg                               3         4.80   \n",
       "593         Furosemide_Tab 20mg                              1         0.37   \n",
       "594         Spironol_Tab 25mg                                5         3.48   \n",
       "595         Eplerenone_Tab 25mg                              1        14.52   \n",
       "596         Nebivolol_Tab 5mg                                1         0.89   \n",
       "597         Nebivolol_Tab 2.5mg                              3        55.14   \n",
       "598         Bisoprolol Fumar_Tab 5mg                         1         0.38   \n",
       "599         Bisoprolol Fumar_Tab 10mg                        1         0.45   \n",
       "600         Bisoprolol Fumar_Tab 2.5mg                       3         1.72   \n",
       "601         Bisoprolol Fumar_Tab 1.25mg                      2         0.96   \n",
       "602         Sacubitril/Valsartan_Tab 49mg/51mg               4       366.24   \n",
       "...                                              ...       ...          ...   \n",
       "9747352     Simvastatin_Tab 40mg                            52        33.24   \n",
       "9747353     Simvador_Tab 20mg                                1         1.22   \n",
       "9748057     Digoxin_Tab 250mcg                               1         0.17   \n",
       "9748058     Furosemide_Tab 40mg                              3         0.49   \n",
       "9748059     Spironol_Tab 25mg                                2         1.98   \n",
       "9748060     Co-Amilofruse_Tab 2.5mg/20mg                     1         1.30   \n",
       "9748061     Bisoprolol Fumar_Tab 1.25mg                      1         0.12   \n",
       "9748062     Metoprolol Tart_Tab 50mg                         1         0.17   \n",
       "9748063     Propranolol HCl_Tab 10mg                         1         0.06   \n",
       "9748064     Doxazosin Mesil_Tab 1mg                          1         0.94   \n",
       "9748065     Lisinopril_Tab 10mg                              1         0.15   \n",
       "9748066     Candesartan Cilexetil_Tab 4mg                    1         0.30   \n",
       "9748067     Losartan Pot_Tab 25mg                            1         0.55   \n",
       "9748068     Losartan Pot_Tab 12.5mg                          1         4.50   \n",
       "9748069     Amlodipine_Tab 10mg                              1         0.17   \n",
       "9748070     Verapamil HCl_Tab 40mg                           1         0.20   \n",
       "9748071     Rivaroxaban_Tab 10mg                             1        18.00   \n",
       "9748072     Apixaban_Tab 5mg                                 2        16.15   \n",
       "9748073     Aspirin_Tab 75mg                                 1         0.28   \n",
       "9748074     Clopidogrel_Tab 75mg                             1         0.33   \n",
       "9748075     Atorvastatin_Tab 20mg                            1         0.18   \n",
       "9748076     Atorvastatin_Tab 80mg                            1         0.52   \n",
       "9748077     Simvastatin_Tab 40mg                             1         0.07   \n",
       "9748342     Digoxin_Tab 125mcg                               1         3.00   \n",
       "9748343     Furosemide_Tab 20mg                              1         0.74   \n",
       "9748344     Furosemide_Tab 40mg                              1         0.33   \n",
       "9748345     Amiodarone HCl_Tab 100mg                         1         1.63   \n",
       "9748346     Amiodarone HCl_Tab 200mg                         2         6.06   \n",
       "9748347     Bisoprolol Fumar_Tab 2.5mg                       1         0.86   \n",
       "9748348     Bisoprolol Fumar_Tab 1.25mg                      1         0.96   \n",
       "\n",
       "         ACT COST     QUANTITY  PERIOD                      \n",
       "28              6.65       224  201804                      \n",
       "29              1.59        42  201804                      \n",
       "337             0.35         6  201804                      \n",
       "338             0.23        10  201804                      \n",
       "339             0.27        14  201804                      \n",
       "340             0.19         5  201804                      \n",
       "341             0.16         3  201804                      \n",
       "342             0.43        28  201804                      \n",
       "343             1.68        56  201804                      \n",
       "344             0.39         7  201804                      \n",
       "345             0.21         5  201804                      \n",
       "346             6.49        56  201804                      \n",
       "347            16.67         3  201804                      \n",
       "348             0.17         5  201804                      \n",
       "349             0.18         5  201804                      \n",
       "350             8.92        10  201804                      \n",
       "351             3.69        18  201804                      \n",
       "352             1.38        58  201804                      \n",
       "591             0.27        14  201804                      \n",
       "592             4.49       112  201804                      \n",
       "593             0.36        28  201804                      \n",
       "594             3.59        98  201804                      \n",
       "595            13.48        28  201804                      \n",
       "596             0.84        28  201804                      \n",
       "597            51.17        84  201804                      \n",
       "598             0.36        28  201804                      \n",
       "599             0.43        28  201804                      \n",
       "600             1.62       112  201804                      \n",
       "601             0.92        56  201804                      \n",
       "602           339.70       224  201804                      \n",
       "...              ...       ...     ...                 ...  \n",
       "9747352        34.37      1435  201804                      \n",
       "9747353         1.14        56  201804                      \n",
       "9748057         0.27         3  201804                      \n",
       "9748058         0.69        42  201804                      \n",
       "9748059         1.86        56  201804                      \n",
       "9748060         1.32         7  201804                      \n",
       "9748061         0.22         7  201804                      \n",
       "9748062         0.27         7  201804                      \n",
       "9748063         0.17         2  201804                      \n",
       "9748064         0.88        28  201804                      \n",
       "9748065         0.25         7  201804                      \n",
       "9748066         0.29         7  201804                      \n",
       "9748067         0.52        28  201804                      \n",
       "9748068         4.19        28  201804                      \n",
       "9748069         0.27         3  201804                      \n",
       "9748070         0.30        12  201804                      \n",
       "9748071        16.81        10  201804                      \n",
       "9748072        15.21        17  201804                      \n",
       "9748073         0.37         7  201804                      \n",
       "9748074         0.42         7  201804                      \n",
       "9748075         0.28         7  201804                      \n",
       "9748076         0.59         7  201804                      \n",
       "9748077         0.18         3  201804                      \n",
       "9748342         2.79        56  201804                      \n",
       "9748343         0.70        56  201804                      \n",
       "9748344         0.32        28  201804                      \n",
       "9748345         1.52        28  201804                      \n",
       "9748346         5.65        84  201804                      \n",
       "9748347         0.81        56  201804                      \n",
       "9748348         0.90        56  201804                      \n",
       "\n",
       "[1330453 rows x 11 columns]"
      ]
     },
     "execution_count": 320,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#select just cardiovascular drugs - bnf codes starting with '02' from april prescribing data all practices\n",
    "april_presc[april_presc['BNF CODE'].str.startswith('02')]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 321,
   "metadata": {},
   "outputs": [],
   "source": [
    "chapter_2 = april_presc[april_presc['BNF CODE'].str.startswith('02')]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 322,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1330453, 11)"
      ]
     },
     "execution_count": 322,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chapter_2.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 361,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Calculate the total actual cost of cardiovascular prescriptions in april 2018\n",
    "\n",
    "cardiovascular_costs = chapter_2.actual_cost.sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 362,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "90193834.01999994"
      ]
     },
     "execution_count": 362,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cardiovascular_costs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#the total actual costs of cardiovascular drugs in April 2018 across all practices is £90,193,834.02"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 323,
   "metadata": {},
   "outputs": [],
   "source": [
    "chapter_4pt3 = april_presc[april_presc['BNF CODE'].str.startswith('0403')]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 363,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SHA</th>\n",
       "      <th>PCT</th>\n",
       "      <th>PRACTICE</th>\n",
       "      <th>BNF CODE</th>\n",
       "      <th>BNF NAME</th>\n",
       "      <th>prescr</th>\n",
       "      <th>NIC</th>\n",
       "      <th>ACT COST</th>\n",
       "      <th>QUANTITY</th>\n",
       "      <th>PERIOD</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y04937</td>\n",
       "      <td>0403010X0AAAAAA</td>\n",
       "      <td>Trazodone HCl_Cap 50mg</td>\n",
       "      <td>1</td>\n",
       "      <td>1.19</td>\n",
       "      <td>1.22</td>\n",
       "      <td>14</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y04937</td>\n",
       "      <td>0403030D0AAAAAA</td>\n",
       "      <td>Citalopram Hydrob_Tab 20mg</td>\n",
       "      <td>1</td>\n",
       "      <td>1.17</td>\n",
       "      <td>1.20</td>\n",
       "      <td>14</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y04937</td>\n",
       "      <td>0403030D0AAABAB</td>\n",
       "      <td>Citalopram Hydrob_Tab 10mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.76</td>\n",
       "      <td>0.82</td>\n",
       "      <td>14</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y04937</td>\n",
       "      <td>0403030P0AAAGAG</td>\n",
       "      <td>Paroxetine HCl_Oral Soln 10mg/5ml S/F</td>\n",
       "      <td>1</td>\n",
       "      <td>15.99</td>\n",
       "      <td>14.94</td>\n",
       "      <td>263</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y04937</td>\n",
       "      <td>0403030P0AAAKAK</td>\n",
       "      <td>Paroxetine HCl_Tab 10mg</td>\n",
       "      <td>1</td>\n",
       "      <td>16.50</td>\n",
       "      <td>15.41</td>\n",
       "      <td>49</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    SHA  PCT PRACTICE         BNF CODE  \\\n",
       "9   Q44  RTV   Y04937  0403010X0AAAAAA   \n",
       "10  Q44  RTV   Y04937  0403030D0AAAAAA   \n",
       "11  Q44  RTV   Y04937  0403030D0AAABAB   \n",
       "12  Q44  RTV   Y04937  0403030P0AAAGAG   \n",
       "13  Q44  RTV   Y04937  0403030P0AAAKAK   \n",
       "\n",
       "   BNF NAME                                      prescr    NIC          \\\n",
       "9      Trazodone HCl_Cap 50mg                           1         1.19   \n",
       "10     Citalopram Hydrob_Tab 20mg                       1         1.17   \n",
       "11     Citalopram Hydrob_Tab 10mg                       1         0.76   \n",
       "12     Paroxetine HCl_Oral Soln 10mg/5ml S/F            1        15.99   \n",
       "13     Paroxetine HCl_Tab 10mg                          1        16.50   \n",
       "\n",
       "    ACT COST     QUANTITY  PERIOD                      \n",
       "9          1.22        14  201804                      \n",
       "10         1.20        14  201804                      \n",
       "11         0.82        14  201804                      \n",
       "12        14.94       263  201804                      \n",
       "13        15.41        49  201804                      "
      ]
     },
     "execution_count": 363,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chapter_4pt3.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 366,
   "metadata": {},
   "outputs": [],
   "source": [
    "antidepressants_costs = chapter_4pt3['ACT COST   '].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 367,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "16853470.86"
      ]
     },
     "execution_count": 367,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "antidepressants_costs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#the total actual costs of antidepressants in April 2018 across all practices is £16,853,470.86"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 325,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "BNF CODE\n",
       "0201010F0AAAAAA      7216.87\n",
       "0201010F0AAADAD    102511.62\n",
       "0201010F0AAAEAE    185641.31\n",
       "0201010F0AAAFAF     40590.33\n",
       "0201010F0BBAAAE       209.46\n",
       "0201010F0BBABAF        88.57\n",
       "0201010F0BBADAD       104.44\n",
       "0201010F0BBAEAA       258.37\n",
       "0202010B0AAABAB    288587.92\n",
       "0202010B0AAACAC      8017.94\n",
       "0202010B0AAAQAQ       191.71\n",
       "0202010B0AAAXAX      1682.19\n",
       "0202010B0BBAAAB         8.96\n",
       "0202010B0BEABAB         0.32\n",
       "0202010D0AAAFAF       528.63\n",
       "0202010D0AAAUAU      8843.07\n",
       "0202010D0AABCBC      2684.66\n",
       "0202010D0AABIBI       751.23\n",
       "0202010D0AABJBJ       286.21\n",
       "0202010D0AACYCY      2332.68\n",
       "0202010D0AADDDD      1769.00\n",
       "0202010D0AADEDE      6550.34\n",
       "0202010D0AADFDF       584.28\n",
       "0202010D0BCAAAU      1462.49\n",
       "0202010F0AAAAAA     80870.81\n",
       "0202010L0AAABAB      8034.58\n",
       "0202010L0AAACAC       112.98\n",
       "0202010L0AAATAT       417.82\n",
       "0202010L0AAAYAY       525.17\n",
       "0202010P0AAAAAA    222033.58\n",
       "                     ...    \n",
       "0212000P0AAAEAE     71694.55\n",
       "0212000P0AAAFAF        14.60\n",
       "0212000P0BBABAB      6009.86\n",
       "0212000P0BBACAC      1071.30\n",
       "0212000P0BBADAD      6541.88\n",
       "0212000P0BCAAAE      9870.93\n",
       "0212000Q0AAAAAA      4781.45\n",
       "0212000Q0AAABAB     18601.88\n",
       "0212000Q0BBAAAA       380.64\n",
       "0212000Q0BBABAB      1262.87\n",
       "0212000U0AAAVAV      1280.18\n",
       "0212000V0AAABAB        10.91\n",
       "0212000X0AAAAAA     31859.54\n",
       "0212000X0AAABAB     71214.99\n",
       "0212000X0AAADAD    110615.52\n",
       "0212000Y0AAAAAA     48730.88\n",
       "0212000Y0AAABAB    396569.62\n",
       "0212000Y0AAADAD    808711.85\n",
       "0212000Y0AAAHAH     25879.01\n",
       "0212000Y0AAAKAK     40801.39\n",
       "0212000Y0AAALAL     83522.62\n",
       "0212000Y0BBAAAA      3145.42\n",
       "0212000Y0BBABAB      9357.55\n",
       "0212000Y0BBACAD      7956.16\n",
       "0212000Y0BBADAH       716.15\n",
       "0212000Y0BDAAAA       790.60\n",
       "0212000Y0BDABAB      5885.88\n",
       "0212000Y0BDACAD     11925.52\n",
       "0212000Y0BDADAH        76.94\n",
       "0213000T0BEADAD        20.98\n",
       "Name: ACT COST   , Length: 1230, dtype: float64"
      ]
     },
     "execution_count": 325,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chapter_2.groupby('BNF CODE')['ACT COST   '].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 326,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[' SHA',\n",
       " 'PCT',\n",
       " 'PRACTICE',\n",
       " 'BNF CODE',\n",
       " 'BNF NAME                                    ',\n",
       " 'prescr  ',\n",
       " 'NIC        ',\n",
       " 'ACT COST   ',\n",
       " 'QUANTITY',\n",
       " 'PERIOD',\n",
       " '                 ']"
      ]
     },
     "execution_count": 326,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chapter_2.columns.tolist()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 327,
   "metadata": {},
   "outputs": [],
   "source": [
    "chapter_2 = chapter_2.rename(columns={'prescr  ': 'prescr'})\n",
    "chapter_2 = chapter_2.rename(columns={'ACT COST   ': 'actual_cost'})\n",
    "chapter_2 = chapter_2.rename(columns={'BNF NAME                                    ': 'bnf_name'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 328,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SHA</th>\n",
       "      <th>PCT</th>\n",
       "      <th>PRACTICE</th>\n",
       "      <th>BNF CODE</th>\n",
       "      <th>bnf_name</th>\n",
       "      <th>prescr</th>\n",
       "      <th>NIC</th>\n",
       "      <th>actual_cost</th>\n",
       "      <th>QUANTITY</th>\n",
       "      <th>PERIOD</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y05294</td>\n",
       "      <td>0204000R0AAAHAH</td>\n",
       "      <td>Propranolol HCl_Tab 10mg</td>\n",
       "      <td>4</td>\n",
       "      <td>7.12</td>\n",
       "      <td>6.65</td>\n",
       "      <td>224</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y05294</td>\n",
       "      <td>0204000R0AAAJAJ</td>\n",
       "      <td>Propranolol HCl_Tab 40mg</td>\n",
       "      <td>3</td>\n",
       "      <td>1.35</td>\n",
       "      <td>1.59</td>\n",
       "      <td>42</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>337</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0202020D0AAAEAE</td>\n",
       "      <td>Bumetanide_Tab 1mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.26</td>\n",
       "      <td>0.35</td>\n",
       "      <td>6</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>338</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0202020L0AABBBB</td>\n",
       "      <td>Furosemide_Tab 20mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.13</td>\n",
       "      <td>0.23</td>\n",
       "      <td>10</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>339</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0202020L0AABDBD</td>\n",
       "      <td>Furosemide_Tab 40mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.27</td>\n",
       "      <td>14</td>\n",
       "      <td>201804</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     SHA  PCT PRACTICE         BNF CODE  \\\n",
       "28   Q44  RTV   Y05294  0204000R0AAAHAH   \n",
       "29   Q44  RTV   Y05294  0204000R0AAAJAJ   \n",
       "337  Q44  RXA   Y00327  0202020D0AAAEAE   \n",
       "338  Q44  RXA   Y00327  0202020L0AABBBB   \n",
       "339  Q44  RXA   Y00327  0202020L0AABDBD   \n",
       "\n",
       "                                     bnf_name  prescr  NIC          \\\n",
       "28   Propranolol HCl_Tab 10mg                       4         7.12   \n",
       "29   Propranolol HCl_Tab 40mg                       3         1.35   \n",
       "337  Bumetanide_Tab 1mg                             1         0.26   \n",
       "338  Furosemide_Tab 20mg                            1         0.13   \n",
       "339  Furosemide_Tab 40mg                            1         0.17   \n",
       "\n",
       "     actual_cost  QUANTITY  PERIOD                      \n",
       "28          6.65       224  201804                      \n",
       "29          1.59        42  201804                      \n",
       "337         0.35         6  201804                      \n",
       "338         0.23        10  201804                      \n",
       "339         0.27        14  201804                      "
      ]
     },
     "execution_count": 328,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chapter_2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 329,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.frame.DataFrame"
      ]
     },
     "execution_count": 329,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(chapter_2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 330,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "drug_costs = chapter_2.groupby(['BNF CODE','bnf_name']).sum()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 331,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>prescr</th>\n",
       "      <th>NIC</th>\n",
       "      <th>actual_cost</th>\n",
       "      <th>QUANTITY</th>\n",
       "      <th>PERIOD</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BNF CODE</th>\n",
       "      <th>bnf_name</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0201010F0AAAAAA</th>\n",
       "      <th>Digoxin_Oral Soln Paed 50mcg/ml</th>\n",
       "      <td>1235</td>\n",
       "      <td>7768.20</td>\n",
       "      <td>7216.87</td>\n",
       "      <td>87120</td>\n",
       "      <td>183036228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0201010F0AAADAD</th>\n",
       "      <th>Digoxin_Tab 62.5mcg</th>\n",
       "      <td>79367</td>\n",
       "      <td>106602.17</td>\n",
       "      <td>102511.62</td>\n",
       "      <td>1904145</td>\n",
       "      <td>1355315664</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0201010F0AAAEAE</th>\n",
       "      <th>Digoxin_Tab 125mcg</th>\n",
       "      <td>141057</td>\n",
       "      <td>193988.10</td>\n",
       "      <td>185641.31</td>\n",
       "      <td>3608018</td>\n",
       "      <td>1416058668</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0201010F0AAAFAF</th>\n",
       "      <th>Digoxin_Tab 250mcg</th>\n",
       "      <td>25483</td>\n",
       "      <td>42923.53</td>\n",
       "      <td>40590.33</td>\n",
       "      <td>773394</td>\n",
       "      <td>1133331264</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0201010F0BBAAAE</th>\n",
       "      <th>Lanoxin-125_Tab 125mcg</th>\n",
       "      <td>403</td>\n",
       "      <td>179.41</td>\n",
       "      <td>209.46</td>\n",
       "      <td>11139</td>\n",
       "      <td>10493808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0201010F0BBABAF</th>\n",
       "      <th>Lanoxin_Tab 250mcg</th>\n",
       "      <td>152</td>\n",
       "      <td>77.70</td>\n",
       "      <td>88.57</td>\n",
       "      <td>4819</td>\n",
       "      <td>9081180</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0201010F0BBADAD</th>\n",
       "      <th>Lanoxin-PG_Tab 62.5mcg</th>\n",
       "      <td>190</td>\n",
       "      <td>90.01</td>\n",
       "      <td>104.44</td>\n",
       "      <td>5586</td>\n",
       "      <td>10292004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0201010F0BBAEAA</th>\n",
       "      <th>Lanoxin-PG_Paed Elix 50mcg/ml</th>\n",
       "      <td>36</td>\n",
       "      <td>278.20</td>\n",
       "      <td>258.37</td>\n",
       "      <td>3120</td>\n",
       "      <td>5650512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0202010B0AAABAB</th>\n",
       "      <th>Bendroflumethiazide_Tab 2.5mg</th>\n",
       "      <td>813364</td>\n",
       "      <td>292085.70</td>\n",
       "      <td>288587.92</td>\n",
       "      <td>29181592</td>\n",
       "      <td>1475590848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0202010B0AAACAC</th>\n",
       "      <th>Bendroflumethiazide_Tab 5mg</th>\n",
       "      <td>19306</td>\n",
       "      <td>8128.19</td>\n",
       "      <td>8017.94</td>\n",
       "      <td>667311</td>\n",
       "      <td>985207128</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                          prescr  NIC          \\\n",
       "BNF CODE        bnf_name                                                        \n",
       "0201010F0AAAAAA Digoxin_Oral Soln Paed 50mcg/ml             1235      7768.20   \n",
       "0201010F0AAADAD Digoxin_Tab 62.5mcg                        79367    106602.17   \n",
       "0201010F0AAAEAE Digoxin_Tab 125mcg                        141057    193988.10   \n",
       "0201010F0AAAFAF Digoxin_Tab 250mcg                         25483     42923.53   \n",
       "0201010F0BBAAAE Lanoxin-125_Tab 125mcg                       403       179.41   \n",
       "0201010F0BBABAF Lanoxin_Tab 250mcg                           152        77.70   \n",
       "0201010F0BBADAD Lanoxin-PG_Tab 62.5mcg                       190        90.01   \n",
       "0201010F0BBAEAA Lanoxin-PG_Paed Elix 50mcg/ml                 36       278.20   \n",
       "0202010B0AAABAB Bendroflumethiazide_Tab 2.5mg             813364    292085.70   \n",
       "0202010B0AAACAC Bendroflumethiazide_Tab 5mg                19306      8128.19   \n",
       "\n",
       "                                                          actual_cost  \\\n",
       "BNF CODE        bnf_name                                                \n",
       "0201010F0AAAAAA Digoxin_Oral Soln Paed 50mcg/ml               7216.87   \n",
       "0201010F0AAADAD Digoxin_Tab 62.5mcg                         102511.62   \n",
       "0201010F0AAAEAE Digoxin_Tab 125mcg                          185641.31   \n",
       "0201010F0AAAFAF Digoxin_Tab 250mcg                           40590.33   \n",
       "0201010F0BBAAAE Lanoxin-125_Tab 125mcg                         209.46   \n",
       "0201010F0BBABAF Lanoxin_Tab 250mcg                              88.57   \n",
       "0201010F0BBADAD Lanoxin-PG_Tab 62.5mcg                         104.44   \n",
       "0201010F0BBAEAA Lanoxin-PG_Paed Elix 50mcg/ml                  258.37   \n",
       "0202010B0AAABAB Bendroflumethiazide_Tab 2.5mg               288587.92   \n",
       "0202010B0AAACAC Bendroflumethiazide_Tab 5mg                   8017.94   \n",
       "\n",
       "                                                          QUANTITY      PERIOD  \n",
       "BNF CODE        bnf_name                                                        \n",
       "0201010F0AAAAAA Digoxin_Oral Soln Paed 50mcg/ml              87120   183036228  \n",
       "0201010F0AAADAD Digoxin_Tab 62.5mcg                        1904145  1355315664  \n",
       "0201010F0AAAEAE Digoxin_Tab 125mcg                         3608018  1416058668  \n",
       "0201010F0AAAFAF Digoxin_Tab 250mcg                          773394  1133331264  \n",
       "0201010F0BBAAAE Lanoxin-125_Tab 125mcg                       11139    10493808  \n",
       "0201010F0BBABAF Lanoxin_Tab 250mcg                            4819     9081180  \n",
       "0201010F0BBADAD Lanoxin-PG_Tab 62.5mcg                        5586    10292004  \n",
       "0201010F0BBAEAA Lanoxin-PG_Paed Elix 50mcg/ml                 3120     5650512  \n",
       "0202010B0AAABAB Bendroflumethiazide_Tab 2.5mg             29181592  1475590848  \n",
       "0202010B0AAACAC Bendroflumethiazide_Tab 5mg                 667311   985207128  "
      ]
     },
     "execution_count": 331,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "drug_costs.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 332,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.frame.DataFrame"
      ]
     },
     "execution_count": 332,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(drug_costs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 334,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "prescr           int64\n",
       "NIC            float64\n",
       "actual_cost    float64\n",
       "QUANTITY         int64\n",
       "PERIOD           int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 334,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "drug_costs.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 335,
   "metadata": {},
   "outputs": [],
   "source": [
    "sorted = drug_costs.sort_values(by=['actual_cost'])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 336,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>prescr</th>\n",
       "      <th>NIC</th>\n",
       "      <th>actual_cost</th>\n",
       "      <th>QUANTITY</th>\n",
       "      <th>PERIOD</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BNF CODE</th>\n",
       "      <th>bnf_name</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0208020Y0AAABAB</th>\n",
       "      <th>Rivaroxaban_Tab 15mg</th>\n",
       "      <td>75747</td>\n",
       "      <td>3084802.20</td>\n",
       "      <td>2864747.23</td>\n",
       "      <td>1713779</td>\n",
       "      <td>1289325756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0212000L0AAAAAA</th>\n",
       "      <th>Ezetimibe_Tab 10mg</th>\n",
       "      <td>142031</td>\n",
       "      <td>4315627.30</td>\n",
       "      <td>4006482.11</td>\n",
       "      <td>4592773</td>\n",
       "      <td>1420901964</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0208020Z0AAAAAA</th>\n",
       "      <th>Apixaban_Tab 2.5mg</th>\n",
       "      <td>127975</td>\n",
       "      <td>5554284.25</td>\n",
       "      <td>5161392.03</td>\n",
       "      <td>5846615</td>\n",
       "      <td>1402941408</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0208020Z0AAABAB</th>\n",
       "      <th>Apixaban_Tab 5mg</th>\n",
       "      <td>219971</td>\n",
       "      <td>11389346.70</td>\n",
       "      <td>10569680.46</td>\n",
       "      <td>11988786</td>\n",
       "      <td>1457630292</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0208020Y0AAACAC</th>\n",
       "      <th>Rivaroxaban_Tab 20mg</th>\n",
       "      <td>228645</td>\n",
       "      <td>11954784.60</td>\n",
       "      <td>11094375.29</td>\n",
       "      <td>6641547</td>\n",
       "      <td>1455814056</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                          prescr  NIC          \\\n",
       "BNF CODE        bnf_name                                                        \n",
       "0208020Y0AAABAB Rivaroxaban_Tab 15mg                       75747   3084802.20   \n",
       "0212000L0AAAAAA Ezetimibe_Tab 10mg                        142031   4315627.30   \n",
       "0208020Z0AAAAAA Apixaban_Tab 2.5mg                        127975   5554284.25   \n",
       "0208020Z0AAABAB Apixaban_Tab 5mg                          219971  11389346.70   \n",
       "0208020Y0AAACAC Rivaroxaban_Tab 20mg                      228645  11954784.60   \n",
       "\n",
       "                                                          actual_cost  \\\n",
       "BNF CODE        bnf_name                                                \n",
       "0208020Y0AAABAB Rivaroxaban_Tab 15mg                       2864747.23   \n",
       "0212000L0AAAAAA Ezetimibe_Tab 10mg                         4006482.11   \n",
       "0208020Z0AAAAAA Apixaban_Tab 2.5mg                         5161392.03   \n",
       "0208020Z0AAABAB Apixaban_Tab 5mg                          10569680.46   \n",
       "0208020Y0AAACAC Rivaroxaban_Tab 20mg                      11094375.29   \n",
       "\n",
       "                                                          QUANTITY      PERIOD  \n",
       "BNF CODE        bnf_name                                                        \n",
       "0208020Y0AAABAB Rivaroxaban_Tab 15mg                       1713779  1289325756  \n",
       "0212000L0AAAAAA Ezetimibe_Tab 10mg                         4592773  1420901964  \n",
       "0208020Z0AAAAAA Apixaban_Tab 2.5mg                         5846615  1402941408  \n",
       "0208020Z0AAABAB Apixaban_Tab 5mg                          11988786  1457630292  \n",
       "0208020Y0AAACAC Rivaroxaban_Tab 20mg                       6641547  1455814056  "
      ]
     },
     "execution_count": 336,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sorted.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 337,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'ch2_actcosts' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-337-926275179e19>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mch2_actcosts\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m60\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m: name 'ch2_actcosts' is not defined"
     ]
    }
   ],
   "source": [
    "ch2_actcosts.head(60)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 338,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'ch2_actcosts' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-338-31f8f6ec6000>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mch2_actcosts\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtypes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m: name 'ch2_actcosts' is not defined"
     ]
    }
   ],
   "source": [
    "ch2_actcosts.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 339,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[' SHA',\n",
       " 'PCT',\n",
       " 'PRACTICE',\n",
       " 'BNF CODE',\n",
       " 'BNF NAME                                    ',\n",
       " 'prescr  ',\n",
       " 'NIC        ',\n",
       " 'ACT COST   ',\n",
       " 'QUANTITY',\n",
       " 'PERIOD',\n",
       " '                 ']"
      ]
     },
     "execution_count": 339,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#For total spending, it is assumed the question is asking for all spending\n",
    "#accross all GP practices nationwide (not just London & Cambridge), and\n",
    "#that it is all prescriptions entirely, and for the month of April 2018\n",
    "april_presc.columns.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 340,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "643187390.1999997\n"
     ]
    }
   ],
   "source": [
    "#this is the total actual costs of all prescriptions for all practices\n",
    "#for April 2018\n",
    "total_costs = april_presc['ACT COST   '].sum()\n",
    "\n",
    "print(total_costs)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 341,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PRACTICE</th>\n",
       "      <th>total_costs_per_practice</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A81001</td>\n",
       "      <td>52194.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A81002</td>\n",
       "      <td>268607.26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A81004</td>\n",
       "      <td>139115.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A81005</td>\n",
       "      <td>102914.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A81006</td>\n",
       "      <td>183226.79</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PRACTICE  total_costs_per_practice\n",
       "0   A81001                  52194.63\n",
       "1   A81002                 268607.26\n",
       "2   A81004                 139115.40\n",
       "3   A81005                 102914.06\n",
       "4   A81006                 183226.79"
      ]
     },
     "execution_count": 341,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total_costs_practices =pd.DataFrame(april_presc.groupby(april_presc.PRACTICE).apply(lambda subf: subf['ACT COST   '].sum()))\n",
    "total_costs_practices.columns = ['total_costs_per_practice']\n",
    "# Reseting the index\n",
    "total_costs_practices.reset_index(inplace=True)\n",
    "total_costs_practices.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 342,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0, 80000)"
      ]
     },
     "execution_count": 342,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "merged = pd.merge(total_costs_practices, gp_practices[['CODE', 'NUMBER_OF_PATIENTS']], left_on='PRACTICE' , right_on='CODE')\n",
    "ax3=merged.plot(kind='scatter', x='total_costs_per_practice', y='NUMBER_OF_PATIENTS', title='Scatter plot: total spending / registered patients (April 2018)', figsize=(8,6))\n",
    "ax3.set_xlabel(\"total spending per surgery (April 2018)\",fontsize=12)\n",
    "ax3.set_ylabel(\"total number of registered patients\",fontsize=12)\n",
    "ax3.set_xlim(0, 800000)\n",
    "ax3.set_ylim(0, 80000)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 343,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0, 72227)"
      ]
     },
     "execution_count": 343,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "\n",
    "from math import floor\n",
    "max_x = floor(merged.total_costs_per_practice.max())\n",
    "max_y = floor(merged.NUMBER_OF_PATIENTS.max())\n",
    "\n",
    "ax4=merged.plot(kind='scatter', x='total_costs_per_practice', y='NUMBER_OF_PATIENTS', title='Scatter plot: monthly total spending / registered patients', \n",
    "                color='royalblue', figsize=(8,6))\n",
    "ax4.set_xlabel(\"monthly total spending per surgery\",fontsize=12)\n",
    "ax4.set_ylabel(\"total number of registered patients\",fontsize=12)\n",
    "ax4.set_xlim(0, max_x)\n",
    "ax4.set_ylim(0, max_y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 344,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['PUBLICATION',\n",
       " 'EXTRACT_DATE',\n",
       " 'TYPE',\n",
       " 'CCG_CODE',\n",
       " 'ONS_CCG_CODE',\n",
       " 'CODE',\n",
       " 'POSTCODE',\n",
       " 'SEX',\n",
       " 'AGE',\n",
       " 'NUMBER_OF_PATIENTS']"
      ]
     },
     "execution_count": 344,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gp_practices.columns.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 345,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['PRACTICE', 'total_costs_per_practice', 'CODE', 'NUMBER_OF_PATIENTS']"
      ]
     },
     "execution_count": 345,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "merged.columns.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 346,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0, 72227)"
      ]
     },
     "execution_count": 346,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "\n",
    "# plot those data points\n",
    "#fig, ax = plt.subplots()\n",
    "import matplotlib.pyplot as plt\n",
    "fig=plt.figure(figsize=(8, 6))\n",
    "ax=fig.add_subplot(111)\n",
    "x= merged['total_costs_per_practice']\n",
    "y = merged['NUMBER_OF_PATIENTS']\n",
    "ax.scatter(x, y, color='royalblue')\n",
    "fit = np.polyfit(x, y, deg=1)\n",
    "ax.plot(x, fit[0] * x + fit[1], color='red')\n",
    "ax.set_title('Scatter plot: monthly total spending / registered patients')\n",
    "ax.set_xlabel(\"monthly total spending per surgery\",fontsize=12)\n",
    "ax.set_ylabel(\"total number of registered patients\",fontsize=12)\n",
    "max_x = floor(merged.total_costs_per_practice.max())\n",
    "max_y = floor(merged.NUMBER_OF_PATIENTS.max())\n",
    "ax.set_xlim(0, max_x)\n",
    "ax.set_ylim(0, max_y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 347,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAbgAAAEWCAYAAAAU3IItAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvhp/UCwAAIABJREFUeJzt3XncVWW5//HPV3DCCRA1BZRScuqoGanlRFqGHgvP+WliZmQWmZ7Mjg1qlqZZNpqeSjMlcQ4tlUxTwqkyBJwHLEhNEBUVxAEn6Pr9cd87Fpu997N5eDb7eZbf9+u1X3ute91rrWuN117DXksRgZmZWdms0u4AzMzMWsEJzszMSskJzszMSskJzszMSskJzszMSskJzszMSuktl+Ak7S7pb+2OoytJulXSZ+p0GyIpJPVe2XF1RNIpki5pdxzLQ9Khkm5agf7PlfSNroypu5A0XNLsQvtDkoa3MaRuQdKJks5vdxy15H3DFitpXCt9fWg6wUkaJelOSa9Impubj5Kk3P1CSW9IelnSPEkTJW3VutCbjnupBRgRf4qILdsZ04pYmUmhUeLsivo9UURcGhH7NFNX0qck/bmq/yMj4rTWRNe9RMS2EXFru+Not4j4TkR0uF2UafvJ+eDbxbKuWh+WZx/YVIKTdBxwFvAD4G3ARsCRwK7AaoWq34+ItYFBwFzgwubDrjvubnfkYd2PpF4rYRxeF0ummWXaU5b7ytgGepyIaPgB1gNeAf5fB/UuBL5daP9P4OUGdc8FJgIvAbcBmxW6B3A0MAN4LJedBcwCXgTuAnYv1O8FnAj8Iw/vLmAwcHse1ivAy8DBwHBgdqHfwcBvgWeB54GfFrp9GpgOzAduLMZYNT1D8ngOzzHOJ/0AeC9wP/BC1XBXAU4C/kn6IXARsF7VsEYDTwDPAV/P3UYAbwBv5um5L5ffCpwG/CVP/03AgKrh9QYOAu6qiv044Joa03Q6sBh4LY/rp7n8/cBUYEH+fn8H9Rstt1OAS+rM0+HA7LxcnwMeBw6tWofOAa7Py/eDwOrAD/N8e4a0jq2Z6w8ArsvLYh7wJ2CVRusA8Kk8T8/M/Xw7l/25al09Bng0x/mDvHy3zvNicZ4fL9TZTj4LzMzDnwBsUjXsI0nbwXzgZ4DqzK+dgGl5Pj8D/Lhq+Y8B5gBPAcdVrYvHk7ad54HxQP+O1sXcfc08PfOBh4GvsPS29TjwwcKyHk9a118CHgKGFeruCNyTu10J/Lo4n6qmtbJc/o+0Hj4C7F21z7ogT+uTebn1qrdMawz/FOAq4JI8Pz/TaD7lfj5J2p6fB75RY9ovyc1r5OE+T1oXp5IOGOptP1uR9pPzgL8BH+vsNpD7+UqeL3NI+7cAtqgzn28FvgtMyfP52qppvhJ4One7Hdg2l48h7aPeyNPyuxrrQ6fWO+rsA+vmpUYdCwNcBPTuoN6FlZUFWBu4DPhTg7ovAXvkBXIWy+40JgL9WbKD+gSwPmlHfVyesWsUFtoDwJaAgO2B9QvD2qIw7OHkjZCUGO8jrexrkVa+3XK3A0g7nq3zOE8C7uggwZ2bh7EPaUW9BtgQGEhKZHvm+p/Ow35Hnle/BS6uGtYvSTuQ7YHXga3rJQXSivgP4J25n1uBM2okuNVJG8rWhX7voc6PlzyczxTa+5N2Zofl4R2S29evVb+J5bbMtFQtp0XAj3Pce5I24i0L69AC0lmEVfJ8/wkpSfQH1gF+B3w31/9uXj6r5s/upHWl0TrwqRzDF3L8a1I7wd2Sx7kp8PfKPKiuW2M72Yu08e6Yp/H/gNurhn0d0DcP+1lgRJ359VfgsML2t0vV8r88T99/5OFUdjTHApNJZ11WB34BXN7kungG6YdCf9KPhAdpnOBeA/bL8/y7wOTcbTVScvhiXjb/TdqJNUpwi4Av5foH53WhsoO8Jk/HWqTtbwrwuXrLtE6Ce5O0D1glT3uj+bQNaWe7W56WH+b+ayW4z5HWyz55PrwHWLfO9rYW6cfh4TnWHUnrSyWRXMjybQMjSEnvXXnYl9FxgnuyUP83FLZX0n5snTw/fgLcW2s9r7M+rMh69+/52WH+6rBC2kE9XVV2B+nXx6vAHoUJei2XP51n8uYNEtwVhfa1Sb9eBhc27L06iGs+sH1u/hswsk69RgnufaSNfZnkDdwAHFFoXwVYSI2juMICGVgoex44uND+G+DY3DwJOKrQbUvSBtG7MKxBhe5TgFH1Fm5eEU8qtB8F/KEqtt65/Rzg9Ny8bZ6PqzdYwYsb3GHAlBo71k/Vqt/Ecqu7orIkwa1VKBsPfKOwDl1U6CZSAty8UPY+lpwBOJX0C3SLqvE0Wgc+BTxRo6w6wY0otB8FTKpVtxB3JcFdQDqtX9wO3gSGFIa9W9X0H19nft0OfIt85F5j3dyqUPZ94ILcPJ2lj342pvl18dGqaR9D4wT3x0K3bYBXc/MepB2pCt3/TOMEN6eq/hTS+rkRaWdYPGo5BLil3jKtMfxTKPzQaGI+fZO8c87d+pASdK0E92nS/nO7Jra3g6k6SCAlgpM7uQ2MJf/wze3vpOMEV6y/TZ6uXjXq9s3DWq8QW6MEtyLr3b/nZ0efZq7BPQ8MKJ6Hjoj3R0Tf3K04jB9GRN+IeFtEfDQi/tFguLMKw3uZdGSxSa3ukK4DSpouaYGkF0inIQbkzoNJRzDLazDwz4hYVKPbZsBZkl7I45tHWoEGNhjeM4XmV2u0r52bNyH9Yq34J2nBblQoe7rQvLDQbz3N1h8HfDzfHHQYMD4iXu9g2BXVcZPb686TDpZbR+ZHxCtV46q3jmxA2rHcVVhmf8jlkE4dzgRukvSopONzeaN1oHoc9RTrVMfYyFLzM28Hz7P0/Gx2uR5B2mE9ImmqpP2bjHEz4OrCPJtO+rHZzLq4SY3hNlI9nDXyfmUT4MnIe68a8dZSXb8yTZuRjuqeKkzTL0hHcs0Ou1adRvNpqfkQEQtJy7GWi0mXO66QNEfS9yWtWqfuZsDOlXHm8R5Kug+iVpwdbQPLu7yqh/9P0rwdIKmXpDMk/UPSi6TkBc1v2yuy3jWtmQT3V9IvopHLO/AODK40SFqbdEg9p9A9Ct13B74GfAzol5PrAlLCgbQQNu9EDLOATetcRJ5FOq3Rt/BZMyLu6MR4qs0hLeCKTUlHK8/Urr6U6LhKg54jJpN+he0OfJy0wTU7ruq4IcX+ZK36TSy3jvSTtFbVuGquI6RTN6+STt9Ultd6kW56IiJeiojjIuIdwEeA/5W0N43XgWWmqY7BheZijB31u9T8zNO6PkvmZ9MiYkZEHELakX8PuKpq3tWLcRawb9V6vkZENBPDUzWG2xlPAQMrd2TXiLeW6vqVaZpF2l8NKEzPuhGxbaFuM8u0uk6j+fQU6VQbAJLWJC3HZQca8WZEfCsitiFdz96fdP2u3jhvqxrn2hHx+TpxNtwG6Nzyqq7/Zh7Px0k54YOkH61Dcp3KMuloHq/Ietf0PrDDBBcRL5BOffxc0oGS1pa0iqQdSOdlO2s/SbtJWo10g8SdEVHvl9U6pATwLNBb0jeBdQvdzwdOkzRUyXaSKivYM6RrXbVMIS30MyStJWkNSbvmbucCJ0jaFkDSepIO6uzEVrkc+JKkt+fk/h3g1w2OIoqeAYZIWpH/MF4E/BRYFBF/blCvet5dD7xT0scl9ZZ0MOm0xXV16ne03JrxLUmr5WS5P+nC9jIi4l+kc/ZnStoQQNJASR/OzftL2iLvFF8k/VpcTON1oFlfkdRP0mDSdaRf5/JngEF5Ha/lMuBwSTtIWp20HtwZEY8v5/iR9AlJG+T58EIuXlyo8g1JffL6fHghxnOB0yVtloezgaRmf8yOJ20j/SQNIl3X6oy/5lj/J69XI0k3zTSyIXCMpFXzdrk1cH1EPEW6yepHktbN+6rNJe3ZydgqGs2nq4CPSHp/Xtbfos6POEkfkPQf+Y7HF0kJo7Kcqref60jb22F5OleV9F5JW9cadkfbAGl5fUrSNpL6ACc3Md2fKNQ/FbgqIhaTtu3XSUeqfUjrblGj/S6s2HrX9D6wqZ1kRHwf+F/gq6SbJZ4hHfZ/jXQ+uTMuI83geaQLrYc2qHsj6ZrY30mHya+x9KHzj0kL7ybSSnMB6eIkpPO14/Kh8Meqpmsx6df8FqS7dWaTznsTEVeTfglfkQ/BHwT27dykLmMs6cjpduCxPD3N7hwqO/jnJd3dyfFfTLpw3OjoDdLNPwdKmi/p7Ih4npRkjiOt2F8F9o+I52rVp+Pl1pGnSdfs5gCXAkdGxCMN6n+NdBpycl5mfyRd3wQYmttfJu1Qfx4RtzZaB5bDtaQ7RO8Ffk9a/wBuJt0t+LSk56p7iohJpDvufkNKspsDo5Zz3BUjgIckvUxaDqMi4rVC99tI82YS6VJC5c/qZ5Gul98k6SXShf+dmxznt0jL9THSttfR+lRTRLxBurHkCFJy/gRp597o1PmdpGX6HOkOxAPz+gnpiGg10p2d80kJaOPOxFZQdz5FxEOk7fcK0nJ8ibSfrBX/23I8L5JOy91GuquyMo7i9vYS6Ya1UaRt4GnSPmn1BnHW3QYi4gbSzSA35zo3NzHdF5Oupz1NuonlmFx+EWnZP0maz5Or+rsA2Cbvd6+pMdwVWe+a3gdq6dPYK4ekC0kXo09a6SO3yimUucCOETGj3fHUovTEg0siYlBHddtJUgBDI2Jmu2OpRdIQUgJatckzBN2CpDuBcyPiVzW6fYp0M8ZuKz2wJuSzMi+Q1ovH2h1PZ0m6lbQNdsunsDTjLfeoLgPg88DU7prc7K1H0p6S3pZPUY4GtiPdINEjSPpIPgW8FulvAg+w5MYLa5Me8Q996zqSHiddHzigzaGYFW1JusywNumO6APz9bSeYiTpdJ5If7gfFe04PWZLacspSjMzs1bzKUozMyulUp6iHDBgQAwZMqTdYZiZ9Sh33XXXcxGxQcc1e4ZSJrghQ4Ywbdq0dodhZtajSGrm6SY9hk9RmplZKTnBmZlZKTnBmZlZKTnBmZlZKTnBmZlZKTnBmZlZKTnBmZlZKTnBmZlZKTnBmZlZKZXySSYPPLmAIcf/vt1hmJlZG/kIzszMSqllCU7SlpLuLXxelHSspP6SJkqakb/75fqSdLakmZLul7RjYVijc/0Z+WWIZmZmDbUswUXE3yJih4jYAXgPsBC4GjgemBQRQ4FJuR1gX2Bo/owBzgGQ1B84GdgZ2Ak4uZIUzczM6llZpyj3Bv4REf8kvfl2XC4fx5I3S48ELopkMtBX0sbAh4GJETEvIuYDE4ERKyluMzProVZWghsFXJ6bN6q8ij5/b5jLBwKzCv3MzmX1ypciaYykaZKmLV64oIvDNzOznqblCU7SasBHgSs7qlqjLBqUL10QcV5EDIuIYb36rLf8gZqZWamsjCO4fYG7I+KZ3P5MPvVI/p6by2cDgwv9DQLmNCg3MzOra2UkuENYcnoSYAJQuRNyNHBtofyT+W7KXYAF+RTmjcA+kvrlm0v2yWVmZmZ1tfSP3pL6AB8CPlcoPgMYL+kI4AngoFx+PbAfMJN0x+XhABExT9JpwNRc79SImNfKuM3MrOdraYKLiIXA+lVlz5PuqqyuG8DRdYYzFhjbihjNzKyc/CQTMzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrpZYmOEl9JV0l6RFJ0yW9T1J/SRMlzcjf/XJdSTpb0kxJ90vasTCc0bn+DEmjWxmzmZmVQ6uP4M4C/hARWwHbA9OB44FJETEUmJTbAfYFhubPGOAcAEn9gZOBnYGdgJMrSdHMzKyeliU4SesCewAXAETEGxHxAjASGJerjQMOyM0jgYsimQz0lbQx8GFgYkTMi4j5wERgRKviNjOzcmjlEdw7gGeBX0m6R9L5ktYCNoqIpwDy94a5/kBgVqH/2bmsXrmZmVldrUxwvYEdgXMi4t3AKyw5HVmLapRFg/Kle5bGSJomadrihQs6E6+ZmZVIKxPcbGB2RNyZ268iJbxn8qlH8vfcQv3Bhf4HAXMalC8lIs6LiGERMaxXn/W6dELMzKznaVmCi4ingVmStsxFewMPAxOAyp2Qo4Frc/ME4JP5bspdgAX5FOaNwD6S+uWbS/bJZWZmZnX1bvHwvwBcKmk14FHgcFJSHS/pCOAJ4KBc93pgP2AmsDDXJSLmSToNmJrrnRoR81oct5mZ9XAtTXARcS8wrEanvWvUDeDoOsMZC4zt2ujMzKzM/CQTMzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrJSc4MzMrpZYmOEmPS3pA0r2SpuWy/pImSpqRv/vlckk6W9JMSfdL2rEwnNG5/gxJo1sZs5mZlcPKOIL7QETsEBHDcvvxwKSIGApMyu0A+wJD82cMcA6khAicDOwM7AScXEmKZmZm9bTjFOVIYFxuHgccUCi/KJLJQF9JGwMfBiZGxLyImA9MBEas7KDNzKxnaXWCC+AmSXdJGpPLNoqIpwDy94a5fCAwq9Dv7FxWr3wpksZImiZp2uKFC7p4MszMrKfp3eLh7xoRcyRtCEyU9EiDuqpRFg3Kly6IOA84D2D1jYcu093MzN5aWnoEFxFz8vdc4GrSNbRn8qlH8vfcXH02MLjQ+yBgToNyMzOzulqW4CStJWmdSjOwD/AgMAGo3Ak5Grg2N08APpnvptwFWJBPYd4I7COpX765ZJ9cZmZmVlcrT1FuBFwtqTKeyyLiD5KmAuMlHQE8ARyU618P7AfMBBYChwNExDxJpwFTc71TI2JeC+M2M7MSaFmCi4hHge1rlD8P7F2jPICj6wxrLDC2q2M0M7Py8pNMzMyslJzgzMyslJzgzMyslJzgzMyslJzgzMyslJzgzMyslJpKcJLe1epAzMzMulKzR3DnSpoi6ShJfVsakZmZWRdoKsFFxG7AoaRnQk6TdJmkD7U0MjMzsxXQ9DW4iJgBnAR8DdgTOFvSI5L+u1XBmZmZdVaz1+C2k3QmMB3YC/hIRGydm89sYXxmZmad0uyzKH8K/BI4MSJerRTmd72d1JLIzMzMVkCzCW4/4NWIWAwgaRVgjYhYGBEXtyw6MzOzTmr2GtwfgTUL7X1ymZmZWbfUbIJbIyJerrTk5j6tCcnMzGzFNZvgXpG0Y6VF0nuAVxvUNzMza6tmr8EdC1wpaU5u3xg4uDUhmZmZrbimElxETJW0FbAlIOCRiHizpZGZmZmtgGaP4ADeCwzJ/bxbEhFxUUuiMjMzW0FNJThJFwObA/cCi3NxAE5wZmbWLTV7BDcM2CYiYnlHIKkXMA14MiL2l/R24AqgP3A3cFhEvCFpdVLCfA/wPHBwRDyeh3ECcAQpuR4TETcubxxmZvbW0uxdlA8Cb+vkOL5IesRXxfeAMyNiKDCflLjI3/MjYgvS47++ByBpG2AUsC0wAvh5TppmZmZ1NZvgBgAPS7pR0oTKp6OeJA0C/hM4P7eL9PzKq3KVccABuXlkbid33zvXHwlcERGvR8RjwExgpybjNjOzt6hmT1Ge0snh/wT4KrBObl8feCEiFuX22cDA3DwQmAUQEYskLcj1BwKTC8Ms9vNvksYAYwB6rbtBJ8M1M7OyaPZ9cLcBjwOr5uappOtndUnaH5gbEXcVi2sNvoNujfopxnheRAyLiGG9+qzXKDQzM3sLaPZ1OZ8lnTb8RS4aCFzTQW+7Ah+V9DjpppK9SEd0fSVVjhwHAZU/j88mvVCV3H09YF6xvEY/ZmZmNTV7De5oUsJ6Ef798tMNG/UQESdExKCIGEK6SeTmiDgUuAU4MFcbDVybmyfkdnL3m/NdmxOAUZJWz3dgDgWmNBm3mZm9RTV7De71fCs/8O8jrOX+y0D2NeAKSd8G7gEuyOUXABdLmkk6chsFEBEPSRoPPAwsAo6uvLbHzMysnmYT3G2STgTWlPQh4Cjgd82OJCJuBW7NzY9S4y7IiHgNOKhO/6cDpzc7PjMzs2ZPUR4PPAs8AHwOuB7wm7zNzKzbavZhy/8Cfpk/ZmZm3V6zz6J8jNq35r+jyyMyMzPrAsvzLMqKNUjXyvp3fThmZmZdo9k/ej9f+DwZET8h/a/NzMysW2r2FOWOhdZVSEd069SpbmZm1nbNnqL8UaF5EemxXR/r8mjMzMy6SLN3UX6g1YGYmZl1pWZPUf5vo+4R8eOuCcfMzKxrLM9dlO8lPRcS4CPA7eTX25iZmXU3zSa4AcCOEfESgKRTgCsj4jOtCszMzGxFNPuork2BNwrtbwBDujwaMzOzLtLsEdzFwBRJV5OeaPJfwEUti8rMzGwFNXsX5emSbgB2z0WHR8Q9rQvLzMxsxTR7ihKgD/BiRJwFzM4vHzUzM+uWmkpwkk4mvaj0hFy0KnBJq4IyMzNbUc0ewf0X8FHgFYCImIMf1WVmZt1YswnujYgI8itzJK3VupDMzMxWXLMJbrykXwB9JX0W+CN++amZmXVjzd5F+UNJHwJeBLYEvhkRE1samZmZ2Qro8AhOUi9Jf4yIiRHxlYj4cjPJTdIakqZIuk/SQ5K+lcvfLulOSTMk/VrSarl89dw+M3cfUhjWCbn8b5I+3PnJNTOzt4oOE1xELAYWSlpvOYf9OrBXRGwP7ACMkLQL8D3gzIgYCswHjsj1jwDmR8QWwJm5HpK2AUYB2wIjgJ9L6rWcsZiZ2VtMs9fgXgMekHSBpLMrn0Y9RPJybl01f4L0JvCrcvk44IDcPDK3k7vvLUm5/IqIeD0iHgNmAjs1GbeZmb1FNfuort/nz3LJR1p3AVsAPwP+AbwQEYtyldnAwNw8kPx2gohYJGkBsH4un1wYbLGf4rjGAGMAeq27wfKGamZmJdMwwUnaNCKeiIhxjerVk09v7iCpL3A1sHWtapXR1elWr7x6XOcB5wGsvvHQZbqbmdlbS0enKK+pNEj6TWdHEhEvALcCu5D+alBJrIOAObl5NjA4j6s3sB4wr1heox8zM7OaOkpwxaOndyzPgCVtkI/ckLQm8EFgOnALcGCuNhq4NjdPyO3k7jfnP5dPAEbluyzfDgwFpixPLGZm9tbT0TW4qNPcjI2Bcfk63CrA+Ii4TtLDwBWSvg3cA1yQ618AXCxpJunIbRRARDwkaTzwMLAIODqf+jQzM6urowS3vaQXSUdya+ZmcntExLr1eoyI+4F31yh/lBp3QUbEa8BBdYZ1OnB6B7GamZn9W8MEFxH+v5mZmfVIy/M+ODMzsx7DCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzEqpZQlO0mBJt0iaLukhSV/M5f0lTZQ0I3/3y+WSdLakmZLul7RjYVijc/0Zkka3KmYzMyuPVh7BLQKOi4itgV2AoyVtAxwPTIqIocCk3A6wLzA0f8YA50BKiMDJwM7ATsDJlaRoZmZWT8sSXEQ8FRF35+aXgOnAQGAkMC5XGwcckJtHAhdFMhnoK2lj4MPAxIiYFxHzgYnAiFbFbWZm5bBSrsFJGgK8G7gT2CginoKUBIENc7WBwKxCb7NzWb3y6nGMkTRN0rTFCxd09SSYmVkP0/IEJ2lt4DfAsRHxYqOqNcqiQfnSBRHnRcSwiBjWq896nQvWzMxKo6UJTtKqpOR2aUT8Nhc/k089kr/n5vLZwOBC74OAOQ3KzczM6mrlXZQCLgCmR8SPC50mAJU7IUcD1xbKP5nvptwFWJBPYd4I7COpX765ZJ9cZmZmVlfvFg57V+Aw4AFJ9+ayE4EzgPGSjgCeAA7K3a4H9gNmAguBwwEiYp6k04Cpud6pETGvhXGbmVkJtCzBRcSfqX39DGDvGvUDOLrOsMYCY7suOjMzKzs/ycTMzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErJCc7MzEqpZQlO0lhJcyU9WCjrL2mipBn5u18ul6SzJc2UdL+kHQv9jM71Z0ga3ap4zcysXFp5BHchMKKq7HhgUkQMBSbldoB9gaH5MwY4B1JCBE4GdgZ2Ak6uJEUzM7NGWpbgIuJ2YF5V8UhgXG4eBxxQKL8okslAX0kbAx8GJkbEvIiYD0xk2aRpZma2jJV9DW6jiHgKIH9vmMsHArMK9Wbnsnrly5A0RtI0SdMWL1zQ5YGbmVnP0l1uMlGNsmhQvmxhxHkRMSwihvXqs16XBmdmZj3Pyk5wz+RTj+Tvubl8NjC4UG8QMKdBuZmZWUMrO8FNACp3Qo4Gri2UfzLfTbkLsCCfwrwR2EdSv3xzyT65zMzMrKHerRqwpMuB4cAASbNJd0OeAYyXdATwBHBQrn49sB8wE1gIHA4QEfMknQZMzfVOjYjqG1fMzMyW0bIEFxGH1Om0d426ARxdZzhjgbFdGJqZmb0FdJebTMzMzLqUE5yZmZWSE5yZmZWSE5yZmZWSE5yZmZWSE5yZmZWSE5yZmZWSE5yZmZWSE5yZmZWSE5yZmZWSE5yZmZWSE5yZmZWSE5yZmZWSE5yZmZWSE5yZmZWSE5yZmZWSE5yZmZWSE5yZmZWSE5yZmZWSE5yZmZVSj0lwkkZI+pukmZKOb3c8ZmbWvfWIBCepF/AzYF9gG+AQSdu0NyozM+vOekSCA3YCZkbEoxHxBnAFMLLNMZmZWTfWu90BNGkgMKvQPhvYuVhB0hhgTG59/Z/f2//BlRTbihgAPNfuIJrgOLuW4+w6PSFG6DlxbtnuALpST0l2JKHxAAAL5klEQVRwqlEWS7VEnAecByBpWkQMWxmBrQjH2bUcZ9fqCXH2hBihZ8XZ7hi6Uk85RTkbGFxoHwTMaVMsZmbWA/SUBDcVGCrp7ZJWA0YBE9ock5mZdWM94hRlRCyS9D/AjUAvYGxEPNSgl/NWTmQrzHF2LcfZtXpCnD0hRnCcbaGI6LiWmZlZD9NTTlGamZktFyc4MzMrpVIlOEmDJd0iabqkhyR9sd0x1SOpl6R7JF3X7lgakdRX0lWSHsnz9X3tjqmapC/l5f2gpMslrdHumCokjZU0V9KDhbL+kiZKmpG/+3XDGH+Ql/n9kq6W1LedMeaYlomz0O3LkkLSgHbEVhVLzTglfSE/bvAhSd9vV3yFeGot9x0kTZZ0r6RpknZqZ4wrqlQJDlgEHBcRWwO7AEd340d6fRGY3u4gmnAW8IeI2ArYnm4Ws6SBwDHAsIh4F+kmpFHtjWopFwIjqsqOByZFxFBgUm5vpwtZNsaJwLsiYjvg78AJKzuoGi5k2TiRNBj4EPDEyg6ojgupilPSB0hPX9ouIrYFftiGuKpdyLLz8/vAtyJiB+Cbub3HKlWCi4inIuLu3PwSaWc8sL1RLUvSIOA/gfPbHUsjktYF9gAuAIiINyLihfZGVVNvYE1JvYE+dKP/SEbE7cC8quKRwLjcPA44YKUGVaVWjBFxU0Qsyq2TSf89bas68xLgTOCrVD38oV3qxPl54IyIeD3XmbvSA6tSJ84A1s3N69GNtqXOKFWCK5I0BHg3cGd7I6npJ6QN8l/tDqQD7wCeBX6VT6eeL2mtdgdVFBFPkn4NPwE8BSyIiJvaG1WHNoqIpyD9KAM2bHM8Hfk0cEO7g6hF0keBJyPivnbH0oF3ArtLulPSbZLe2+6A6jgW+IGkWaTtqjscuXdaKROcpLWB3wDHRsSL7Y6nSNL+wNyIuKvdsTShN7AjcE5EvBt4hfafTltKvn41Eng7sAmwlqRPtDeq8pD0ddKp/0vbHUs1SX2Ar5NOpXV3vYF+pEsnXwHGS6r1CMJ2+zzwpYgYDHyJfPampypdgpO0Kim5XRoRv213PDXsCnxU0uOktyLsJemS9oZU12xgdkRUjoKvIiW87uSDwGMR8WxEvAn8Fnh/m2PqyDOSNgbI320/XVWLpNHA/sCh0T3/MLs56YfNfXl7GgTcLeltbY2qttnAbyOZQjp70/YbYmoYTdqGAK4kvcmlxypVgsu/iC4ApkfEj9sdTy0RcUJEDIqIIaSbIW6OiG55xBERTwOzJFWeML438HAbQ6rlCWAXSX3y8t+bbnYjTA0TSDsS8ve1bYylJkkjgK8BH42Ihe2Op5aIeCAiNoyIIXl7mg3smNfb7uYaYC8ASe8EVqN7vl1gDrBnbt4LmNHGWFZYj3hU13LYFTgMeEDSvbnsxIi4vo0x9XRfAC7NzwB9FDi8zfEsJSLulHQVcDfpVNo9dKPHDUm6HBgODJA0GzgZOIN0iuoIUoI+qH0R1o3xBGB1YGI+kzY5Io5sW5DUjjMiut0ptDrzcywwNt+S/wYwut1HxXXi/CxwVr5h6zWWvIKsR/KjuszMrJRKdYrSzMyswgnOzMxKyQnOzMxKyQnOzMxKyQnOzMxKyQmuhPJT1S8utPeW9Gxn31yQ3yhwVKF9eL1hSbpV0rDOjGdlk3SkpE92UGe4pPcvTz/dkaQLJR2Ym8/vxg8hb1qN9XKT/JeRzg7v2Px0FCsJJ7hyegV4l6Q1c/uHgCdXYHh9gaM6rNUi+T85XT7MiDg3Ii7qoOpwCk9GabKfbi0iPhMRbf/Dfhcs16XWy4iYExEHrsDwjiU9rNtKwgmuvG4gvbEA4BDg8kqH/D6ya/K7viZL2i6Xn5LfEXWrpEclHZN7OQPYPL8j6ge5bG0teU/cpdXP1ZN0hKQzC+2flbTM02UkvSzpR5LuljRJ0ga5/FZJ35F0G/BFSRtI+o2kqfmza663Z47r3vxA6HVy+VclPSDpPkln1BnmKZK+XOj2E0l3KL1XbielB3YfCXwpD3/3qn4q786qvDOtX2FY35M0RdLfJe1eY7o3lnR7Hu6DlToN5sfmkv4g6S5Jf5K0VS6/UNLZOe5HC0dpkvRTSQ9L+j2FBzoXj7Lz+E7P82mypI0K45uc5/Wpkl6uMQ1D8vIfl+fBVZUjIEnvUXqo8F2SbtSSR5MttQyqhneKpIsl3az0rrzP5vK187y4Oy/TkbXWyxzPg7mfXrlsao7tc7l8eI5hqXVXaV3fBLhF0i3V02o9VET4U7IP8DKwHenZkWsA95KORK7L3f+P9BQISI/juTc3nwLcQXqCxQDgeWBVYAjwYGH4w4EFpGf/rQL8Fdgtd7sVGAasBfwDWDWX3wH8R41Yg/SsQ0gPzf1pYTg/L9S7rDCOTUmPYwP4HbBrbl6b9HSeffP4+uTy/nWGeQrw5UK3X+bmPSrTW6xTo5/7gT1z86nATwrD+lFu3g/4Y43pPg74em7uBazTwfyYBAzNzTuTHvEG6Z1eV+blsA0wM5f/N+mdbr1IO+4XgAOLy6gwvo/k5u8DJ+Xm64BDcvORwMs1pmFI7r8y/8cCXyatM3cAG+Tyg4GxtZZB1fBOAe4D1iStf7Ny7L2BdXOdAcBMQCy7Xv67nfQEjsq0rA5MIz23cjj1193HgQHt3n796bpP2R7VZVlE3J+PQA4Bqh9Vthvw/3K9myWtL2m93O33kd5Z9bqkucBGdUYxJSJmAyg9Fm0I8OfC+F+RdDOwv6TppET3QI3h/Av4dW6+hCUPeqVQDumhyttoyYHiuvlo7S/AjyVdSnqY7WxJHwR+FfkZihExr84wq12e698uaV01eIt1nl99I+K2XDSOlGgqKtNxF2neVJtKenTTqsA1EVF5tNwy80Pp7RjvB64sTP/qhWFdExH/Ah6uHIGRkvTlEbEYmJOXRS1vkJJZJdYP5eb3seQ9dZdR/wWdsyLiL4V4jwH+ALyLJY/56kV6lVFFo2VwbUS8Cryaj6R2An4PfEfSHqT5M5D662XFPsB2lSNa0rvNhpKmt+G6a+XhBFduE0g7puHA+oXyWq/pqDyz7fVC2WLqryPN1DsfOBF4BPhVx+EuFQeka4kVqwDvyzu/ojPyKbj9gMk5uYn6L798pU559bhrtS+PyvypOW9yEt2DdBr5Ykk/iNrX9oI07S9Eestyo3HB0su2mfjfjIhKvUbLu55a80zAQxHxvjr9LO8yOBTYAHhPRLyp9OaANTqIS8AXIuLGpQql4TS/jlsP52tw5TYWOLXGkdPtpJ1GZYN/Lhq/N+8lYJ3lHXmk1+wMBj5O4RpglVWAyq/sj1P/l/RNwP9UWiTtkL83j/RU+e+RTkNtlet+unA9qH+TIR+c6+9GenHqAupMe+42v3B97TDgtup69UjajPRewF+S3oBReQ3RMvMjL5vHJB2U+5Wk7TsYxe3AqHwtamPgA83Glk0mH+WT3npRz6aSKonsENLy+xuwQaVc0qqStm1yvCMlrSFpfdIPs6mko6+5Obl9ANgs1220Xt4IfD4fISPpner4Zb2dWs+t+/IvlxLLp2HOqtHpFNJbuu8HFrLk1S31hvO8pL/kC/g3kE4ZNWs8sENEzK/T/RVgW0l3ka6NHFyn3jHAz3LMvUk78COBY/NObzHpVT43RMTrOQFOk/QG6RTtiU3EOl/SHcC6pLdYQ7rGd1W+seELVfVHA+fmRLq8b1oYDnxF0puka6aVvx7Umx+HAudIOol0jesK0vWqeq4mXV99APg7y5F8s2OBSyQdR1reC+rUmw6MlvQL0qtVzomIN/KpwbPzqdzepLfYP9TEeKfk8W0KnBYRc/Lp599Jmka6nvwI1Fwvf1YYzvmkU493K50nfZYlp1zrOQ+4QdJTEbG8PwisG/LbBKyllP4vd2ZETKrT/eWIWHslh1UrjltJN49Ma3Mc3WV+9AFejYiQNIp0w8nIqjpDSDcuvauLxnkK6WaWetf7zJaLj+CsJfINGlOA++olN+vW3gP8NB/9vMCSI1qzHsNHcGZmVkq+ycTMzErJCc7MzErJCc7MzErJCc7MzErJCc7MzErp/wMUjiQKljUoxAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cost_patient_plot = merged\n",
    "cost_patient_plot['cost_per_patient'] = cost_patient_plot['total_costs_per_practice'] / cost_patient_plot['NUMBER_OF_PATIENTS'] \n",
    "\n",
    "x = cost_patient_plot.cost_per_patient.values\n",
    "\n",
    "plt.hist(x, bins=75)\n",
    "plt.xlabel(\"Monthly prescription spending per patient\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "\n",
    "min_x = floor(cost_patient_plot['cost_per_patient'].quantile(.01))\n",
    "max_x = floor(cost_patient_plot['cost_per_patient'].quantile(.99))\n",
    "plt.xlim(min_x, max_x) #do not show outliers\n",
    "plt.title(\"GP practice monthly total prescription spending per registered patient\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 348,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PRACTICE</th>\n",
       "      <th>total_costs_per_practice</th>\n",
       "      <th>CODE</th>\n",
       "      <th>NUMBER_OF_PATIENTS</th>\n",
       "      <th>cost_per_patient</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A81001</td>\n",
       "      <td>52194.63</td>\n",
       "      <td>A81001</td>\n",
       "      <td>4086</td>\n",
       "      <td>12.774016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A81002</td>\n",
       "      <td>268607.26</td>\n",
       "      <td>A81002</td>\n",
       "      <td>19906</td>\n",
       "      <td>13.493784</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A81004</td>\n",
       "      <td>139115.40</td>\n",
       "      <td>A81004</td>\n",
       "      <td>10165</td>\n",
       "      <td>13.685726</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A81005</td>\n",
       "      <td>102914.06</td>\n",
       "      <td>A81005</td>\n",
       "      <td>8016</td>\n",
       "      <td>12.838580</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A81006</td>\n",
       "      <td>183226.79</td>\n",
       "      <td>A81006</td>\n",
       "      <td>14497</td>\n",
       "      <td>12.638945</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PRACTICE  total_costs_per_practice    CODE  NUMBER_OF_PATIENTS  \\\n",
       "0   A81001                  52194.63  A81001                4086   \n",
       "1   A81002                 268607.26  A81002               19906   \n",
       "2   A81004                 139115.40  A81004               10165   \n",
       "3   A81005                 102914.06  A81005                8016   \n",
       "4   A81006                 183226.79  A81006               14497   \n",
       "\n",
       "   cost_per_patient  \n",
       "0         12.774016  \n",
       "1         13.493784  \n",
       "2         13.685726  \n",
       "3         12.838580  \n",
       "4         12.638945  "
      ]
     },
     "execution_count": 348,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "merged.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 349,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([12.77401615, 13.49378378, 13.68572553, ..., 11.08252614,\n",
       "       10.42213494,  5.77101073])"
      ]
     },
     "execution_count": 349,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cost_patient_plot.cost_per_patient.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 350,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([  28.,   28.,   39.,  104.,  199.,  348.,  440.,  662.,  806.,\n",
       "         995., 1100.,  878.,  633.,  435.,  233.,  102.,   45.,   24.,\n",
       "          12.,   11.,    6.,    4.,    2.,    0.]),\n",
       " array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n",
       "        18, 19, 20, 21, 22, 23, 24, 25]),\n",
       " <a list of 24 Patch objects>)"
      ]
     },
     "execution_count": 350,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "cost_patient_plot = merged\n",
    "cost_patient_plot['cost_per_patient'] = cost_patient_plot['total_costs_per_practice'] / cost_patient_plot['NUMBER_OF_PATIENTS'] \n",
    "\n",
    "x = cost_patient_plot.cost_per_patient.values\n",
    "\n",
    "\n",
    "plt.hist(x,bins=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 351,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([  28.,   28.,   39.,  104.,  199.,  348.,  440.,  662.,  806.,\n",
       "         995., 1100.,  878.,  633.,  435.,  233.,  102.,   45.,   24.,\n",
       "          12.,   11.,    6.,    4.,    2.,    0.]),\n",
       " array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n",
       "        18, 19, 20, 21, 22, 23, 24, 25]),\n",
       " <a list of 24 Patch objects>)"
      ]
     },
     "execution_count": 351,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "cost_patient_plot = merged\n",
    "cost_patient_plot['cost_per_patient'] = cost_patient_plot['total_costs_per_practice'] / cost_patient_plot['NUMBER_OF_PATIENTS'] \n",
    "\n",
    "x = cost_patient_plot.cost_per_patient.values\n",
    "\n",
    "\n",
    "plt.hist(x,bins=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 352,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([12.77401615, 13.49378378, 13.68572553, ..., 11.08252614,\n",
       "       10.42213494,  5.77101073])"
      ]
     },
     "execution_count": 352,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 353,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DescribeResult(nobs=7191, minmax=(0.0017235056839017236, 2830.0200000000004), mean=11.60649702182044, variance=1510.794960549969, skewness=61.27267967093751, kurtosis=4121.292439119283)"
      ]
     },
     "execution_count": 353,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from scipy import stats\n",
    "stats.describe(x)\n",
    "#np.std(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 354,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/michaelshemko/anaconda/envs/py36/lib/python3.6/site-packages/matplotlib/axes/_axes.py:6462: UserWarning: The 'normed' kwarg is deprecated, and has been replaced by the 'density' kwarg.\n",
      "  warnings.warn(\"The 'normed' kwarg is deprecated, and has been \"\n",
      "/Users/michaelshemko/anaconda/envs/py36/lib/python3.6/site-packages/ipykernel_launcher.py:29: MatplotlibDeprecationWarning: scipy.stats.norm.pdf\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/michaelshemko/anaconda/envs/py36/lib/python3.6/site-packages/ipykernel_launcher.py:42: MatplotlibDeprecationWarning: scipy.stats.norm.pdf\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "from scipy.stats import norm\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Fit a normal distribution to the data:\n",
    "#mu, std = norm.fit(x)\n",
    "\n",
    "# Plot the histogram.\n",
    "#plt.hist(x,bins=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25], range=[1, 25])\n",
    "#plt.xlim(xmin=1, xmax = 25)\n",
    "#bins=25\n",
    "#y = mlab.normpdf(bins,mu,std)\n",
    "#plt.plot(bins,y,'r--',linewidth=2)\n",
    "\n",
    "\n",
    "mu = 11.6  # mean of distribution\n",
    "sigma = 38.6  # standard deviation of distribution\n",
    "\n",
    "\n",
    "\n",
    "num_bins = 25\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "# the histogram of the data\n",
    "n, bins, patches = ax.hist(x, num_bins, normed=1)\n",
    "\n",
    "# add a 'best fit' line\n",
    "y = mlab.normpdf(bins, mu, sigma)\n",
    "ax.plot(bins, y, '--')\n",
    "ax.set_xlabel('Smarts')\n",
    "ax.set_ylabel('Probability density')\n",
    "ax.set_title(r'Histogram of IQ: $\\mu=100$, $\\sigma=15$')\n",
    "\n",
    "# Tweak spacing to prevent clipping of ylabel\n",
    "fig.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "\n",
    "#num_bins = 50\n",
    "\n",
    "y = mlab.normpdf(bins, mu, sigma)\n",
    "ax.plot(bins, y, '--')\n",
    "ax.set_xlabel('Smarts')\n",
    "ax.set_ylabel('Probability density')\n",
    "ax.set_title(r'Histogram of IQ: $\\mu=100$, $\\sigma=15$')\n",
    "\n",
    "range=[6.5, 12.5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 355,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([12.77401615, 13.49378378, 13.68572553, ..., 11.08252614,\n",
       "       10.42213494,  5.77101073])"
      ]
     },
     "execution_count": 355,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 356,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([12.77401615, 13.49378378, 13.68572553, ..., 11.08252614,\n",
       "       10.42213494,  5.77101073])"
      ]
     },
     "execution_count": 356,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
